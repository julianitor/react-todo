// This file was generated by modules-webmake (modules for web) project.
// See: https://github.com/medikoo/modules-webmake

(function (modules) {
	'use strict';

	var resolve, getRequire, wmRequire, notFoundError, findFile
	  , extensions = {".js":[],".json":[],".css":[],".html":[]}
	  , envRequire = typeof require === 'undefined' ? null : require;

	notFoundError = function (path) {
		var error = new Error("Could not find module '" + path + "'");
		error.code = 'MODULE_NOT_FOUND';
		return error;
	};
	findFile = function (scope, name, extName) {
		var i, ext;
		if (typeof scope[name + extName] === 'function') return name + extName;
		for (i = 0; (ext = extensions[extName][i]); ++i) {
			if (typeof scope[name + ext] === 'function') return name + ext;
		}
		return null;
	};
	resolve = function (scope, tree, path, fullPath, state, id) {
		var name, dir, exports, module, fn, found, i, ext;
		path = path.split('/');
		name = path.pop();
		if ((name === '.') || (name === '..')) {
			path.push(name);
			name = '';
		}
		while ((dir = path.shift()) != null) {
			if (!dir || (dir === '.')) continue;
			if (dir === '..') {
				scope = tree.pop();
				id = id.slice(0, id.lastIndexOf('/'));
			} else {
				tree.push(scope);
				scope = scope[dir];
				id += '/' + dir;
			}
			if (!scope) throw notFoundError(fullPath);
		}
		if (name && (typeof scope[name] !== 'function')) {
			found = findFile(scope, name, '.js');
			if (!found) found = findFile(scope, name, '.json');
			if (!found) found = findFile(scope, name, '.css');
			if (!found) found = findFile(scope, name, '.html');
			if (found) {
				name = found;
			} else if ((state !== 2) && (typeof scope[name] === 'object')) {
				tree.push(scope);
				scope = scope[name];
				id += '/' + name;
				name = '';
			}
		}
		if (!name) {
			if ((state !== 1) && scope[':mainpath:']) {
				return resolve(scope, tree, scope[':mainpath:'], fullPath, 1, id);
			}
			return resolve(scope, tree, 'index', fullPath, 2, id);
		}
		fn = scope[name];
		if (!fn) throw notFoundError(fullPath);
		if (fn.hasOwnProperty('module')) return fn.module.exports;
		exports = {};
		fn.module = module = { exports: exports, id: id + '/' + name };
		fn.call(exports, exports, module, getRequire(scope, tree, id));
		return module.exports;
	};
	wmRequire = function (scope, tree, fullPath, id) {
		var name, path = fullPath, t = fullPath.charAt(0), state = 0;
		if (t === '/') {
			path = path.slice(1);
			scope = modules['/'];
			if (!scope) {
				if (envRequire) return envRequire(fullPath);
				throw notFoundError(fullPath);
			}
			id = '/';
			tree = [];
		} else if (t !== '.') {
			name = path.split('/', 1)[0];
			scope = modules[name];
			if (!scope) {
				if (envRequire) return envRequire(fullPath);
				throw notFoundError(fullPath);
			}
			id = name;
			tree = [];
			path = path.slice(name.length + 1);
			if (!path) {
				path = scope[':mainpath:'];
				if (path) {
					state = 1;
				} else {
					path = 'index';
					state = 2;
				}
			}
		}
		return resolve(scope, tree, path, fullPath, state, id);
	};
	getRequire = function (scope, tree, id) {
		return function (path) {
			return wmRequire(scope, [].concat(tree), path, id);
		};
	};
	return getRequire(modules, [], '');
})({
	"mori": {
		":mainpath:": "./mori.js",
		"mori.js": function (exports, module, require) {
			(function(definition){if(typeof exports==="object"){module.exports=definition();}else if(typeof define==="function"&&define.amd){define(definition);}else{mori=definition();}})(function(){return function(){
			if(typeof Math.imul == "undefined" || (Math.imul(0xffffffff,5) == 0)) {
			    Math.imul = function (a, b) {
			        var ah  = (a >>> 16) & 0xffff;
			        var al = a & 0xffff;
			        var bh  = (b >>> 16) & 0xffff;
			        var bl = b & 0xffff;
			        // the shift by 0 fixes the sign on the high part
			        // the final |0 converts the unsigned value into a signed value
			        return ((al * bl) + (((ah * bl + al * bh) << 16) >>> 0)|0);
			    }
			}

			var k,aa=this;
			function n(a){var b=typeof a;if("object"==b)if(a){if(a instanceof Array)return"array";if(a instanceof Object)return b;var c=Object.prototype.toString.call(a);if("[object Window]"==c)return"object";if("[object Array]"==c||"number"==typeof a.length&&"undefined"!=typeof a.splice&&"undefined"!=typeof a.propertyIsEnumerable&&!a.propertyIsEnumerable("splice"))return"array";if("[object Function]"==c||"undefined"!=typeof a.call&&"undefined"!=typeof a.propertyIsEnumerable&&!a.propertyIsEnumerable("call"))return"function"}else return"null";else if("function"==
			b&&"undefined"==typeof a.call)return"object";return b}var ba="closure_uid_"+(1E9*Math.random()>>>0),ca=0;function r(a,b){var c=a.split("."),d=aa;c[0]in d||!d.execScript||d.execScript("var "+c[0]);for(var e;c.length&&(e=c.shift());)c.length||void 0===b?d=d[e]?d[e]:d[e]={}:d[e]=b};function da(a){return Array.prototype.join.call(arguments,"")};function ea(a,b){for(var c in a)b.call(void 0,a[c],c,a)};function fa(a,b){null!=a&&this.append.apply(this,arguments)}fa.prototype.Za="";fa.prototype.append=function(a,b,c){this.Za+=a;if(null!=b)for(var d=1;d<arguments.length;d++)this.Za+=arguments[d];return this};fa.prototype.clear=function(){this.Za=""};fa.prototype.toString=function(){return this.Za};function ga(a,b){a.sort(b||ha)}function ia(a,b){for(var c=0;c<a.length;c++)a[c]={index:c,value:a[c]};var d=b||ha;ga(a,function(a,b){return d(a.value,b.value)||a.index-b.index});for(c=0;c<a.length;c++)a[c]=a[c].value}function ha(a,b){return a>b?1:a<b?-1:0};var ja;if("undefined"===typeof ka)var ka=function(){throw Error("No *print-fn* fn set for evaluation environment");};var la=null,ma=null;if("undefined"===typeof na)var na=null;function oa(){return new pa(null,5,[sa,!0,ua,!0,wa,!1,ya,!1,za,la],null)}function t(a){return null!=a&&!1!==a}function Aa(a){return t(a)?!1:!0}function w(a,b){return a[n(null==b?null:b)]?!0:a._?!0:!1}function Ba(a){return null==a?null:a.constructor}
			function x(a,b){var c=Ba(b),c=t(t(c)?c.Yb:c)?c.Xb:n(b);return Error(["No protocol method ",a," defined for type ",c,": ",b].join(""))}function Da(a){var b=a.Xb;return t(b)?b:""+z(a)}var Ea="undefined"!==typeof Symbol&&"function"===n(Symbol)?Symbol.Cc:"@@iterator";function Fa(a){for(var b=a.length,c=Array(b),d=0;;)if(d<b)c[d]=a[d],d+=1;else break;return c}function Ha(a){for(var b=Array(arguments.length),c=0;;)if(c<b.length)b[c]=arguments[c],c+=1;else return b}
			var Ia=function(){function a(a,b){function c(a,b){a.push(b);return a}var g=[];return A.c?A.c(c,g,b):A.call(null,c,g,b)}function b(a){return c.a(null,a)}var c=null,c=function(d,c){switch(arguments.length){case 1:return b.call(this,d);case 2:return a.call(this,0,c)}throw Error("Invalid arity: "+arguments.length);};c.b=b;c.a=a;return c}(),Ja={},La={};function Ma(a){if(a?a.L:a)return a.L(a);var b;b=Ma[n(null==a?null:a)];if(!b&&(b=Ma._,!b))throw x("ICounted.-count",a);return b.call(null,a)}
			function Na(a){if(a?a.J:a)return a.J(a);var b;b=Na[n(null==a?null:a)];if(!b&&(b=Na._,!b))throw x("IEmptyableCollection.-empty",a);return b.call(null,a)}var Qa={};function Ra(a,b){if(a?a.G:a)return a.G(a,b);var c;c=Ra[n(null==a?null:a)];if(!c&&(c=Ra._,!c))throw x("ICollection.-conj",a);return c.call(null,a,b)}
			var Ta={},C=function(){function a(a,b,c){if(a?a.$:a)return a.$(a,b,c);var g;g=C[n(null==a?null:a)];if(!g&&(g=C._,!g))throw x("IIndexed.-nth",a);return g.call(null,a,b,c)}function b(a,b){if(a?a.Q:a)return a.Q(a,b);var c;c=C[n(null==a?null:a)];if(!c&&(c=C._,!c))throw x("IIndexed.-nth",a);return c.call(null,a,b)}var c=null,c=function(d,c,f){switch(arguments.length){case 2:return b.call(this,d,c);case 3:return a.call(this,d,c,f)}throw Error("Invalid arity: "+arguments.length);};c.a=b;c.c=a;return c}(),
			Ua={};function Va(a){if(a?a.N:a)return a.N(a);var b;b=Va[n(null==a?null:a)];if(!b&&(b=Va._,!b))throw x("ISeq.-first",a);return b.call(null,a)}function Wa(a){if(a?a.S:a)return a.S(a);var b;b=Wa[n(null==a?null:a)];if(!b&&(b=Wa._,!b))throw x("ISeq.-rest",a);return b.call(null,a)}
			var Xa={},Za={},$a=function(){function a(a,b,c){if(a?a.s:a)return a.s(a,b,c);var g;g=$a[n(null==a?null:a)];if(!g&&(g=$a._,!g))throw x("ILookup.-lookup",a);return g.call(null,a,b,c)}function b(a,b){if(a?a.t:a)return a.t(a,b);var c;c=$a[n(null==a?null:a)];if(!c&&(c=$a._,!c))throw x("ILookup.-lookup",a);return c.call(null,a,b)}var c=null,c=function(c,e,f){switch(arguments.length){case 2:return b.call(this,c,e);case 3:return a.call(this,c,e,f)}throw Error("Invalid arity: "+arguments.length);};c.a=b;c.c=
			a;return c}(),ab={};function bb(a,b){if(a?a.rb:a)return a.rb(a,b);var c;c=bb[n(null==a?null:a)];if(!c&&(c=bb._,!c))throw x("IAssociative.-contains-key?",a);return c.call(null,a,b)}function cb(a,b,c){if(a?a.Ka:a)return a.Ka(a,b,c);var d;d=cb[n(null==a?null:a)];if(!d&&(d=cb._,!d))throw x("IAssociative.-assoc",a);return d.call(null,a,b,c)}var db={};function eb(a,b){if(a?a.wb:a)return a.wb(a,b);var c;c=eb[n(null==a?null:a)];if(!c&&(c=eb._,!c))throw x("IMap.-dissoc",a);return c.call(null,a,b)}var fb={};
			function hb(a){if(a?a.hb:a)return a.hb(a);var b;b=hb[n(null==a?null:a)];if(!b&&(b=hb._,!b))throw x("IMapEntry.-key",a);return b.call(null,a)}function ib(a){if(a?a.ib:a)return a.ib(a);var b;b=ib[n(null==a?null:a)];if(!b&&(b=ib._,!b))throw x("IMapEntry.-val",a);return b.call(null,a)}var jb={};function kb(a,b){if(a?a.Eb:a)return a.Eb(a,b);var c;c=kb[n(null==a?null:a)];if(!c&&(c=kb._,!c))throw x("ISet.-disjoin",a);return c.call(null,a,b)}
			function lb(a){if(a?a.La:a)return a.La(a);var b;b=lb[n(null==a?null:a)];if(!b&&(b=lb._,!b))throw x("IStack.-peek",a);return b.call(null,a)}function mb(a){if(a?a.Ma:a)return a.Ma(a);var b;b=mb[n(null==a?null:a)];if(!b&&(b=mb._,!b))throw x("IStack.-pop",a);return b.call(null,a)}var nb={};function pb(a,b,c){if(a?a.Ua:a)return a.Ua(a,b,c);var d;d=pb[n(null==a?null:a)];if(!d&&(d=pb._,!d))throw x("IVector.-assoc-n",a);return d.call(null,a,b,c)}
			function qb(a){if(a?a.Ra:a)return a.Ra(a);var b;b=qb[n(null==a?null:a)];if(!b&&(b=qb._,!b))throw x("IDeref.-deref",a);return b.call(null,a)}var rb={};function sb(a){if(a?a.H:a)return a.H(a);var b;b=sb[n(null==a?null:a)];if(!b&&(b=sb._,!b))throw x("IMeta.-meta",a);return b.call(null,a)}var tb={};function ub(a,b){if(a?a.F:a)return a.F(a,b);var c;c=ub[n(null==a?null:a)];if(!c&&(c=ub._,!c))throw x("IWithMeta.-with-meta",a);return c.call(null,a,b)}
			var vb={},wb=function(){function a(a,b,c){if(a?a.O:a)return a.O(a,b,c);var g;g=wb[n(null==a?null:a)];if(!g&&(g=wb._,!g))throw x("IReduce.-reduce",a);return g.call(null,a,b,c)}function b(a,b){if(a?a.R:a)return a.R(a,b);var c;c=wb[n(null==a?null:a)];if(!c&&(c=wb._,!c))throw x("IReduce.-reduce",a);return c.call(null,a,b)}var c=null,c=function(c,e,f){switch(arguments.length){case 2:return b.call(this,c,e);case 3:return a.call(this,c,e,f)}throw Error("Invalid arity: "+arguments.length);};c.a=b;c.c=a;return c}();
			function xb(a,b,c){if(a?a.gb:a)return a.gb(a,b,c);var d;d=xb[n(null==a?null:a)];if(!d&&(d=xb._,!d))throw x("IKVReduce.-kv-reduce",a);return d.call(null,a,b,c)}function yb(a,b){if(a?a.A:a)return a.A(a,b);var c;c=yb[n(null==a?null:a)];if(!c&&(c=yb._,!c))throw x("IEquiv.-equiv",a);return c.call(null,a,b)}function zb(a){if(a?a.B:a)return a.B(a);var b;b=zb[n(null==a?null:a)];if(!b&&(b=zb._,!b))throw x("IHash.-hash",a);return b.call(null,a)}var Bb={};
			function Cb(a){if(a?a.D:a)return a.D(a);var b;b=Cb[n(null==a?null:a)];if(!b&&(b=Cb._,!b))throw x("ISeqable.-seq",a);return b.call(null,a)}var Db={},Eb={},Fb={};function Gb(a){if(a?a.ab:a)return a.ab(a);var b;b=Gb[n(null==a?null:a)];if(!b&&(b=Gb._,!b))throw x("IReversible.-rseq",a);return b.call(null,a)}function Hb(a,b){if(a?a.Hb:a)return a.Hb(a,b);var c;c=Hb[n(null==a?null:a)];if(!c&&(c=Hb._,!c))throw x("ISorted.-sorted-seq",a);return c.call(null,a,b)}
			function Ib(a,b,c){if(a?a.Ib:a)return a.Ib(a,b,c);var d;d=Ib[n(null==a?null:a)];if(!d&&(d=Ib._,!d))throw x("ISorted.-sorted-seq-from",a);return d.call(null,a,b,c)}function Jb(a,b){if(a?a.Gb:a)return a.Gb(a,b);var c;c=Jb[n(null==a?null:a)];if(!c&&(c=Jb._,!c))throw x("ISorted.-entry-key",a);return c.call(null,a,b)}function Kb(a){if(a?a.Fb:a)return a.Fb(a);var b;b=Kb[n(null==a?null:a)];if(!b&&(b=Kb._,!b))throw x("ISorted.-comparator",a);return b.call(null,a)}
			function Lb(a,b){if(a?a.Wb:a)return a.Wb(0,b);var c;c=Lb[n(null==a?null:a)];if(!c&&(c=Lb._,!c))throw x("IWriter.-write",a);return c.call(null,a,b)}var Mb={};function Nb(a,b,c){if(a?a.v:a)return a.v(a,b,c);var d;d=Nb[n(null==a?null:a)];if(!d&&(d=Nb._,!d))throw x("IPrintWithWriter.-pr-writer",a);return d.call(null,a,b,c)}function Ob(a){if(a?a.$a:a)return a.$a(a);var b;b=Ob[n(null==a?null:a)];if(!b&&(b=Ob._,!b))throw x("IEditableCollection.-as-transient",a);return b.call(null,a)}
			function Pb(a,b){if(a?a.Sa:a)return a.Sa(a,b);var c;c=Pb[n(null==a?null:a)];if(!c&&(c=Pb._,!c))throw x("ITransientCollection.-conj!",a);return c.call(null,a,b)}function Qb(a){if(a?a.Ta:a)return a.Ta(a);var b;b=Qb[n(null==a?null:a)];if(!b&&(b=Qb._,!b))throw x("ITransientCollection.-persistent!",a);return b.call(null,a)}function Rb(a,b,c){if(a?a.kb:a)return a.kb(a,b,c);var d;d=Rb[n(null==a?null:a)];if(!d&&(d=Rb._,!d))throw x("ITransientAssociative.-assoc!",a);return d.call(null,a,b,c)}
			function Sb(a,b){if(a?a.Jb:a)return a.Jb(a,b);var c;c=Sb[n(null==a?null:a)];if(!c&&(c=Sb._,!c))throw x("ITransientMap.-dissoc!",a);return c.call(null,a,b)}function Tb(a,b,c){if(a?a.Ub:a)return a.Ub(0,b,c);var d;d=Tb[n(null==a?null:a)];if(!d&&(d=Tb._,!d))throw x("ITransientVector.-assoc-n!",a);return d.call(null,a,b,c)}function Ub(a){if(a?a.Vb:a)return a.Vb();var b;b=Ub[n(null==a?null:a)];if(!b&&(b=Ub._,!b))throw x("ITransientVector.-pop!",a);return b.call(null,a)}
			function Vb(a,b){if(a?a.Tb:a)return a.Tb(0,b);var c;c=Vb[n(null==a?null:a)];if(!c&&(c=Vb._,!c))throw x("ITransientSet.-disjoin!",a);return c.call(null,a,b)}function Xb(a){if(a?a.Pb:a)return a.Pb();var b;b=Xb[n(null==a?null:a)];if(!b&&(b=Xb._,!b))throw x("IChunk.-drop-first",a);return b.call(null,a)}function Yb(a){if(a?a.Cb:a)return a.Cb(a);var b;b=Yb[n(null==a?null:a)];if(!b&&(b=Yb._,!b))throw x("IChunkedSeq.-chunked-first",a);return b.call(null,a)}
			function Zb(a){if(a?a.Db:a)return a.Db(a);var b;b=Zb[n(null==a?null:a)];if(!b&&(b=Zb._,!b))throw x("IChunkedSeq.-chunked-rest",a);return b.call(null,a)}function $b(a){if(a?a.Bb:a)return a.Bb(a);var b;b=$b[n(null==a?null:a)];if(!b&&(b=$b._,!b))throw x("IChunkedNext.-chunked-next",a);return b.call(null,a)}function ac(a,b){if(a?a.bb:a)return a.bb(0,b);var c;c=ac[n(null==a?null:a)];if(!c&&(c=ac._,!c))throw x("IVolatile.-vreset!",a);return c.call(null,a,b)}var bc={};
			function cc(a){if(a?a.fb:a)return a.fb(a);var b;b=cc[n(null==a?null:a)];if(!b&&(b=cc._,!b))throw x("IIterable.-iterator",a);return b.call(null,a)}function dc(a){this.qc=a;this.q=0;this.j=1073741824}dc.prototype.Wb=function(a,b){return this.qc.append(b)};function ec(a){var b=new fa;a.v(null,new dc(b),oa());return""+z(b)}
			var fc="undefined"!==typeof Math.imul&&0!==(Math.imul.a?Math.imul.a(4294967295,5):Math.imul.call(null,4294967295,5))?function(a,b){return Math.imul.a?Math.imul.a(a,b):Math.imul.call(null,a,b)}:function(a,b){var c=a&65535,d=b&65535;return c*d+((a>>>16&65535)*d+c*(b>>>16&65535)<<16>>>0)|0};function gc(a){a=fc(a,3432918353);return fc(a<<15|a>>>-15,461845907)}function hc(a,b){var c=a^b;return fc(c<<13|c>>>-13,5)+3864292196}
			function ic(a,b){var c=a^b,c=fc(c^c>>>16,2246822507),c=fc(c^c>>>13,3266489909);return c^c>>>16}var kc={},lc=0;function mc(a){255<lc&&(kc={},lc=0);var b=kc[a];if("number"!==typeof b){a:if(null!=a)if(b=a.length,0<b){for(var c=0,d=0;;)if(c<b)var e=c+1,d=fc(31,d)+a.charCodeAt(c),c=e;else{b=d;break a}b=void 0}else b=0;else b=0;kc[a]=b;lc+=1}return a=b}
			function nc(a){a&&(a.j&4194304||a.vc)?a=a.B(null):"number"===typeof a?a=(Math.floor.b?Math.floor.b(a):Math.floor.call(null,a))%2147483647:!0===a?a=1:!1===a?a=0:"string"===typeof a?(a=mc(a),0!==a&&(a=gc(a),a=hc(0,a),a=ic(a,4))):a=a instanceof Date?a.valueOf():null==a?0:zb(a);return a}
			function oc(a){var b;b=a.name;var c;a:{c=1;for(var d=0;;)if(c<b.length){var e=c+2,d=hc(d,gc(b.charCodeAt(c-1)|b.charCodeAt(c)<<16));c=e}else{c=d;break a}c=void 0}c=1===(b.length&1)?c^gc(b.charCodeAt(b.length-1)):c;b=ic(c,fc(2,b.length));a=mc(a.ba);return b^a+2654435769+(b<<6)+(b>>2)}function pc(a,b){if(a.ta===b.ta)return 0;var c=Aa(a.ba);if(t(c?b.ba:c))return-1;if(t(a.ba)){if(Aa(b.ba))return 1;c=ha(a.ba,b.ba);return 0===c?ha(a.name,b.name):c}return ha(a.name,b.name)}
			function qc(a,b,c,d,e){this.ba=a;this.name=b;this.ta=c;this.Ya=d;this.Z=e;this.j=2154168321;this.q=4096}k=qc.prototype;k.v=function(a,b){return Lb(b,this.ta)};k.B=function(){var a=this.Ya;return null!=a?a:this.Ya=a=oc(this)};k.F=function(a,b){return new qc(this.ba,this.name,this.ta,this.Ya,b)};k.H=function(){return this.Z};
			k.call=function(){var a=null,a=function(a,c,d){switch(arguments.length){case 2:return $a.c(c,this,null);case 3:return $a.c(c,this,d)}throw Error("Invalid arity: "+arguments.length);};a.a=function(a,c){return $a.c(c,this,null)};a.c=function(a,c,d){return $a.c(c,this,d)};return a}();k.apply=function(a,b){return this.call.apply(this,[this].concat(Fa(b)))};k.b=function(a){return $a.c(a,this,null)};k.a=function(a,b){return $a.c(a,this,b)};k.A=function(a,b){return b instanceof qc?this.ta===b.ta:!1};
			k.toString=function(){return this.ta};var rc=function(){function a(a,b){var c=null!=a?[z(a),z("/"),z(b)].join(""):b;return new qc(a,b,c,null,null)}function b(a){return a instanceof qc?a:c.a(null,a)}var c=null,c=function(c,e){switch(arguments.length){case 1:return b.call(this,c);case 2:return a.call(this,c,e)}throw Error("Invalid arity: "+arguments.length);};c.b=b;c.a=a;return c}();
			function D(a){if(null==a)return null;if(a&&(a.j&8388608||a.mc))return a.D(null);if(a instanceof Array||"string"===typeof a)return 0===a.length?null:new F(a,0);if(w(Bb,a))return Cb(a);throw Error([z(a),z(" is not ISeqable")].join(""));}function G(a){if(null==a)return null;if(a&&(a.j&64||a.jb))return a.N(null);a=D(a);return null==a?null:Va(a)}function H(a){return null!=a?a&&(a.j&64||a.jb)?a.S(null):(a=D(a))?Wa(a):J:J}function K(a){return null==a?null:a&&(a.j&128||a.xb)?a.T(null):D(H(a))}
			var sc=function(){function a(a,b){return null==a?null==b:a===b||yb(a,b)}var b=null,c=function(){function a(b,d,h){var l=null;if(2<arguments.length){for(var l=0,m=Array(arguments.length-2);l<m.length;)m[l]=arguments[l+2],++l;l=new F(m,0)}return c.call(this,b,d,l)}function c(a,d,e){for(;;)if(b.a(a,d))if(K(e))a=d,d=G(e),e=K(e);else return b.a(d,G(e));else return!1}a.i=2;a.f=function(a){var b=G(a);a=K(a);var d=G(a);a=H(a);return c(b,d,a)};a.d=c;return a}(),b=function(b,e,f){switch(arguments.length){case 1:return!0;
			case 2:return a.call(this,b,e);default:var g=null;if(2<arguments.length){for(var g=0,h=Array(arguments.length-2);g<h.length;)h[g]=arguments[g+2],++g;g=new F(h,0)}return c.d(b,e,g)}throw Error("Invalid arity: "+arguments.length);};b.i=2;b.f=c.f;b.b=function(){return!0};b.a=a;b.d=c.d;return b}();function tc(a){this.C=a}tc.prototype.next=function(){if(null!=this.C){var a=G(this.C);this.C=K(this.C);return{done:!1,value:a}}return{done:!0,value:null}};function uc(a){return new tc(D(a))}
			function vc(a,b){var c=gc(a),c=hc(0,c);return ic(c,b)}function wc(a){var b=0,c=1;for(a=D(a);;)if(null!=a)b+=1,c=fc(31,c)+nc(G(a))|0,a=K(a);else return vc(c,b)}function xc(a){var b=0,c=0;for(a=D(a);;)if(null!=a)b+=1,c=c+nc(G(a))|0,a=K(a);else return vc(c,b)}La["null"]=!0;Ma["null"]=function(){return 0};Date.prototype.A=function(a,b){return b instanceof Date&&this.toString()===b.toString()};yb.number=function(a,b){return a===b};rb["function"]=!0;sb["function"]=function(){return null};
			Ja["function"]=!0;zb._=function(a){return a[ba]||(a[ba]=++ca)};function yc(a){this.o=a;this.q=0;this.j=32768}yc.prototype.Ra=function(){return this.o};function Ac(a){return a instanceof yc}function Bc(a){return Ac(a)?L.b?L.b(a):L.call(null,a):a}function L(a){return qb(a)}
			var Cc=function(){function a(a,b,c,d){for(var l=Ma(a);;)if(d<l){var m=C.a(a,d);c=b.a?b.a(c,m):b.call(null,c,m);if(Ac(c))return qb(c);d+=1}else return c}function b(a,b,c){var d=Ma(a),l=c;for(c=0;;)if(c<d){var m=C.a(a,c),l=b.a?b.a(l,m):b.call(null,l,m);if(Ac(l))return qb(l);c+=1}else return l}function c(a,b){var c=Ma(a);if(0===c)return b.l?b.l():b.call(null);for(var d=C.a(a,0),l=1;;)if(l<c){var m=C.a(a,l),d=b.a?b.a(d,m):b.call(null,d,m);if(Ac(d))return qb(d);l+=1}else return d}var d=null,d=function(d,
			f,g,h){switch(arguments.length){case 2:return c.call(this,d,f);case 3:return b.call(this,d,f,g);case 4:return a.call(this,d,f,g,h)}throw Error("Invalid arity: "+arguments.length);};d.a=c;d.c=b;d.n=a;return d}(),Dc=function(){function a(a,b,c,d){for(var l=a.length;;)if(d<l){var m=a[d];c=b.a?b.a(c,m):b.call(null,c,m);if(Ac(c))return qb(c);d+=1}else return c}function b(a,b,c){var d=a.length,l=c;for(c=0;;)if(c<d){var m=a[c],l=b.a?b.a(l,m):b.call(null,l,m);if(Ac(l))return qb(l);c+=1}else return l}function c(a,
			b){var c=a.length;if(0===a.length)return b.l?b.l():b.call(null);for(var d=a[0],l=1;;)if(l<c){var m=a[l],d=b.a?b.a(d,m):b.call(null,d,m);if(Ac(d))return qb(d);l+=1}else return d}var d=null,d=function(d,f,g,h){switch(arguments.length){case 2:return c.call(this,d,f);case 3:return b.call(this,d,f,g);case 4:return a.call(this,d,f,g,h)}throw Error("Invalid arity: "+arguments.length);};d.a=c;d.c=b;d.n=a;return d}();function Ec(a){return a?a.j&2||a.cc?!0:a.j?!1:w(La,a):w(La,a)}
			function Fc(a){return a?a.j&16||a.Qb?!0:a.j?!1:w(Ta,a):w(Ta,a)}function Gc(a,b){this.e=a;this.m=b}Gc.prototype.ga=function(){return this.m<this.e.length};Gc.prototype.next=function(){var a=this.e[this.m];this.m+=1;return a};function F(a,b){this.e=a;this.m=b;this.j=166199550;this.q=8192}k=F.prototype;k.toString=function(){return ec(this)};k.Q=function(a,b){var c=b+this.m;return c<this.e.length?this.e[c]:null};k.$=function(a,b,c){a=b+this.m;return a<this.e.length?this.e[a]:c};k.vb=!0;
			k.fb=function(){return new Gc(this.e,this.m)};k.T=function(){return this.m+1<this.e.length?new F(this.e,this.m+1):null};k.L=function(){return this.e.length-this.m};k.ab=function(){var a=Ma(this);return 0<a?new Hc(this,a-1,null):null};k.B=function(){return wc(this)};k.A=function(a,b){return Ic.a?Ic.a(this,b):Ic.call(null,this,b)};k.J=function(){return J};k.R=function(a,b){return Dc.n(this.e,b,this.e[this.m],this.m+1)};k.O=function(a,b,c){return Dc.n(this.e,b,c,this.m)};k.N=function(){return this.e[this.m]};
			k.S=function(){return this.m+1<this.e.length?new F(this.e,this.m+1):J};k.D=function(){return this};k.G=function(a,b){return M.a?M.a(b,this):M.call(null,b,this)};F.prototype[Ea]=function(){return uc(this)};
			var Jc=function(){function a(a,b){return b<a.length?new F(a,b):null}function b(a){return c.a(a,0)}var c=null,c=function(c,e){switch(arguments.length){case 1:return b.call(this,c);case 2:return a.call(this,c,e)}throw Error("Invalid arity: "+arguments.length);};c.b=b;c.a=a;return c}(),Kc=function(){function a(a,b){return Jc.a(a,b)}function b(a){return Jc.a(a,0)}var c=null,c=function(c,e){switch(arguments.length){case 1:return b.call(this,c);case 2:return a.call(this,c,e)}throw Error("Invalid arity: "+
			arguments.length);};c.b=b;c.a=a;return c}();function Hc(a,b,c){this.qb=a;this.m=b;this.k=c;this.j=32374990;this.q=8192}k=Hc.prototype;k.toString=function(){return ec(this)};k.H=function(){return this.k};k.T=function(){return 0<this.m?new Hc(this.qb,this.m-1,null):null};k.L=function(){return this.m+1};k.B=function(){return wc(this)};k.A=function(a,b){return Ic.a?Ic.a(this,b):Ic.call(null,this,b)};k.J=function(){var a=this.k;return O.a?O.a(J,a):O.call(null,J,a)};
			k.R=function(a,b){return P.a?P.a(b,this):P.call(null,b,this)};k.O=function(a,b,c){return P.c?P.c(b,c,this):P.call(null,b,c,this)};k.N=function(){return C.a(this.qb,this.m)};k.S=function(){return 0<this.m?new Hc(this.qb,this.m-1,null):J};k.D=function(){return this};k.F=function(a,b){return new Hc(this.qb,this.m,b)};k.G=function(a,b){return M.a?M.a(b,this):M.call(null,b,this)};Hc.prototype[Ea]=function(){return uc(this)};function Lc(a){return G(K(a))}yb._=function(a,b){return a===b};
			var Nc=function(){function a(a,b){return null!=a?Ra(a,b):Ra(J,b)}var b=null,c=function(){function a(b,d,h){var l=null;if(2<arguments.length){for(var l=0,m=Array(arguments.length-2);l<m.length;)m[l]=arguments[l+2],++l;l=new F(m,0)}return c.call(this,b,d,l)}function c(a,d,e){for(;;)if(t(e))a=b.a(a,d),d=G(e),e=K(e);else return b.a(a,d)}a.i=2;a.f=function(a){var b=G(a);a=K(a);var d=G(a);a=H(a);return c(b,d,a)};a.d=c;return a}(),b=function(b,e,f){switch(arguments.length){case 0:return Mc;case 1:return b;
			case 2:return a.call(this,b,e);default:var g=null;if(2<arguments.length){for(var g=0,h=Array(arguments.length-2);g<h.length;)h[g]=arguments[g+2],++g;g=new F(h,0)}return c.d(b,e,g)}throw Error("Invalid arity: "+arguments.length);};b.i=2;b.f=c.f;b.l=function(){return Mc};b.b=function(a){return a};b.a=a;b.d=c.d;return b}();function Oc(a){return null==a?null:Na(a)}
			function Q(a){if(null!=a)if(a&&(a.j&2||a.cc))a=a.L(null);else if(a instanceof Array)a=a.length;else if("string"===typeof a)a=a.length;else if(w(La,a))a=Ma(a);else a:{a=D(a);for(var b=0;;){if(Ec(a)){a=b+Ma(a);break a}a=K(a);b+=1}a=void 0}else a=0;return a}
			var Pc=function(){function a(a,b,c){for(;;){if(null==a)return c;if(0===b)return D(a)?G(a):c;if(Fc(a))return C.c(a,b,c);if(D(a))a=K(a),b-=1;else return c}}function b(a,b){for(;;){if(null==a)throw Error("Index out of bounds");if(0===b){if(D(a))return G(a);throw Error("Index out of bounds");}if(Fc(a))return C.a(a,b);if(D(a)){var c=K(a),g=b-1;a=c;b=g}else throw Error("Index out of bounds");}}var c=null,c=function(c,e,f){switch(arguments.length){case 2:return b.call(this,c,e);case 3:return a.call(this,
			c,e,f)}throw Error("Invalid arity: "+arguments.length);};c.a=b;c.c=a;return c}(),R=function(){function a(a,b,c){if("number"!==typeof b)throw Error("index argument to nth must be a number.");if(null==a)return c;if(a&&(a.j&16||a.Qb))return a.$(null,b,c);if(a instanceof Array||"string"===typeof a)return b<a.length?a[b]:c;if(w(Ta,a))return C.a(a,b);if(a?a.j&64||a.jb||(a.j?0:w(Ua,a)):w(Ua,a))return Pc.c(a,b,c);throw Error([z("nth not supported on this type "),z(Da(Ba(a)))].join(""));}function b(a,b){if("number"!==
			typeof b)throw Error("index argument to nth must be a number");if(null==a)return a;if(a&&(a.j&16||a.Qb))return a.Q(null,b);if(a instanceof Array||"string"===typeof a)return b<a.length?a[b]:null;if(w(Ta,a))return C.a(a,b);if(a?a.j&64||a.jb||(a.j?0:w(Ua,a)):w(Ua,a))return Pc.a(a,b);throw Error([z("nth not supported on this type "),z(Da(Ba(a)))].join(""));}var c=null,c=function(c,e,f){switch(arguments.length){case 2:return b.call(this,c,e);case 3:return a.call(this,c,e,f)}throw Error("Invalid arity: "+
			arguments.length);};c.a=b;c.c=a;return c}(),S=function(){function a(a,b,c){return null!=a?a&&(a.j&256||a.Rb)?a.s(null,b,c):a instanceof Array?b<a.length?a[b]:c:"string"===typeof a?b<a.length?a[b]:c:w(Za,a)?$a.c(a,b,c):c:c}function b(a,b){return null==a?null:a&&(a.j&256||a.Rb)?a.t(null,b):a instanceof Array?b<a.length?a[b]:null:"string"===typeof a?b<a.length?a[b]:null:w(Za,a)?$a.a(a,b):null}var c=null,c=function(c,e,f){switch(arguments.length){case 2:return b.call(this,c,e);case 3:return a.call(this,
			c,e,f)}throw Error("Invalid arity: "+arguments.length);};c.a=b;c.c=a;return c}(),Rc=function(){function a(a,b,c){if(null!=a)a=cb(a,b,c);else a:{a=[b];c=[c];b=a.length;for(var g=0,h=Ob(Qc);;)if(g<b)var l=g+1,h=h.kb(null,a[g],c[g]),g=l;else{a=Qb(h);break a}a=void 0}return a}var b=null,c=function(){function a(b,d,h,l){var m=null;if(3<arguments.length){for(var m=0,p=Array(arguments.length-3);m<p.length;)p[m]=arguments[m+3],++m;m=new F(p,0)}return c.call(this,b,d,h,m)}function c(a,d,e,l){for(;;)if(a=b.c(a,
			d,e),t(l))d=G(l),e=Lc(l),l=K(K(l));else return a}a.i=3;a.f=function(a){var b=G(a);a=K(a);var d=G(a);a=K(a);var l=G(a);a=H(a);return c(b,d,l,a)};a.d=c;return a}(),b=function(b,e,f,g){switch(arguments.length){case 3:return a.call(this,b,e,f);default:var h=null;if(3<arguments.length){for(var h=0,l=Array(arguments.length-3);h<l.length;)l[h]=arguments[h+3],++h;h=new F(l,0)}return c.d(b,e,f,h)}throw Error("Invalid arity: "+arguments.length);};b.i=3;b.f=c.f;b.c=a;b.d=c.d;return b}(),Sc=function(){function a(a,
			b){return null==a?null:eb(a,b)}var b=null,c=function(){function a(b,d,h){var l=null;if(2<arguments.length){for(var l=0,m=Array(arguments.length-2);l<m.length;)m[l]=arguments[l+2],++l;l=new F(m,0)}return c.call(this,b,d,l)}function c(a,d,e){for(;;){if(null==a)return null;a=b.a(a,d);if(t(e))d=G(e),e=K(e);else return a}}a.i=2;a.f=function(a){var b=G(a);a=K(a);var d=G(a);a=H(a);return c(b,d,a)};a.d=c;return a}(),b=function(b,e,f){switch(arguments.length){case 1:return b;case 2:return a.call(this,b,e);
			default:var g=null;if(2<arguments.length){for(var g=0,h=Array(arguments.length-2);g<h.length;)h[g]=arguments[g+2],++g;g=new F(h,0)}return c.d(b,e,g)}throw Error("Invalid arity: "+arguments.length);};b.i=2;b.f=c.f;b.b=function(a){return a};b.a=a;b.d=c.d;return b}();function Tc(a){var b="function"==n(a);return t(b)?b:a?t(t(null)?null:a.bc)?!0:a.yb?!1:w(Ja,a):w(Ja,a)}function Uc(a,b){this.h=a;this.k=b;this.q=0;this.j=393217}k=Uc.prototype;
			k.call=function(){function a(a,b,c,d,e,f,g,h,l,m,p,q,u,s,v,y,B,E,N,Y,ra,I){a=this.h;return T.ub?T.ub(a,b,c,d,e,f,g,h,l,m,p,q,u,s,v,y,B,E,N,Y,ra,I):T.call(null,a,b,c,d,e,f,g,h,l,m,p,q,u,s,v,y,B,E,N,Y,ra,I)}function b(a,b,c,d,e,f,g,h,l,m,p,q,u,s,v,y,B,E,N,Y,ra){a=this;return a.h.Fa?a.h.Fa(b,c,d,e,f,g,h,l,m,p,q,u,s,v,y,B,E,N,Y,ra):a.h.call(null,b,c,d,e,f,g,h,l,m,p,q,u,s,v,y,B,E,N,Y,ra)}function c(a,b,c,d,e,f,g,h,l,m,p,q,u,s,v,y,B,E,N,Y){a=this;return a.h.Ea?a.h.Ea(b,c,d,e,f,g,h,l,m,p,q,u,s,v,y,B,E,N,
			Y):a.h.call(null,b,c,d,e,f,g,h,l,m,p,q,u,s,v,y,B,E,N,Y)}function d(a,b,c,d,e,f,g,h,l,m,p,q,u,s,v,y,B,E,N){a=this;return a.h.Da?a.h.Da(b,c,d,e,f,g,h,l,m,p,q,u,s,v,y,B,E,N):a.h.call(null,b,c,d,e,f,g,h,l,m,p,q,u,s,v,y,B,E,N)}function e(a,b,c,d,e,f,g,h,l,m,p,q,u,s,v,y,B,E){a=this;return a.h.Ca?a.h.Ca(b,c,d,e,f,g,h,l,m,p,q,u,s,v,y,B,E):a.h.call(null,b,c,d,e,f,g,h,l,m,p,q,u,s,v,y,B,E)}function f(a,b,c,d,e,f,g,h,l,m,p,q,u,s,v,y,B){a=this;return a.h.Ba?a.h.Ba(b,c,d,e,f,g,h,l,m,p,q,u,s,v,y,B):a.h.call(null,
			b,c,d,e,f,g,h,l,m,p,q,u,s,v,y,B)}function g(a,b,c,d,e,f,g,h,l,m,p,q,u,s,v,y){a=this;return a.h.Aa?a.h.Aa(b,c,d,e,f,g,h,l,m,p,q,u,s,v,y):a.h.call(null,b,c,d,e,f,g,h,l,m,p,q,u,s,v,y)}function h(a,b,c,d,e,f,g,h,l,m,p,q,u,s,v){a=this;return a.h.za?a.h.za(b,c,d,e,f,g,h,l,m,p,q,u,s,v):a.h.call(null,b,c,d,e,f,g,h,l,m,p,q,u,s,v)}function l(a,b,c,d,e,f,g,h,l,m,p,q,u,s){a=this;return a.h.ya?a.h.ya(b,c,d,e,f,g,h,l,m,p,q,u,s):a.h.call(null,b,c,d,e,f,g,h,l,m,p,q,u,s)}function m(a,b,c,d,e,f,g,h,l,m,p,q,u){a=this;
			return a.h.xa?a.h.xa(b,c,d,e,f,g,h,l,m,p,q,u):a.h.call(null,b,c,d,e,f,g,h,l,m,p,q,u)}function p(a,b,c,d,e,f,g,h,l,m,p,q){a=this;return a.h.wa?a.h.wa(b,c,d,e,f,g,h,l,m,p,q):a.h.call(null,b,c,d,e,f,g,h,l,m,p,q)}function q(a,b,c,d,e,f,g,h,l,m,p){a=this;return a.h.va?a.h.va(b,c,d,e,f,g,h,l,m,p):a.h.call(null,b,c,d,e,f,g,h,l,m,p)}function s(a,b,c,d,e,f,g,h,l,m){a=this;return a.h.Ha?a.h.Ha(b,c,d,e,f,g,h,l,m):a.h.call(null,b,c,d,e,f,g,h,l,m)}function u(a,b,c,d,e,f,g,h,l){a=this;return a.h.Ga?a.h.Ga(b,c,
			d,e,f,g,h,l):a.h.call(null,b,c,d,e,f,g,h,l)}function v(a,b,c,d,e,f,g,h){a=this;return a.h.ia?a.h.ia(b,c,d,e,f,g,h):a.h.call(null,b,c,d,e,f,g,h)}function y(a,b,c,d,e,f,g){a=this;return a.h.P?a.h.P(b,c,d,e,f,g):a.h.call(null,b,c,d,e,f,g)}function B(a,b,c,d,e,f){a=this;return a.h.r?a.h.r(b,c,d,e,f):a.h.call(null,b,c,d,e,f)}function E(a,b,c,d,e){a=this;return a.h.n?a.h.n(b,c,d,e):a.h.call(null,b,c,d,e)}function N(a,b,c,d){a=this;return a.h.c?a.h.c(b,c,d):a.h.call(null,b,c,d)}function Y(a,b,c){a=this;
			return a.h.a?a.h.a(b,c):a.h.call(null,b,c)}function ra(a,b){a=this;return a.h.b?a.h.b(b):a.h.call(null,b)}function Pa(a){a=this;return a.h.l?a.h.l():a.h.call(null)}var I=null,I=function(I,qa,ta,va,xa,Ca,Ga,Ka,Oa,Sa,Ya,gb,ob,Ab,Wb,jc,zc,Zc,Gd,De,Wf,dh){switch(arguments.length){case 1:return Pa.call(this,I);case 2:return ra.call(this,I,qa);case 3:return Y.call(this,I,qa,ta);case 4:return N.call(this,I,qa,ta,va);case 5:return E.call(this,I,qa,ta,va,xa);case 6:return B.call(this,I,qa,ta,va,xa,Ca);case 7:return y.call(this,
			I,qa,ta,va,xa,Ca,Ga);case 8:return v.call(this,I,qa,ta,va,xa,Ca,Ga,Ka);case 9:return u.call(this,I,qa,ta,va,xa,Ca,Ga,Ka,Oa);case 10:return s.call(this,I,qa,ta,va,xa,Ca,Ga,Ka,Oa,Sa);case 11:return q.call(this,I,qa,ta,va,xa,Ca,Ga,Ka,Oa,Sa,Ya);case 12:return p.call(this,I,qa,ta,va,xa,Ca,Ga,Ka,Oa,Sa,Ya,gb);case 13:return m.call(this,I,qa,ta,va,xa,Ca,Ga,Ka,Oa,Sa,Ya,gb,ob);case 14:return l.call(this,I,qa,ta,va,xa,Ca,Ga,Ka,Oa,Sa,Ya,gb,ob,Ab);case 15:return h.call(this,I,qa,ta,va,xa,Ca,Ga,Ka,Oa,Sa,Ya,gb,
			ob,Ab,Wb);case 16:return g.call(this,I,qa,ta,va,xa,Ca,Ga,Ka,Oa,Sa,Ya,gb,ob,Ab,Wb,jc);case 17:return f.call(this,I,qa,ta,va,xa,Ca,Ga,Ka,Oa,Sa,Ya,gb,ob,Ab,Wb,jc,zc);case 18:return e.call(this,I,qa,ta,va,xa,Ca,Ga,Ka,Oa,Sa,Ya,gb,ob,Ab,Wb,jc,zc,Zc);case 19:return d.call(this,I,qa,ta,va,xa,Ca,Ga,Ka,Oa,Sa,Ya,gb,ob,Ab,Wb,jc,zc,Zc,Gd);case 20:return c.call(this,I,qa,ta,va,xa,Ca,Ga,Ka,Oa,Sa,Ya,gb,ob,Ab,Wb,jc,zc,Zc,Gd,De);case 21:return b.call(this,I,qa,ta,va,xa,Ca,Ga,Ka,Oa,Sa,Ya,gb,ob,Ab,Wb,jc,zc,Zc,Gd,De,
			Wf);case 22:return a.call(this,I,qa,ta,va,xa,Ca,Ga,Ka,Oa,Sa,Ya,gb,ob,Ab,Wb,jc,zc,Zc,Gd,De,Wf,dh)}throw Error("Invalid arity: "+arguments.length);};I.b=Pa;I.a=ra;I.c=Y;I.n=N;I.r=E;I.P=B;I.ia=y;I.Ga=v;I.Ha=u;I.va=s;I.wa=q;I.xa=p;I.ya=m;I.za=l;I.Aa=h;I.Ba=g;I.Ca=f;I.Da=e;I.Ea=d;I.Fa=c;I.hc=b;I.ub=a;return I}();k.apply=function(a,b){return this.call.apply(this,[this].concat(Fa(b)))};k.l=function(){return this.h.l?this.h.l():this.h.call(null)};
			k.b=function(a){return this.h.b?this.h.b(a):this.h.call(null,a)};k.a=function(a,b){return this.h.a?this.h.a(a,b):this.h.call(null,a,b)};k.c=function(a,b,c){return this.h.c?this.h.c(a,b,c):this.h.call(null,a,b,c)};k.n=function(a,b,c,d){return this.h.n?this.h.n(a,b,c,d):this.h.call(null,a,b,c,d)};k.r=function(a,b,c,d,e){return this.h.r?this.h.r(a,b,c,d,e):this.h.call(null,a,b,c,d,e)};k.P=function(a,b,c,d,e,f){return this.h.P?this.h.P(a,b,c,d,e,f):this.h.call(null,a,b,c,d,e,f)};
			k.ia=function(a,b,c,d,e,f,g){return this.h.ia?this.h.ia(a,b,c,d,e,f,g):this.h.call(null,a,b,c,d,e,f,g)};k.Ga=function(a,b,c,d,e,f,g,h){return this.h.Ga?this.h.Ga(a,b,c,d,e,f,g,h):this.h.call(null,a,b,c,d,e,f,g,h)};k.Ha=function(a,b,c,d,e,f,g,h,l){return this.h.Ha?this.h.Ha(a,b,c,d,e,f,g,h,l):this.h.call(null,a,b,c,d,e,f,g,h,l)};k.va=function(a,b,c,d,e,f,g,h,l,m){return this.h.va?this.h.va(a,b,c,d,e,f,g,h,l,m):this.h.call(null,a,b,c,d,e,f,g,h,l,m)};
			k.wa=function(a,b,c,d,e,f,g,h,l,m,p){return this.h.wa?this.h.wa(a,b,c,d,e,f,g,h,l,m,p):this.h.call(null,a,b,c,d,e,f,g,h,l,m,p)};k.xa=function(a,b,c,d,e,f,g,h,l,m,p,q){return this.h.xa?this.h.xa(a,b,c,d,e,f,g,h,l,m,p,q):this.h.call(null,a,b,c,d,e,f,g,h,l,m,p,q)};k.ya=function(a,b,c,d,e,f,g,h,l,m,p,q,s){return this.h.ya?this.h.ya(a,b,c,d,e,f,g,h,l,m,p,q,s):this.h.call(null,a,b,c,d,e,f,g,h,l,m,p,q,s)};
			k.za=function(a,b,c,d,e,f,g,h,l,m,p,q,s,u){return this.h.za?this.h.za(a,b,c,d,e,f,g,h,l,m,p,q,s,u):this.h.call(null,a,b,c,d,e,f,g,h,l,m,p,q,s,u)};k.Aa=function(a,b,c,d,e,f,g,h,l,m,p,q,s,u,v){return this.h.Aa?this.h.Aa(a,b,c,d,e,f,g,h,l,m,p,q,s,u,v):this.h.call(null,a,b,c,d,e,f,g,h,l,m,p,q,s,u,v)};k.Ba=function(a,b,c,d,e,f,g,h,l,m,p,q,s,u,v,y){return this.h.Ba?this.h.Ba(a,b,c,d,e,f,g,h,l,m,p,q,s,u,v,y):this.h.call(null,a,b,c,d,e,f,g,h,l,m,p,q,s,u,v,y)};
			k.Ca=function(a,b,c,d,e,f,g,h,l,m,p,q,s,u,v,y,B){return this.h.Ca?this.h.Ca(a,b,c,d,e,f,g,h,l,m,p,q,s,u,v,y,B):this.h.call(null,a,b,c,d,e,f,g,h,l,m,p,q,s,u,v,y,B)};k.Da=function(a,b,c,d,e,f,g,h,l,m,p,q,s,u,v,y,B,E){return this.h.Da?this.h.Da(a,b,c,d,e,f,g,h,l,m,p,q,s,u,v,y,B,E):this.h.call(null,a,b,c,d,e,f,g,h,l,m,p,q,s,u,v,y,B,E)};
			k.Ea=function(a,b,c,d,e,f,g,h,l,m,p,q,s,u,v,y,B,E,N){return this.h.Ea?this.h.Ea(a,b,c,d,e,f,g,h,l,m,p,q,s,u,v,y,B,E,N):this.h.call(null,a,b,c,d,e,f,g,h,l,m,p,q,s,u,v,y,B,E,N)};k.Fa=function(a,b,c,d,e,f,g,h,l,m,p,q,s,u,v,y,B,E,N,Y){return this.h.Fa?this.h.Fa(a,b,c,d,e,f,g,h,l,m,p,q,s,u,v,y,B,E,N,Y):this.h.call(null,a,b,c,d,e,f,g,h,l,m,p,q,s,u,v,y,B,E,N,Y)};
			k.hc=function(a,b,c,d,e,f,g,h,l,m,p,q,s,u,v,y,B,E,N,Y,ra){var Pa=this.h;return T.ub?T.ub(Pa,a,b,c,d,e,f,g,h,l,m,p,q,s,u,v,y,B,E,N,Y,ra):T.call(null,Pa,a,b,c,d,e,f,g,h,l,m,p,q,s,u,v,y,B,E,N,Y,ra)};k.bc=!0;k.F=function(a,b){return new Uc(this.h,b)};k.H=function(){return this.k};function O(a,b){return Tc(a)&&!(a?a.j&262144||a.Bc||(a.j?0:w(tb,a)):w(tb,a))?new Uc(a,b):null==a?null:ub(a,b)}function Vc(a){var b=null!=a;return(b?a?a.j&131072||a.kc||(a.j?0:w(rb,a)):w(rb,a):b)?sb(a):null}
			function Wc(a){return null==a?null:lb(a)}
			var Xc=function(){function a(a,b){return null==a?null:kb(a,b)}var b=null,c=function(){function a(b,d,h){var l=null;if(2<arguments.length){for(var l=0,m=Array(arguments.length-2);l<m.length;)m[l]=arguments[l+2],++l;l=new F(m,0)}return c.call(this,b,d,l)}function c(a,d,e){for(;;){if(null==a)return null;a=b.a(a,d);if(t(e))d=G(e),e=K(e);else return a}}a.i=2;a.f=function(a){var b=G(a);a=K(a);var d=G(a);a=H(a);return c(b,d,a)};a.d=c;return a}(),b=function(b,e,f){switch(arguments.length){case 1:return b;case 2:return a.call(this,
			b,e);default:var g=null;if(2<arguments.length){for(var g=0,h=Array(arguments.length-2);g<h.length;)h[g]=arguments[g+2],++g;g=new F(h,0)}return c.d(b,e,g)}throw Error("Invalid arity: "+arguments.length);};b.i=2;b.f=c.f;b.b=function(a){return a};b.a=a;b.d=c.d;return b}();function Yc(a){return null==a||Aa(D(a))}function $c(a){return null==a?!1:a?a.j&8||a.tc?!0:a.j?!1:w(Qa,a):w(Qa,a)}function ad(a){return null==a?!1:a?a.j&4096||a.zc?!0:a.j?!1:w(jb,a):w(jb,a)}
			function bd(a){return a?a.j&512||a.rc?!0:a.j?!1:w(ab,a):w(ab,a)}function cd(a){return a?a.j&16777216||a.yc?!0:a.j?!1:w(Db,a):w(Db,a)}function dd(a){return null==a?!1:a?a.j&1024||a.ic?!0:a.j?!1:w(db,a):w(db,a)}function ed(a){return a?a.j&16384||a.Ac?!0:a.j?!1:w(nb,a):w(nb,a)}function fd(a){return a?a.q&512||a.sc?!0:!1:!1}function gd(a){var b=[];ea(a,function(a,b){return function(a,c){return b.push(c)}}(a,b));return b}function hd(a,b,c,d,e){for(;0!==e;)c[d]=a[b],d+=1,e-=1,b+=1}
			function id(a,b,c,d,e){b+=e-1;for(d+=e-1;0!==e;)c[d]=a[b],d-=1,e-=1,b-=1}var jd={};function kd(a){return null==a?!1:a?a.j&64||a.jb?!0:a.j?!1:w(Ua,a):w(Ua,a)}function ld(a){return a?a.j&8388608||a.mc?!0:a.j?!1:w(Bb,a):w(Bb,a)}function md(a){return t(a)?!0:!1}function nd(a,b){return S.c(a,b,jd)===jd?!1:!0}
			function od(a,b){if(a===b)return 0;if(null==a)return-1;if(null==b)return 1;if(Ba(a)===Ba(b))return a&&(a.q&2048||a.sb)?a.tb(null,b):ha(a,b);throw Error("compare on non-nil objects of different types");}
			var pd=function(){function a(a,b,c,g){for(;;){var h=od(R.a(a,g),R.a(b,g));if(0===h&&g+1<c)g+=1;else return h}}function b(a,b){var f=Q(a),g=Q(b);return f<g?-1:f>g?1:c.n(a,b,f,0)}var c=null,c=function(c,e,f,g){switch(arguments.length){case 2:return b.call(this,c,e);case 4:return a.call(this,c,e,f,g)}throw Error("Invalid arity: "+arguments.length);};c.a=b;c.n=a;return c}();
			function qd(a){return sc.a(a,od)?od:function(b,c){var d=a.a?a.a(b,c):a.call(null,b,c);return"number"===typeof d?d:t(d)?-1:t(a.a?a.a(c,b):a.call(null,c,b))?1:0}}
			var sd=function(){function a(a,b){if(D(b)){var c=rd.b?rd.b(b):rd.call(null,b),g=qd(a);ia(c,g);return D(c)}return J}function b(a){return c.a(od,a)}var c=null,c=function(c,e){switch(arguments.length){case 1:return b.call(this,c);case 2:return a.call(this,c,e)}throw Error("Invalid arity: "+arguments.length);};c.b=b;c.a=a;return c}(),td=function(){function a(a,b,c){return sd.a(function(c,f){return qd(b).call(null,a.b?a.b(c):a.call(null,c),a.b?a.b(f):a.call(null,f))},c)}function b(a,b){return c.c(a,od,
			b)}var c=null,c=function(c,e,f){switch(arguments.length){case 2:return b.call(this,c,e);case 3:return a.call(this,c,e,f)}throw Error("Invalid arity: "+arguments.length);};c.a=b;c.c=a;return c}(),P=function(){function a(a,b,c){for(c=D(c);;)if(c){var g=G(c);b=a.a?a.a(b,g):a.call(null,b,g);if(Ac(b))return qb(b);c=K(c)}else return b}function b(a,b){var c=D(b);if(c){var g=G(c),c=K(c);return A.c?A.c(a,g,c):A.call(null,a,g,c)}return a.l?a.l():a.call(null)}var c=null,c=function(c,e,f){switch(arguments.length){case 2:return b.call(this,
			c,e);case 3:return a.call(this,c,e,f)}throw Error("Invalid arity: "+arguments.length);};c.a=b;c.c=a;return c}(),A=function(){function a(a,b,c){return c&&(c.j&524288||c.Sb)?c.O(null,a,b):c instanceof Array?Dc.c(c,a,b):"string"===typeof c?Dc.c(c,a,b):w(vb,c)?wb.c(c,a,b):P.c(a,b,c)}function b(a,b){return b&&(b.j&524288||b.Sb)?b.R(null,a):b instanceof Array?Dc.a(b,a):"string"===typeof b?Dc.a(b,a):w(vb,b)?wb.a(b,a):P.a(a,b)}var c=null,c=function(c,e,f){switch(arguments.length){case 2:return b.call(this,
			c,e);case 3:return a.call(this,c,e,f)}throw Error("Invalid arity: "+arguments.length);};c.a=b;c.c=a;return c}();function ud(a){return a}
			var vd=function(){function a(a,b){return function(){function c(b,e){return a.a?a.a(b,e):a.call(null,b,e)}function g(a){return b.b?b.b(a):b.call(null,a)}function h(){return a.l?a.l():a.call(null)}var l=null,l=function(a,b){switch(arguments.length){case 0:return h.call(this);case 1:return g.call(this,a);case 2:return c.call(this,a,b)}throw Error("Invalid arity: "+arguments.length);};l.l=h;l.b=g;l.a=c;return l}()}function b(a){return c.a(a,ud)}var c=null,c=function(c,e){switch(arguments.length){case 1:return b.call(this,
			c);case 2:return a.call(this,c,e)}throw Error("Invalid arity: "+arguments.length);};c.b=b;c.a=a;return c}(),wd=function(){function a(a,b,c,g){a=a.b?a.b(b):a.call(null,b);c=A.c(a,c,g);return a.b?a.b(c):a.call(null,c)}function b(a,b,f){return c.n(a,b,b.l?b.l():b.call(null),f)}var c=null,c=function(c,e,f,g){switch(arguments.length){case 3:return b.call(this,c,e,f);case 4:return a.call(this,c,e,f,g)}throw Error("Invalid arity: "+arguments.length);};c.c=b;c.n=a;return c}(),xd=function(){var a=null,b=function(){function b(a,
			c,g){var h=null;if(2<arguments.length){for(var h=0,l=Array(arguments.length-2);h<l.length;)l[h]=arguments[h+2],++h;h=new F(l,0)}return d.call(this,a,c,h)}function d(b,c,d){return A.c(a,b+c,d)}b.i=2;b.f=function(a){var b=G(a);a=K(a);var c=G(a);a=H(a);return d(b,c,a)};b.d=d;return b}(),a=function(a,d,e){switch(arguments.length){case 0:return 0;case 1:return a;case 2:return a+d;default:var f=null;if(2<arguments.length){for(var f=0,g=Array(arguments.length-2);f<g.length;)g[f]=arguments[f+2],++f;f=new F(g,
			0)}return b.d(a,d,f)}throw Error("Invalid arity: "+arguments.length);};a.i=2;a.f=b.f;a.l=function(){return 0};a.b=function(a){return a};a.a=function(a,b){return a+b};a.d=b.d;return a}(),yd=function(){var a=null,b=function(){function a(c,f,g){var h=null;if(2<arguments.length){for(var h=0,l=Array(arguments.length-2);h<l.length;)l[h]=arguments[h+2],++h;h=new F(l,0)}return b.call(this,c,f,h)}function b(a,c,d){for(;;)if(a<c)if(K(d))a=c,c=G(d),d=K(d);else return c<G(d);else return!1}a.i=2;a.f=function(a){var c=
			G(a);a=K(a);var g=G(a);a=H(a);return b(c,g,a)};a.d=b;return a}(),a=function(a,d,e){switch(arguments.length){case 1:return!0;case 2:return a<d;default:var f=null;if(2<arguments.length){for(var f=0,g=Array(arguments.length-2);f<g.length;)g[f]=arguments[f+2],++f;f=new F(g,0)}return b.d(a,d,f)}throw Error("Invalid arity: "+arguments.length);};a.i=2;a.f=b.f;a.b=function(){return!0};a.a=function(a,b){return a<b};a.d=b.d;return a}(),zd=function(){var a=null,b=function(){function a(c,f,g){var h=null;if(2<
			arguments.length){for(var h=0,l=Array(arguments.length-2);h<l.length;)l[h]=arguments[h+2],++h;h=new F(l,0)}return b.call(this,c,f,h)}function b(a,c,d){for(;;)if(a<=c)if(K(d))a=c,c=G(d),d=K(d);else return c<=G(d);else return!1}a.i=2;a.f=function(a){var c=G(a);a=K(a);var g=G(a);a=H(a);return b(c,g,a)};a.d=b;return a}(),a=function(a,d,e){switch(arguments.length){case 1:return!0;case 2:return a<=d;default:var f=null;if(2<arguments.length){for(var f=0,g=Array(arguments.length-2);f<g.length;)g[f]=arguments[f+
			2],++f;f=new F(g,0)}return b.d(a,d,f)}throw Error("Invalid arity: "+arguments.length);};a.i=2;a.f=b.f;a.b=function(){return!0};a.a=function(a,b){return a<=b};a.d=b.d;return a}(),Ad=function(){var a=null,b=function(){function a(c,f,g){var h=null;if(2<arguments.length){for(var h=0,l=Array(arguments.length-2);h<l.length;)l[h]=arguments[h+2],++h;h=new F(l,0)}return b.call(this,c,f,h)}function b(a,c,d){for(;;)if(a>c)if(K(d))a=c,c=G(d),d=K(d);else return c>G(d);else return!1}a.i=2;a.f=function(a){var c=
			G(a);a=K(a);var g=G(a);a=H(a);return b(c,g,a)};a.d=b;return a}(),a=function(a,d,e){switch(arguments.length){case 1:return!0;case 2:return a>d;default:var f=null;if(2<arguments.length){for(var f=0,g=Array(arguments.length-2);f<g.length;)g[f]=arguments[f+2],++f;f=new F(g,0)}return b.d(a,d,f)}throw Error("Invalid arity: "+arguments.length);};a.i=2;a.f=b.f;a.b=function(){return!0};a.a=function(a,b){return a>b};a.d=b.d;return a}(),Bd=function(){var a=null,b=function(){function a(c,f,g){var h=null;if(2<
			arguments.length){for(var h=0,l=Array(arguments.length-2);h<l.length;)l[h]=arguments[h+2],++h;h=new F(l,0)}return b.call(this,c,f,h)}function b(a,c,d){for(;;)if(a>=c)if(K(d))a=c,c=G(d),d=K(d);else return c>=G(d);else return!1}a.i=2;a.f=function(a){var c=G(a);a=K(a);var g=G(a);a=H(a);return b(c,g,a)};a.d=b;return a}(),a=function(a,d,e){switch(arguments.length){case 1:return!0;case 2:return a>=d;default:var f=null;if(2<arguments.length){for(var f=0,g=Array(arguments.length-2);f<g.length;)g[f]=arguments[f+
			2],++f;f=new F(g,0)}return b.d(a,d,f)}throw Error("Invalid arity: "+arguments.length);};a.i=2;a.f=b.f;a.b=function(){return!0};a.a=function(a,b){return a>=b};a.d=b.d;return a}();function Cd(a,b){var c=(a-a%b)/b;return 0<=c?Math.floor.b?Math.floor.b(c):Math.floor.call(null,c):Math.ceil.b?Math.ceil.b(c):Math.ceil.call(null,c)}function Dd(a){a-=a>>1&1431655765;a=(a&858993459)+(a>>2&858993459);return 16843009*(a+(a>>4)&252645135)>>24}
			function Ed(a){var b=1;for(a=D(a);;)if(a&&0<b)b-=1,a=K(a);else return a}
			var z=function(){function a(a){return null==a?"":da(a)}var b=null,c=function(){function a(b,d){var h=null;if(1<arguments.length){for(var h=0,l=Array(arguments.length-1);h<l.length;)l[h]=arguments[h+1],++h;h=new F(l,0)}return c.call(this,b,h)}function c(a,d){for(var e=new fa(b.b(a)),l=d;;)if(t(l))e=e.append(b.b(G(l))),l=K(l);else return e.toString()}a.i=1;a.f=function(a){var b=G(a);a=H(a);return c(b,a)};a.d=c;return a}(),b=function(b,e){switch(arguments.length){case 0:return"";case 1:return a.call(this,
			b);default:var f=null;if(1<arguments.length){for(var f=0,g=Array(arguments.length-1);f<g.length;)g[f]=arguments[f+1],++f;f=new F(g,0)}return c.d(b,f)}throw Error("Invalid arity: "+arguments.length);};b.i=1;b.f=c.f;b.l=function(){return""};b.b=a;b.d=c.d;return b}();function Ic(a,b){var c;if(cd(b))if(Ec(a)&&Ec(b)&&Q(a)!==Q(b))c=!1;else a:{c=D(a);for(var d=D(b);;){if(null==c){c=null==d;break a}if(null!=d&&sc.a(G(c),G(d)))c=K(c),d=K(d);else{c=!1;break a}}c=void 0}else c=null;return md(c)}
			function Fd(a,b,c,d,e){this.k=a;this.first=b;this.M=c;this.count=d;this.p=e;this.j=65937646;this.q=8192}k=Fd.prototype;k.toString=function(){return ec(this)};k.H=function(){return this.k};k.T=function(){return 1===this.count?null:this.M};k.L=function(){return this.count};k.La=function(){return this.first};k.Ma=function(){return Wa(this)};k.B=function(){var a=this.p;return null!=a?a:this.p=a=wc(this)};k.A=function(a,b){return Ic(this,b)};k.J=function(){return ub(J,this.k)};
			k.R=function(a,b){return P.a(b,this)};k.O=function(a,b,c){return P.c(b,c,this)};k.N=function(){return this.first};k.S=function(){return 1===this.count?J:this.M};k.D=function(){return this};k.F=function(a,b){return new Fd(b,this.first,this.M,this.count,this.p)};k.G=function(a,b){return new Fd(this.k,b,this,this.count+1,null)};Fd.prototype[Ea]=function(){return uc(this)};function Hd(a){this.k=a;this.j=65937614;this.q=8192}k=Hd.prototype;k.toString=function(){return ec(this)};k.H=function(){return this.k};
			k.T=function(){return null};k.L=function(){return 0};k.La=function(){return null};k.Ma=function(){throw Error("Can't pop empty list");};k.B=function(){return 0};k.A=function(a,b){return Ic(this,b)};k.J=function(){return this};k.R=function(a,b){return P.a(b,this)};k.O=function(a,b,c){return P.c(b,c,this)};k.N=function(){return null};k.S=function(){return J};k.D=function(){return null};k.F=function(a,b){return new Hd(b)};k.G=function(a,b){return new Fd(this.k,b,null,1,null)};var J=new Hd(null);
			Hd.prototype[Ea]=function(){return uc(this)};function Id(a){return a?a.j&134217728||a.xc?!0:a.j?!1:w(Fb,a):w(Fb,a)}function Jd(a){return Id(a)?Gb(a):A.c(Nc,J,a)}
			var Kd=function(){function a(a){var d=null;if(0<arguments.length){for(var d=0,e=Array(arguments.length-0);d<e.length;)e[d]=arguments[d+0],++d;d=new F(e,0)}return b.call(this,d)}function b(a){var b;if(a instanceof F&&0===a.m)b=a.e;else a:{for(b=[];;)if(null!=a)b.push(a.N(null)),a=a.T(null);else break a;b=void 0}a=b.length;for(var e=J;;)if(0<a){var f=a-1,e=e.G(null,b[a-1]);a=f}else return e}a.i=0;a.f=function(a){a=D(a);return b(a)};a.d=b;return a}();
			function Ld(a,b,c,d){this.k=a;this.first=b;this.M=c;this.p=d;this.j=65929452;this.q=8192}k=Ld.prototype;k.toString=function(){return ec(this)};k.H=function(){return this.k};k.T=function(){return null==this.M?null:D(this.M)};k.B=function(){var a=this.p;return null!=a?a:this.p=a=wc(this)};k.A=function(a,b){return Ic(this,b)};k.J=function(){return O(J,this.k)};k.R=function(a,b){return P.a(b,this)};k.O=function(a,b,c){return P.c(b,c,this)};k.N=function(){return this.first};
			k.S=function(){return null==this.M?J:this.M};k.D=function(){return this};k.F=function(a,b){return new Ld(b,this.first,this.M,this.p)};k.G=function(a,b){return new Ld(null,b,this,this.p)};Ld.prototype[Ea]=function(){return uc(this)};function M(a,b){var c=null==b;return(c?c:b&&(b.j&64||b.jb))?new Ld(null,a,b,null):new Ld(null,a,D(b),null)}
			function Md(a,b){if(a.pa===b.pa)return 0;var c=Aa(a.ba);if(t(c?b.ba:c))return-1;if(t(a.ba)){if(Aa(b.ba))return 1;c=ha(a.ba,b.ba);return 0===c?ha(a.name,b.name):c}return ha(a.name,b.name)}function U(a,b,c,d){this.ba=a;this.name=b;this.pa=c;this.Ya=d;this.j=2153775105;this.q=4096}k=U.prototype;k.v=function(a,b){return Lb(b,[z(":"),z(this.pa)].join(""))};k.B=function(){var a=this.Ya;return null!=a?a:this.Ya=a=oc(this)+2654435769|0};
			k.call=function(){var a=null,a=function(a,c,d){switch(arguments.length){case 2:return S.a(c,this);case 3:return S.c(c,this,d)}throw Error("Invalid arity: "+arguments.length);};a.a=function(a,c){return S.a(c,this)};a.c=function(a,c,d){return S.c(c,this,d)};return a}();k.apply=function(a,b){return this.call.apply(this,[this].concat(Fa(b)))};k.b=function(a){return S.a(a,this)};k.a=function(a,b){return S.c(a,this,b)};k.A=function(a,b){return b instanceof U?this.pa===b.pa:!1};
			k.toString=function(){return[z(":"),z(this.pa)].join("")};function Nd(a,b){return a===b?!0:a instanceof U&&b instanceof U?a.pa===b.pa:!1}
			var Pd=function(){function a(a,b){return new U(a,b,[z(t(a)?[z(a),z("/")].join(""):null),z(b)].join(""),null)}function b(a){if(a instanceof U)return a;if(a instanceof qc){var b;if(a&&(a.q&4096||a.lc))b=a.ba;else throw Error([z("Doesn't support namespace: "),z(a)].join(""));return new U(b,Od.b?Od.b(a):Od.call(null,a),a.ta,null)}return"string"===typeof a?(b=a.split("/"),2===b.length?new U(b[0],b[1],a,null):new U(null,b[0],a,null)):null}var c=null,c=function(c,e){switch(arguments.length){case 1:return b.call(this,
			c);case 2:return a.call(this,c,e)}throw Error("Invalid arity: "+arguments.length);};c.b=b;c.a=a;return c}();function V(a,b,c,d){this.k=a;this.cb=b;this.C=c;this.p=d;this.q=0;this.j=32374988}k=V.prototype;k.toString=function(){return ec(this)};function Qd(a){null!=a.cb&&(a.C=a.cb.l?a.cb.l():a.cb.call(null),a.cb=null);return a.C}k.H=function(){return this.k};k.T=function(){Cb(this);return null==this.C?null:K(this.C)};k.B=function(){var a=this.p;return null!=a?a:this.p=a=wc(this)};
			k.A=function(a,b){return Ic(this,b)};k.J=function(){return O(J,this.k)};k.R=function(a,b){return P.a(b,this)};k.O=function(a,b,c){return P.c(b,c,this)};k.N=function(){Cb(this);return null==this.C?null:G(this.C)};k.S=function(){Cb(this);return null!=this.C?H(this.C):J};k.D=function(){Qd(this);if(null==this.C)return null;for(var a=this.C;;)if(a instanceof V)a=Qd(a);else return this.C=a,D(this.C)};k.F=function(a,b){return new V(b,this.cb,this.C,this.p)};k.G=function(a,b){return M(b,this)};
			V.prototype[Ea]=function(){return uc(this)};function Rd(a,b){this.Ab=a;this.end=b;this.q=0;this.j=2}Rd.prototype.L=function(){return this.end};Rd.prototype.add=function(a){this.Ab[this.end]=a;return this.end+=1};Rd.prototype.ca=function(){var a=new Sd(this.Ab,0,this.end);this.Ab=null;return a};function Td(a){return new Rd(Array(a),0)}function Sd(a,b,c){this.e=a;this.V=b;this.end=c;this.q=0;this.j=524306}k=Sd.prototype;k.R=function(a,b){return Dc.n(this.e,b,this.e[this.V],this.V+1)};
			k.O=function(a,b,c){return Dc.n(this.e,b,c,this.V)};k.Pb=function(){if(this.V===this.end)throw Error("-drop-first of empty chunk");return new Sd(this.e,this.V+1,this.end)};k.Q=function(a,b){return this.e[this.V+b]};k.$=function(a,b,c){return 0<=b&&b<this.end-this.V?this.e[this.V+b]:c};k.L=function(){return this.end-this.V};
			var Ud=function(){function a(a,b,c){return new Sd(a,b,c)}function b(a,b){return new Sd(a,b,a.length)}function c(a){return new Sd(a,0,a.length)}var d=null,d=function(d,f,g){switch(arguments.length){case 1:return c.call(this,d);case 2:return b.call(this,d,f);case 3:return a.call(this,d,f,g)}throw Error("Invalid arity: "+arguments.length);};d.b=c;d.a=b;d.c=a;return d}();function Vd(a,b,c,d){this.ca=a;this.ra=b;this.k=c;this.p=d;this.j=31850732;this.q=1536}k=Vd.prototype;k.toString=function(){return ec(this)};
			k.H=function(){return this.k};k.T=function(){if(1<Ma(this.ca))return new Vd(Xb(this.ca),this.ra,this.k,null);var a=Cb(this.ra);return null==a?null:a};k.B=function(){var a=this.p;return null!=a?a:this.p=a=wc(this)};k.A=function(a,b){return Ic(this,b)};k.J=function(){return O(J,this.k)};k.N=function(){return C.a(this.ca,0)};k.S=function(){return 1<Ma(this.ca)?new Vd(Xb(this.ca),this.ra,this.k,null):null==this.ra?J:this.ra};k.D=function(){return this};k.Cb=function(){return this.ca};
			k.Db=function(){return null==this.ra?J:this.ra};k.F=function(a,b){return new Vd(this.ca,this.ra,b,this.p)};k.G=function(a,b){return M(b,this)};k.Bb=function(){return null==this.ra?null:this.ra};Vd.prototype[Ea]=function(){return uc(this)};function Wd(a,b){return 0===Ma(a)?b:new Vd(a,b,null,null)}function Xd(a,b){a.add(b)}function rd(a){for(var b=[];;)if(D(a))b.push(G(a)),a=K(a);else return b}function Yd(a,b){if(Ec(a))return Q(a);for(var c=a,d=b,e=0;;)if(0<d&&D(c))c=K(c),d-=1,e+=1;else return e}
			var $d=function Zd(b){return null==b?null:null==K(b)?D(G(b)):M(G(b),Zd(K(b)))},ae=function(){function a(a,b){return new V(null,function(){var c=D(a);return c?fd(c)?Wd(Yb(c),d.a(Zb(c),b)):M(G(c),d.a(H(c),b)):b},null,null)}function b(a){return new V(null,function(){return a},null,null)}function c(){return new V(null,function(){return null},null,null)}var d=null,e=function(){function a(c,d,e){var f=null;if(2<arguments.length){for(var f=0,q=Array(arguments.length-2);f<q.length;)q[f]=arguments[f+2],++f;
			f=new F(q,0)}return b.call(this,c,d,f)}function b(a,c,e){return function q(a,b){return new V(null,function(){var c=D(a);return c?fd(c)?Wd(Yb(c),q(Zb(c),b)):M(G(c),q(H(c),b)):t(b)?q(G(b),K(b)):null},null,null)}(d.a(a,c),e)}a.i=2;a.f=function(a){var c=G(a);a=K(a);var d=G(a);a=H(a);return b(c,d,a)};a.d=b;return a}(),d=function(d,g,h){switch(arguments.length){case 0:return c.call(this);case 1:return b.call(this,d);case 2:return a.call(this,d,g);default:var l=null;if(2<arguments.length){for(var l=0,m=
			Array(arguments.length-2);l<m.length;)m[l]=arguments[l+2],++l;l=new F(m,0)}return e.d(d,g,l)}throw Error("Invalid arity: "+arguments.length);};d.i=2;d.f=e.f;d.l=c;d.b=b;d.a=a;d.d=e.d;return d}(),be=function(){function a(a,b,c,d){return M(a,M(b,M(c,d)))}function b(a,b,c){return M(a,M(b,c))}var c=null,d=function(){function a(c,d,e,m,p){var q=null;if(4<arguments.length){for(var q=0,s=Array(arguments.length-4);q<s.length;)s[q]=arguments[q+4],++q;q=new F(s,0)}return b.call(this,c,d,e,m,q)}function b(a,
			c,d,e,f){return M(a,M(c,M(d,M(e,$d(f)))))}a.i=4;a.f=function(a){var c=G(a);a=K(a);var d=G(a);a=K(a);var e=G(a);a=K(a);var p=G(a);a=H(a);return b(c,d,e,p,a)};a.d=b;return a}(),c=function(c,f,g,h,l){switch(arguments.length){case 1:return D(c);case 2:return M(c,f);case 3:return b.call(this,c,f,g);case 4:return a.call(this,c,f,g,h);default:var m=null;if(4<arguments.length){for(var m=0,p=Array(arguments.length-4);m<p.length;)p[m]=arguments[m+4],++m;m=new F(p,0)}return d.d(c,f,g,h,m)}throw Error("Invalid arity: "+
			arguments.length);};c.i=4;c.f=d.f;c.b=function(a){return D(a)};c.a=function(a,b){return M(a,b)};c.c=b;c.n=a;c.d=d.d;return c}();function ce(a){return Qb(a)}
			var de=function(){function a(){return Ob(Mc)}var b=null,c=function(){function a(c,d,h){var l=null;if(2<arguments.length){for(var l=0,m=Array(arguments.length-2);l<m.length;)m[l]=arguments[l+2],++l;l=new F(m,0)}return b.call(this,c,d,l)}function b(a,c,d){for(;;)if(a=Pb(a,c),t(d))c=G(d),d=K(d);else return a}a.i=2;a.f=function(a){var c=G(a);a=K(a);var d=G(a);a=H(a);return b(c,d,a)};a.d=b;return a}(),b=function(b,e,f){switch(arguments.length){case 0:return a.call(this);case 1:return b;case 2:return Pb(b,
			e);default:var g=null;if(2<arguments.length){for(var g=0,h=Array(arguments.length-2);g<h.length;)h[g]=arguments[g+2],++g;g=new F(h,0)}return c.d(b,e,g)}throw Error("Invalid arity: "+arguments.length);};b.i=2;b.f=c.f;b.l=a;b.b=function(a){return a};b.a=function(a,b){return Pb(a,b)};b.d=c.d;return b}(),ee=function(){var a=null,b=function(){function a(c,f,g,h){var l=null;if(3<arguments.length){for(var l=0,m=Array(arguments.length-3);l<m.length;)m[l]=arguments[l+3],++l;l=new F(m,0)}return b.call(this,
			c,f,g,l)}function b(a,c,d,h){for(;;)if(a=Rb(a,c,d),t(h))c=G(h),d=Lc(h),h=K(K(h));else return a}a.i=3;a.f=function(a){var c=G(a);a=K(a);var g=G(a);a=K(a);var h=G(a);a=H(a);return b(c,g,h,a)};a.d=b;return a}(),a=function(a,d,e,f){switch(arguments.length){case 3:return Rb(a,d,e);default:var g=null;if(3<arguments.length){for(var g=0,h=Array(arguments.length-3);g<h.length;)h[g]=arguments[g+3],++g;g=new F(h,0)}return b.d(a,d,e,g)}throw Error("Invalid arity: "+arguments.length);};a.i=3;a.f=b.f;a.c=function(a,
			b,e){return Rb(a,b,e)};a.d=b.d;return a}(),fe=function(){var a=null,b=function(){function a(c,f,g){var h=null;if(2<arguments.length){for(var h=0,l=Array(arguments.length-2);h<l.length;)l[h]=arguments[h+2],++h;h=new F(l,0)}return b.call(this,c,f,h)}function b(a,c,d){for(;;)if(a=Sb(a,c),t(d))c=G(d),d=K(d);else return a}a.i=2;a.f=function(a){var c=G(a);a=K(a);var g=G(a);a=H(a);return b(c,g,a)};a.d=b;return a}(),a=function(a,d,e){switch(arguments.length){case 2:return Sb(a,d);default:var f=null;if(2<
			arguments.length){for(var f=0,g=Array(arguments.length-2);f<g.length;)g[f]=arguments[f+2],++f;f=new F(g,0)}return b.d(a,d,f)}throw Error("Invalid arity: "+arguments.length);};a.i=2;a.f=b.f;a.a=function(a,b){return Sb(a,b)};a.d=b.d;return a}(),ge=function(){var a=null,b=function(){function a(c,f,g){var h=null;if(2<arguments.length){for(var h=0,l=Array(arguments.length-2);h<l.length;)l[h]=arguments[h+2],++h;h=new F(l,0)}return b.call(this,c,f,h)}function b(a,c,d){for(;;)if(a=Vb(a,c),t(d))c=G(d),d=K(d);
			else return a}a.i=2;a.f=function(a){var c=G(a);a=K(a);var g=G(a);a=H(a);return b(c,g,a)};a.d=b;return a}(),a=function(a,d,e){switch(arguments.length){case 2:return Vb(a,d);default:var f=null;if(2<arguments.length){for(var f=0,g=Array(arguments.length-2);f<g.length;)g[f]=arguments[f+2],++f;f=new F(g,0)}return b.d(a,d,f)}throw Error("Invalid arity: "+arguments.length);};a.i=2;a.f=b.f;a.a=function(a,b){return Vb(a,b)};a.d=b.d;return a}();
			function he(a,b,c){var d=D(c);if(0===b)return a.l?a.l():a.call(null);c=Va(d);var e=Wa(d);if(1===b)return a.b?a.b(c):a.b?a.b(c):a.call(null,c);var d=Va(e),f=Wa(e);if(2===b)return a.a?a.a(c,d):a.a?a.a(c,d):a.call(null,c,d);var e=Va(f),g=Wa(f);if(3===b)return a.c?a.c(c,d,e):a.c?a.c(c,d,e):a.call(null,c,d,e);var f=Va(g),h=Wa(g);if(4===b)return a.n?a.n(c,d,e,f):a.n?a.n(c,d,e,f):a.call(null,c,d,e,f);var g=Va(h),l=Wa(h);if(5===b)return a.r?a.r(c,d,e,f,g):a.r?a.r(c,d,e,f,g):a.call(null,c,d,e,f,g);var h=Va(l),
			m=Wa(l);if(6===b)return a.P?a.P(c,d,e,f,g,h):a.P?a.P(c,d,e,f,g,h):a.call(null,c,d,e,f,g,h);var l=Va(m),p=Wa(m);if(7===b)return a.ia?a.ia(c,d,e,f,g,h,l):a.ia?a.ia(c,d,e,f,g,h,l):a.call(null,c,d,e,f,g,h,l);var m=Va(p),q=Wa(p);if(8===b)return a.Ga?a.Ga(c,d,e,f,g,h,l,m):a.Ga?a.Ga(c,d,e,f,g,h,l,m):a.call(null,c,d,e,f,g,h,l,m);var p=Va(q),s=Wa(q);if(9===b)return a.Ha?a.Ha(c,d,e,f,g,h,l,m,p):a.Ha?a.Ha(c,d,e,f,g,h,l,m,p):a.call(null,c,d,e,f,g,h,l,m,p);var q=Va(s),u=Wa(s);if(10===b)return a.va?a.va(c,d,e,
			f,g,h,l,m,p,q):a.va?a.va(c,d,e,f,g,h,l,m,p,q):a.call(null,c,d,e,f,g,h,l,m,p,q);var s=Va(u),v=Wa(u);if(11===b)return a.wa?a.wa(c,d,e,f,g,h,l,m,p,q,s):a.wa?a.wa(c,d,e,f,g,h,l,m,p,q,s):a.call(null,c,d,e,f,g,h,l,m,p,q,s);var u=Va(v),y=Wa(v);if(12===b)return a.xa?a.xa(c,d,e,f,g,h,l,m,p,q,s,u):a.xa?a.xa(c,d,e,f,g,h,l,m,p,q,s,u):a.call(null,c,d,e,f,g,h,l,m,p,q,s,u);var v=Va(y),B=Wa(y);if(13===b)return a.ya?a.ya(c,d,e,f,g,h,l,m,p,q,s,u,v):a.ya?a.ya(c,d,e,f,g,h,l,m,p,q,s,u,v):a.call(null,c,d,e,f,g,h,l,m,p,
			q,s,u,v);var y=Va(B),E=Wa(B);if(14===b)return a.za?a.za(c,d,e,f,g,h,l,m,p,q,s,u,v,y):a.za?a.za(c,d,e,f,g,h,l,m,p,q,s,u,v,y):a.call(null,c,d,e,f,g,h,l,m,p,q,s,u,v,y);var B=Va(E),N=Wa(E);if(15===b)return a.Aa?a.Aa(c,d,e,f,g,h,l,m,p,q,s,u,v,y,B):a.Aa?a.Aa(c,d,e,f,g,h,l,m,p,q,s,u,v,y,B):a.call(null,c,d,e,f,g,h,l,m,p,q,s,u,v,y,B);var E=Va(N),Y=Wa(N);if(16===b)return a.Ba?a.Ba(c,d,e,f,g,h,l,m,p,q,s,u,v,y,B,E):a.Ba?a.Ba(c,d,e,f,g,h,l,m,p,q,s,u,v,y,B,E):a.call(null,c,d,e,f,g,h,l,m,p,q,s,u,v,y,B,E);var N=
			Va(Y),ra=Wa(Y);if(17===b)return a.Ca?a.Ca(c,d,e,f,g,h,l,m,p,q,s,u,v,y,B,E,N):a.Ca?a.Ca(c,d,e,f,g,h,l,m,p,q,s,u,v,y,B,E,N):a.call(null,c,d,e,f,g,h,l,m,p,q,s,u,v,y,B,E,N);var Y=Va(ra),Pa=Wa(ra);if(18===b)return a.Da?a.Da(c,d,e,f,g,h,l,m,p,q,s,u,v,y,B,E,N,Y):a.Da?a.Da(c,d,e,f,g,h,l,m,p,q,s,u,v,y,B,E,N,Y):a.call(null,c,d,e,f,g,h,l,m,p,q,s,u,v,y,B,E,N,Y);ra=Va(Pa);Pa=Wa(Pa);if(19===b)return a.Ea?a.Ea(c,d,e,f,g,h,l,m,p,q,s,u,v,y,B,E,N,Y,ra):a.Ea?a.Ea(c,d,e,f,g,h,l,m,p,q,s,u,v,y,B,E,N,Y,ra):a.call(null,
			c,d,e,f,g,h,l,m,p,q,s,u,v,y,B,E,N,Y,ra);var I=Va(Pa);Wa(Pa);if(20===b)return a.Fa?a.Fa(c,d,e,f,g,h,l,m,p,q,s,u,v,y,B,E,N,Y,ra,I):a.Fa?a.Fa(c,d,e,f,g,h,l,m,p,q,s,u,v,y,B,E,N,Y,ra,I):a.call(null,c,d,e,f,g,h,l,m,p,q,s,u,v,y,B,E,N,Y,ra,I);throw Error("Only up to 20 arguments supported on functions");}
			var T=function(){function a(a,b,c,d,e){b=be.n(b,c,d,e);c=a.i;return a.f?(d=Yd(b,c+1),d<=c?he(a,d,b):a.f(b)):a.apply(a,rd(b))}function b(a,b,c,d){b=be.c(b,c,d);c=a.i;return a.f?(d=Yd(b,c+1),d<=c?he(a,d,b):a.f(b)):a.apply(a,rd(b))}function c(a,b,c){b=be.a(b,c);c=a.i;if(a.f){var d=Yd(b,c+1);return d<=c?he(a,d,b):a.f(b)}return a.apply(a,rd(b))}function d(a,b){var c=a.i;if(a.f){var d=Yd(b,c+1);return d<=c?he(a,d,b):a.f(b)}return a.apply(a,rd(b))}var e=null,f=function(){function a(c,d,e,f,g,u){var v=null;
			if(5<arguments.length){for(var v=0,y=Array(arguments.length-5);v<y.length;)y[v]=arguments[v+5],++v;v=new F(y,0)}return b.call(this,c,d,e,f,g,v)}function b(a,c,d,e,f,g){c=M(c,M(d,M(e,M(f,$d(g)))));d=a.i;return a.f?(e=Yd(c,d+1),e<=d?he(a,e,c):a.f(c)):a.apply(a,rd(c))}a.i=5;a.f=function(a){var c=G(a);a=K(a);var d=G(a);a=K(a);var e=G(a);a=K(a);var f=G(a);a=K(a);var g=G(a);a=H(a);return b(c,d,e,f,g,a)};a.d=b;return a}(),e=function(e,h,l,m,p,q){switch(arguments.length){case 2:return d.call(this,e,h);case 3:return c.call(this,
			e,h,l);case 4:return b.call(this,e,h,l,m);case 5:return a.call(this,e,h,l,m,p);default:var s=null;if(5<arguments.length){for(var s=0,u=Array(arguments.length-5);s<u.length;)u[s]=arguments[s+5],++s;s=new F(u,0)}return f.d(e,h,l,m,p,s)}throw Error("Invalid arity: "+arguments.length);};e.i=5;e.f=f.f;e.a=d;e.c=c;e.n=b;e.r=a;e.d=f.d;return e}(),ie=function(){function a(a,b,c,d,e,f){var g=O,v=Vc(a);b=b.r?b.r(v,c,d,e,f):b.call(null,v,c,d,e,f);return g(a,b)}function b(a,b,c,d,e){var f=O,g=Vc(a);b=b.n?b.n(g,
			c,d,e):b.call(null,g,c,d,e);return f(a,b)}function c(a,b,c,d){var e=O,f=Vc(a);b=b.c?b.c(f,c,d):b.call(null,f,c,d);return e(a,b)}function d(a,b,c){var d=O,e=Vc(a);b=b.a?b.a(e,c):b.call(null,e,c);return d(a,b)}function e(a,b){var c=O,d;d=Vc(a);d=b.b?b.b(d):b.call(null,d);return c(a,d)}var f=null,g=function(){function a(c,d,e,f,g,h,y){var B=null;if(6<arguments.length){for(var B=0,E=Array(arguments.length-6);B<E.length;)E[B]=arguments[B+6],++B;B=new F(E,0)}return b.call(this,c,d,e,f,g,h,B)}function b(a,
			c,d,e,f,g,h){return O(a,T.d(c,Vc(a),d,e,f,Kc([g,h],0)))}a.i=6;a.f=function(a){var c=G(a);a=K(a);var d=G(a);a=K(a);var e=G(a);a=K(a);var f=G(a);a=K(a);var g=G(a);a=K(a);var h=G(a);a=H(a);return b(c,d,e,f,g,h,a)};a.d=b;return a}(),f=function(f,l,m,p,q,s,u){switch(arguments.length){case 2:return e.call(this,f,l);case 3:return d.call(this,f,l,m);case 4:return c.call(this,f,l,m,p);case 5:return b.call(this,f,l,m,p,q);case 6:return a.call(this,f,l,m,p,q,s);default:var v=null;if(6<arguments.length){for(var v=
			0,y=Array(arguments.length-6);v<y.length;)y[v]=arguments[v+6],++v;v=new F(y,0)}return g.d(f,l,m,p,q,s,v)}throw Error("Invalid arity: "+arguments.length);};f.i=6;f.f=g.f;f.a=e;f.c=d;f.n=c;f.r=b;f.P=a;f.d=g.d;return f}(),je=function(){function a(a,b){return!sc.a(a,b)}var b=null,c=function(){function a(c,d,h){var l=null;if(2<arguments.length){for(var l=0,m=Array(arguments.length-2);l<m.length;)m[l]=arguments[l+2],++l;l=new F(m,0)}return b.call(this,c,d,l)}function b(a,c,d){return Aa(T.n(sc,a,c,d))}a.i=
			2;a.f=function(a){var c=G(a);a=K(a);var d=G(a);a=H(a);return b(c,d,a)};a.d=b;return a}(),b=function(b,e,f){switch(arguments.length){case 1:return!1;case 2:return a.call(this,b,e);default:var g=null;if(2<arguments.length){for(var g=0,h=Array(arguments.length-2);g<h.length;)h[g]=arguments[g+2],++g;g=new F(h,0)}return c.d(b,e,g)}throw Error("Invalid arity: "+arguments.length);};b.i=2;b.f=c.f;b.b=function(){return!1};b.a=a;b.d=c.d;return b}(),qe=function ke(){"undefined"===typeof ja&&(ja=function(b,c){this.pc=
			b;this.oc=c;this.q=0;this.j=393216},ja.prototype.ga=function(){return!1},ja.prototype.next=function(){return Error("No such element")},ja.prototype.H=function(){return this.oc},ja.prototype.F=function(b,c){return new ja(this.pc,c)},ja.Yb=!0,ja.Xb="cljs.core/t12660",ja.nc=function(b){return Lb(b,"cljs.core/t12660")});return new ja(ke,new pa(null,5,[le,54,me,2998,ne,3,oe,2994,pe,"/Users/davidnolen/development/clojure/mori/out-mori-adv/cljs/core.cljs"],null))};function re(a,b){this.C=a;this.m=b}
			re.prototype.ga=function(){return this.m<this.C.length};re.prototype.next=function(){var a=this.C.charAt(this.m);this.m+=1;return a};function se(a,b){this.e=a;this.m=b}se.prototype.ga=function(){return this.m<this.e.length};se.prototype.next=function(){var a=this.e[this.m];this.m+=1;return a};var te={},ue={};function ve(a,b){this.eb=a;this.Qa=b}ve.prototype.ga=function(){this.eb===te?(this.eb=ue,this.Qa=D(this.Qa)):this.eb===this.Qa&&(this.Qa=K(this.eb));return null!=this.Qa};
			ve.prototype.next=function(){if(Aa(this.ga()))throw Error("No such element");this.eb=this.Qa;return G(this.Qa)};function we(a){if(null==a)return qe();if("string"===typeof a)return new re(a,0);if(a instanceof Array)return new se(a,0);if(a?t(t(null)?null:a.vb)||(a.yb?0:w(bc,a)):w(bc,a))return cc(a);if(ld(a))return new ve(te,a);throw Error([z("Cannot create iterator from "),z(a)].join(""));}function xe(a,b){this.fa=a;this.$b=b}
			xe.prototype.step=function(a){for(var b=this;;){if(t(function(){var c=null!=a.X;return c?b.$b.ga():c}()))if(Ac(function(){var c=b.$b.next();return b.fa.a?b.fa.a(a,c):b.fa.call(null,a,c)}()))null!=a.M&&(a.M.X=null);else continue;break}return null==a.X?null:b.fa.b?b.fa.b(a):b.fa.call(null,a)};
			function ye(a,b){var c=function(){function a(b,c){b.first=c;b.M=new ze(b.X,null,null,null);b.X=null;return b.M}function b(a){(Ac(a)?qb(a):a).X=null;return a}var c=null,c=function(c,f){switch(arguments.length){case 1:return b.call(this,c);case 2:return a.call(this,c,f)}throw Error("Invalid arity: "+arguments.length);};c.b=b;c.a=a;return c}();return new xe(a.b?a.b(c):a.call(null,c),b)}function Ae(a,b,c){this.fa=a;this.Kb=b;this.ac=c}
			Ae.prototype.ga=function(){for(var a=D(this.Kb);;)if(null!=a){var b=G(a);if(Aa(b.ga()))return!1;a=K(a)}else return!0};Ae.prototype.next=function(){for(var a=this.Kb.length,b=0;;)if(b<a)this.ac[b]=this.Kb[b].next(),b+=1;else break;return Jc.a(this.ac,0)};Ae.prototype.step=function(a){for(;;){var b;b=(b=null!=a.X)?this.ga():b;if(t(b))if(Ac(T.a(this.fa,M(a,this.next()))))null!=a.M&&(a.M.X=null);else continue;break}return null==a.X?null:this.fa.b?this.fa.b(a):this.fa.call(null,a)};
			var Be=function(){function a(a,b,c){var g=function(){function a(b,c){b.first=c;b.M=new ze(b.X,null,null,null);b.X=null;return b.M}function b(a){a=Ac(a)?qb(a):a;a.X=null;return a}var c=null,c=function(c,d){switch(arguments.length){case 1:return b.call(this,c);case 2:return a.call(this,c,d)}throw Error("Invalid arity: "+arguments.length);};c.b=b;c.a=a;return c}();return new Ae(a.b?a.b(g):a.call(null,g),b,c)}function b(a,b){return c.c(a,b,Array(b.length))}var c=null,c=function(c,e,f){switch(arguments.length){case 2:return b.call(this,
			c,e);case 3:return a.call(this,c,e,f)}throw Error("Invalid arity: "+arguments.length);};c.a=b;c.c=a;return c}();function ze(a,b,c,d){this.X=a;this.first=b;this.M=c;this.k=d;this.q=0;this.j=31719628}k=ze.prototype;k.T=function(){null!=this.X&&Cb(this);return null==this.M?null:Cb(this.M)};k.N=function(){null!=this.X&&Cb(this);return null==this.M?null:this.first};k.S=function(){null!=this.X&&Cb(this);return null==this.M?J:this.M};
			k.D=function(){null!=this.X&&this.X.step(this);return null==this.M?null:this};k.B=function(){return wc(this)};k.A=function(a,b){return null!=Cb(this)?Ic(this,b):cd(b)&&null==D(b)};k.J=function(){return J};k.G=function(a,b){return M(b,Cb(this))};k.F=function(a,b){return new ze(this.X,this.first,this.M,b)};ze.prototype[Ea]=function(){return uc(this)};
			var Ce=function(){function a(a){return kd(a)?a:(a=D(a))?a:J}var b=null,c=function(){function a(c,d,h){var l=null;if(2<arguments.length){for(var l=0,m=Array(arguments.length-2);l<m.length;)m[l]=arguments[l+2],++l;l=new F(m,0)}return b.call(this,c,d,l)}function b(a,c,d){d=rd(M(c,d));c=[];d=D(d);for(var e=null,m=0,p=0;;)if(p<m){var q=e.Q(null,p);c.push(we(q));p+=1}else if(d=D(d))e=d,fd(e)?(d=Yb(e),p=Zb(e),e=d,m=Q(d),d=p):(d=G(e),c.push(we(d)),d=K(e),e=null,m=0),p=0;else break;return new ze(Be.c(a,c,
			Array(c.length)),null,null,null)}a.i=2;a.f=function(a){var c=G(a);a=K(a);var d=G(a);a=H(a);return b(c,d,a)};a.d=b;return a}(),b=function(b,e,f){switch(arguments.length){case 1:return a.call(this,b);case 2:return new ze(ye(b,we(e)),null,null,null);default:var g=null;if(2<arguments.length){for(var g=0,h=Array(arguments.length-2);g<h.length;)h[g]=arguments[g+2],++g;g=new F(h,0)}return c.d(b,e,g)}throw Error("Invalid arity: "+arguments.length);};b.i=2;b.f=c.f;b.b=a;b.a=function(a,b){return new ze(ye(a,
			we(b)),null,null,null)};b.d=c.d;return b}();function Ee(a,b){for(;;){if(null==D(b))return!0;var c;c=G(b);c=a.b?a.b(c):a.call(null,c);if(t(c)){c=a;var d=K(b);a=c;b=d}else return!1}}function Fe(a,b){for(;;)if(D(b)){var c;c=G(b);c=a.b?a.b(c):a.call(null,c);if(t(c))return c;c=a;var d=K(b);a=c;b=d}else return null}function Ge(a){if("number"===typeof a&&Aa(isNaN(a))&&Infinity!==a&&parseFloat(a)===parseInt(a,10))return 0===(a&1);throw Error([z("Argument must be an integer: "),z(a)].join(""));}
			function He(a){return function(){function b(b,c){return Aa(a.a?a.a(b,c):a.call(null,b,c))}function c(b){return Aa(a.b?a.b(b):a.call(null,b))}function d(){return Aa(a.l?a.l():a.call(null))}var e=null,f=function(){function b(a,d,e){var f=null;if(2<arguments.length){for(var f=0,g=Array(arguments.length-2);f<g.length;)g[f]=arguments[f+2],++f;f=new F(g,0)}return c.call(this,a,d,f)}function c(b,d,e){return Aa(T.n(a,b,d,e))}b.i=2;b.f=function(a){var b=G(a);a=K(a);var d=G(a);a=H(a);return c(b,d,a)};b.d=c;
			return b}(),e=function(a,e,l){switch(arguments.length){case 0:return d.call(this);case 1:return c.call(this,a);case 2:return b.call(this,a,e);default:var m=null;if(2<arguments.length){for(var m=0,p=Array(arguments.length-2);m<p.length;)p[m]=arguments[m+2],++m;m=new F(p,0)}return f.d(a,e,m)}throw Error("Invalid arity: "+arguments.length);};e.i=2;e.f=f.f;e.l=d;e.b=c;e.a=b;e.d=f.d;return e}()}
			var Ie=function(){function a(a,b,c){return function(){function d(h,l,m){h=c.c?c.c(h,l,m):c.call(null,h,l,m);h=b.b?b.b(h):b.call(null,h);return a.b?a.b(h):a.call(null,h)}function l(d,h){var l;l=c.a?c.a(d,h):c.call(null,d,h);l=b.b?b.b(l):b.call(null,l);return a.b?a.b(l):a.call(null,l)}function m(d){d=c.b?c.b(d):c.call(null,d);d=b.b?b.b(d):b.call(null,d);return a.b?a.b(d):a.call(null,d)}function p(){var d;d=c.l?c.l():c.call(null);d=b.b?b.b(d):b.call(null,d);return a.b?a.b(d):a.call(null,d)}var q=null,
			s=function(){function d(a,b,c,e){var f=null;if(3<arguments.length){for(var f=0,g=Array(arguments.length-3);f<g.length;)g[f]=arguments[f+3],++f;f=new F(g,0)}return h.call(this,a,b,c,f)}function h(d,l,m,p){d=T.r(c,d,l,m,p);d=b.b?b.b(d):b.call(null,d);return a.b?a.b(d):a.call(null,d)}d.i=3;d.f=function(a){var b=G(a);a=K(a);var c=G(a);a=K(a);var d=G(a);a=H(a);return h(b,c,d,a)};d.d=h;return d}(),q=function(a,b,c,e){switch(arguments.length){case 0:return p.call(this);case 1:return m.call(this,a);case 2:return l.call(this,
			a,b);case 3:return d.call(this,a,b,c);default:var f=null;if(3<arguments.length){for(var f=0,g=Array(arguments.length-3);f<g.length;)g[f]=arguments[f+3],++f;f=new F(g,0)}return s.d(a,b,c,f)}throw Error("Invalid arity: "+arguments.length);};q.i=3;q.f=s.f;q.l=p;q.b=m;q.a=l;q.c=d;q.d=s.d;return q}()}function b(a,b){return function(){function c(d,g,h){d=b.c?b.c(d,g,h):b.call(null,d,g,h);return a.b?a.b(d):a.call(null,d)}function d(c,g){var h=b.a?b.a(c,g):b.call(null,c,g);return a.b?a.b(h):a.call(null,h)}
			function l(c){c=b.b?b.b(c):b.call(null,c);return a.b?a.b(c):a.call(null,c)}function m(){var c=b.l?b.l():b.call(null);return a.b?a.b(c):a.call(null,c)}var p=null,q=function(){function c(a,b,e,f){var g=null;if(3<arguments.length){for(var g=0,h=Array(arguments.length-3);g<h.length;)h[g]=arguments[g+3],++g;g=new F(h,0)}return d.call(this,a,b,e,g)}function d(c,g,h,l){c=T.r(b,c,g,h,l);return a.b?a.b(c):a.call(null,c)}c.i=3;c.f=function(a){var b=G(a);a=K(a);var c=G(a);a=K(a);var e=G(a);a=H(a);return d(b,
			c,e,a)};c.d=d;return c}(),p=function(a,b,e,f){switch(arguments.length){case 0:return m.call(this);case 1:return l.call(this,a);case 2:return d.call(this,a,b);case 3:return c.call(this,a,b,e);default:var p=null;if(3<arguments.length){for(var p=0,E=Array(arguments.length-3);p<E.length;)E[p]=arguments[p+3],++p;p=new F(E,0)}return q.d(a,b,e,p)}throw Error("Invalid arity: "+arguments.length);};p.i=3;p.f=q.f;p.l=m;p.b=l;p.a=d;p.c=c;p.d=q.d;return p}()}var c=null,d=function(){function a(c,d,e,m){var p=null;
			if(3<arguments.length){for(var p=0,q=Array(arguments.length-3);p<q.length;)q[p]=arguments[p+3],++p;p=new F(q,0)}return b.call(this,c,d,e,p)}function b(a,c,d,e){return function(a){return function(){function b(a){var d=null;if(0<arguments.length){for(var d=0,e=Array(arguments.length-0);d<e.length;)e[d]=arguments[d+0],++d;d=new F(e,0)}return c.call(this,d)}function c(b){b=T.a(G(a),b);for(var d=K(a);;)if(d)b=G(d).call(null,b),d=K(d);else return b}b.i=0;b.f=function(a){a=D(a);return c(a)};b.d=c;return b}()}(Jd(be.n(a,
			c,d,e)))}a.i=3;a.f=function(a){var c=G(a);a=K(a);var d=G(a);a=K(a);var e=G(a);a=H(a);return b(c,d,e,a)};a.d=b;return a}(),c=function(c,f,g,h){switch(arguments.length){case 0:return ud;case 1:return c;case 2:return b.call(this,c,f);case 3:return a.call(this,c,f,g);default:var l=null;if(3<arguments.length){for(var l=0,m=Array(arguments.length-3);l<m.length;)m[l]=arguments[l+3],++l;l=new F(m,0)}return d.d(c,f,g,l)}throw Error("Invalid arity: "+arguments.length);};c.i=3;c.f=d.f;c.l=function(){return ud};
			c.b=function(a){return a};c.a=b;c.c=a;c.d=d.d;return c}(),Je=function(){function a(a,b,c,d){return function(){function e(m,p,q){return a.P?a.P(b,c,d,m,p,q):a.call(null,b,c,d,m,p,q)}function p(e,m){return a.r?a.r(b,c,d,e,m):a.call(null,b,c,d,e,m)}function q(e){return a.n?a.n(b,c,d,e):a.call(null,b,c,d,e)}function s(){return a.c?a.c(b,c,d):a.call(null,b,c,d)}var u=null,v=function(){function e(a,b,c,d){var f=null;if(3<arguments.length){for(var f=0,g=Array(arguments.length-3);f<g.length;)g[f]=arguments[f+
			3],++f;f=new F(g,0)}return m.call(this,a,b,c,f)}function m(e,p,q,s){return T.d(a,b,c,d,e,Kc([p,q,s],0))}e.i=3;e.f=function(a){var b=G(a);a=K(a);var c=G(a);a=K(a);var d=G(a);a=H(a);return m(b,c,d,a)};e.d=m;return e}(),u=function(a,b,c,d){switch(arguments.length){case 0:return s.call(this);case 1:return q.call(this,a);case 2:return p.call(this,a,b);case 3:return e.call(this,a,b,c);default:var f=null;if(3<arguments.length){for(var f=0,g=Array(arguments.length-3);f<g.length;)g[f]=arguments[f+3],++f;f=
			new F(g,0)}return v.d(a,b,c,f)}throw Error("Invalid arity: "+arguments.length);};u.i=3;u.f=v.f;u.l=s;u.b=q;u.a=p;u.c=e;u.d=v.d;return u}()}function b(a,b,c){return function(){function d(e,l,m){return a.r?a.r(b,c,e,l,m):a.call(null,b,c,e,l,m)}function e(d,l){return a.n?a.n(b,c,d,l):a.call(null,b,c,d,l)}function p(d){return a.c?a.c(b,c,d):a.call(null,b,c,d)}function q(){return a.a?a.a(b,c):a.call(null,b,c)}var s=null,u=function(){function d(a,b,c,f){var g=null;if(3<arguments.length){for(var g=0,h=Array(arguments.length-
			3);g<h.length;)h[g]=arguments[g+3],++g;g=new F(h,0)}return e.call(this,a,b,c,g)}function e(d,l,m,p){return T.d(a,b,c,d,l,Kc([m,p],0))}d.i=3;d.f=function(a){var b=G(a);a=K(a);var c=G(a);a=K(a);var d=G(a);a=H(a);return e(b,c,d,a)};d.d=e;return d}(),s=function(a,b,c,f){switch(arguments.length){case 0:return q.call(this);case 1:return p.call(this,a);case 2:return e.call(this,a,b);case 3:return d.call(this,a,b,c);default:var g=null;if(3<arguments.length){for(var g=0,h=Array(arguments.length-3);g<h.length;)h[g]=
			arguments[g+3],++g;g=new F(h,0)}return u.d(a,b,c,g)}throw Error("Invalid arity: "+arguments.length);};s.i=3;s.f=u.f;s.l=q;s.b=p;s.a=e;s.c=d;s.d=u.d;return s}()}function c(a,b){return function(){function c(d,e,h){return a.n?a.n(b,d,e,h):a.call(null,b,d,e,h)}function d(c,e){return a.c?a.c(b,c,e):a.call(null,b,c,e)}function e(c){return a.a?a.a(b,c):a.call(null,b,c)}function p(){return a.b?a.b(b):a.call(null,b)}var q=null,s=function(){function c(a,b,e,f){var g=null;if(3<arguments.length){for(var g=0,
			h=Array(arguments.length-3);g<h.length;)h[g]=arguments[g+3],++g;g=new F(h,0)}return d.call(this,a,b,e,g)}function d(c,e,h,l){return T.d(a,b,c,e,h,Kc([l],0))}c.i=3;c.f=function(a){var b=G(a);a=K(a);var c=G(a);a=K(a);var e=G(a);a=H(a);return d(b,c,e,a)};c.d=d;return c}(),q=function(a,b,f,g){switch(arguments.length){case 0:return p.call(this);case 1:return e.call(this,a);case 2:return d.call(this,a,b);case 3:return c.call(this,a,b,f);default:var q=null;if(3<arguments.length){for(var q=0,N=Array(arguments.length-
			3);q<N.length;)N[q]=arguments[q+3],++q;q=new F(N,0)}return s.d(a,b,f,q)}throw Error("Invalid arity: "+arguments.length);};q.i=3;q.f=s.f;q.l=p;q.b=e;q.a=d;q.c=c;q.d=s.d;return q}()}var d=null,e=function(){function a(c,d,e,f,q){var s=null;if(4<arguments.length){for(var s=0,u=Array(arguments.length-4);s<u.length;)u[s]=arguments[s+4],++s;s=new F(u,0)}return b.call(this,c,d,e,f,s)}function b(a,c,d,e,f){return function(){function b(a){var c=null;if(0<arguments.length){for(var c=0,d=Array(arguments.length-
			0);c<d.length;)d[c]=arguments[c+0],++c;c=new F(d,0)}return g.call(this,c)}function g(b){return T.r(a,c,d,e,ae.a(f,b))}b.i=0;b.f=function(a){a=D(a);return g(a)};b.d=g;return b}()}a.i=4;a.f=function(a){var c=G(a);a=K(a);var d=G(a);a=K(a);var e=G(a);a=K(a);var f=G(a);a=H(a);return b(c,d,e,f,a)};a.d=b;return a}(),d=function(d,g,h,l,m){switch(arguments.length){case 1:return d;case 2:return c.call(this,d,g);case 3:return b.call(this,d,g,h);case 4:return a.call(this,d,g,h,l);default:var p=null;if(4<arguments.length){for(var p=
			0,q=Array(arguments.length-4);p<q.length;)q[p]=arguments[p+4],++p;p=new F(q,0)}return e.d(d,g,h,l,p)}throw Error("Invalid arity: "+arguments.length);};d.i=4;d.f=e.f;d.b=function(a){return a};d.a=c;d.c=b;d.n=a;d.d=e.d;return d}(),Ke=function(){function a(a,b,c,d){return function(){function l(l,m,p){l=null==l?b:l;m=null==m?c:m;p=null==p?d:p;return a.c?a.c(l,m,p):a.call(null,l,m,p)}function m(d,h){var l=null==d?b:d,m=null==h?c:h;return a.a?a.a(l,m):a.call(null,l,m)}var p=null,q=function(){function l(a,
			b,c,d){var e=null;if(3<arguments.length){for(var e=0,f=Array(arguments.length-3);e<f.length;)f[e]=arguments[e+3],++e;e=new F(f,0)}return m.call(this,a,b,c,e)}function m(l,p,q,s){return T.r(a,null==l?b:l,null==p?c:p,null==q?d:q,s)}l.i=3;l.f=function(a){var b=G(a);a=K(a);var c=G(a);a=K(a);var d=G(a);a=H(a);return m(b,c,d,a)};l.d=m;return l}(),p=function(a,b,c,d){switch(arguments.length){case 2:return m.call(this,a,b);case 3:return l.call(this,a,b,c);default:var e=null;if(3<arguments.length){for(var e=
			0,f=Array(arguments.length-3);e<f.length;)f[e]=arguments[e+3],++e;e=new F(f,0)}return q.d(a,b,c,e)}throw Error("Invalid arity: "+arguments.length);};p.i=3;p.f=q.f;p.a=m;p.c=l;p.d=q.d;return p}()}function b(a,b,c){return function(){function d(h,l,m){h=null==h?b:h;l=null==l?c:l;return a.c?a.c(h,l,m):a.call(null,h,l,m)}function l(d,h){var l=null==d?b:d,m=null==h?c:h;return a.a?a.a(l,m):a.call(null,l,m)}var m=null,p=function(){function d(a,b,c,e){var f=null;if(3<arguments.length){for(var f=0,g=Array(arguments.length-
			3);f<g.length;)g[f]=arguments[f+3],++f;f=new F(g,0)}return h.call(this,a,b,c,f)}function h(d,l,m,p){return T.r(a,null==d?b:d,null==l?c:l,m,p)}d.i=3;d.f=function(a){var b=G(a);a=K(a);var c=G(a);a=K(a);var d=G(a);a=H(a);return h(b,c,d,a)};d.d=h;return d}(),m=function(a,b,c,e){switch(arguments.length){case 2:return l.call(this,a,b);case 3:return d.call(this,a,b,c);default:var f=null;if(3<arguments.length){for(var f=0,g=Array(arguments.length-3);f<g.length;)g[f]=arguments[f+3],++f;f=new F(g,0)}return p.d(a,
			b,c,f)}throw Error("Invalid arity: "+arguments.length);};m.i=3;m.f=p.f;m.a=l;m.c=d;m.d=p.d;return m}()}function c(a,b){return function(){function c(d,g,h){d=null==d?b:d;return a.c?a.c(d,g,h):a.call(null,d,g,h)}function d(c,g){var h=null==c?b:c;return a.a?a.a(h,g):a.call(null,h,g)}function l(c){c=null==c?b:c;return a.b?a.b(c):a.call(null,c)}var m=null,p=function(){function c(a,b,e,f){var g=null;if(3<arguments.length){for(var g=0,h=Array(arguments.length-3);g<h.length;)h[g]=arguments[g+3],++g;g=new F(h,
			0)}return d.call(this,a,b,e,g)}function d(c,g,h,l){return T.r(a,null==c?b:c,g,h,l)}c.i=3;c.f=function(a){var b=G(a);a=K(a);var c=G(a);a=K(a);var e=G(a);a=H(a);return d(b,c,e,a)};c.d=d;return c}(),m=function(a,b,e,f){switch(arguments.length){case 1:return l.call(this,a);case 2:return d.call(this,a,b);case 3:return c.call(this,a,b,e);default:var m=null;if(3<arguments.length){for(var m=0,B=Array(arguments.length-3);m<B.length;)B[m]=arguments[m+3],++m;m=new F(B,0)}return p.d(a,b,e,m)}throw Error("Invalid arity: "+
			arguments.length);};m.i=3;m.f=p.f;m.b=l;m.a=d;m.c=c;m.d=p.d;return m}()}var d=null,d=function(d,f,g,h){switch(arguments.length){case 2:return c.call(this,d,f);case 3:return b.call(this,d,f,g);case 4:return a.call(this,d,f,g,h)}throw Error("Invalid arity: "+arguments.length);};d.a=c;d.c=b;d.n=a;return d}(),Le=function(){function a(a,b){return new V(null,function(){var f=D(b);if(f){if(fd(f)){for(var g=Yb(f),h=Q(g),l=Td(h),m=0;;)if(m<h){var p=function(){var b=C.a(g,m);return a.b?a.b(b):a.call(null,b)}();
			null!=p&&l.add(p);m+=1}else break;return Wd(l.ca(),c.a(a,Zb(f)))}h=function(){var b=G(f);return a.b?a.b(b):a.call(null,b)}();return null==h?c.a(a,H(f)):M(h,c.a(a,H(f)))}return null},null,null)}function b(a){return function(b){return function(){function c(f,g){var h=a.b?a.b(g):a.call(null,g);return null==h?f:b.a?b.a(f,h):b.call(null,f,h)}function g(a){return b.b?b.b(a):b.call(null,a)}function h(){return b.l?b.l():b.call(null)}var l=null,l=function(a,b){switch(arguments.length){case 0:return h.call(this);
			case 1:return g.call(this,a);case 2:return c.call(this,a,b)}throw Error("Invalid arity: "+arguments.length);};l.l=h;l.b=g;l.a=c;return l}()}}var c=null,c=function(c,e){switch(arguments.length){case 1:return b.call(this,c);case 2:return a.call(this,c,e)}throw Error("Invalid arity: "+arguments.length);};c.b=b;c.a=a;return c}();function Me(a){this.state=a;this.q=0;this.j=32768}Me.prototype.Ra=function(){return this.state};Me.prototype.bb=function(a,b){return this.state=b};
			var Ne=function(){function a(a,b){return function g(b,c){return new V(null,function(){var e=D(c);if(e){if(fd(e)){for(var p=Yb(e),q=Q(p),s=Td(q),u=0;;)if(u<q){var v=function(){var c=b+u,e=C.a(p,u);return a.a?a.a(c,e):a.call(null,c,e)}();null!=v&&s.add(v);u+=1}else break;return Wd(s.ca(),g(b+q,Zb(e)))}q=function(){var c=G(e);return a.a?a.a(b,c):a.call(null,b,c)}();return null==q?g(b+1,H(e)):M(q,g(b+1,H(e)))}return null},null,null)}(0,b)}function b(a){return function(b){return function(c){return function(){function g(g,
			h){var l=c.bb(0,c.Ra(null)+1),l=a.a?a.a(l,h):a.call(null,l,h);return null==l?g:b.a?b.a(g,l):b.call(null,g,l)}function h(a){return b.b?b.b(a):b.call(null,a)}function l(){return b.l?b.l():b.call(null)}var m=null,m=function(a,b){switch(arguments.length){case 0:return l.call(this);case 1:return h.call(this,a);case 2:return g.call(this,a,b)}throw Error("Invalid arity: "+arguments.length);};m.l=l;m.b=h;m.a=g;return m}()}(new Me(-1))}}var c=null,c=function(c,e){switch(arguments.length){case 1:return b.call(this,
			c);case 2:return a.call(this,c,e)}throw Error("Invalid arity: "+arguments.length);};c.b=b;c.a=a;return c}(),Oe=function(){function a(a,b,c,d){return new V(null,function(){var f=D(b),q=D(c),s=D(d);if(f&&q&&s){var u=M,v;v=G(f);var y=G(q),B=G(s);v=a.c?a.c(v,y,B):a.call(null,v,y,B);f=u(v,e.n(a,H(f),H(q),H(s)))}else f=null;return f},null,null)}function b(a,b,c){return new V(null,function(){var d=D(b),f=D(c);if(d&&f){var q=M,s;s=G(d);var u=G(f);s=a.a?a.a(s,u):a.call(null,s,u);d=q(s,e.c(a,H(d),H(f)))}else d=
			null;return d},null,null)}function c(a,b){return new V(null,function(){var c=D(b);if(c){if(fd(c)){for(var d=Yb(c),f=Q(d),q=Td(f),s=0;;)if(s<f)Xd(q,function(){var b=C.a(d,s);return a.b?a.b(b):a.call(null,b)}()),s+=1;else break;return Wd(q.ca(),e.a(a,Zb(c)))}return M(function(){var b=G(c);return a.b?a.b(b):a.call(null,b)}(),e.a(a,H(c)))}return null},null,null)}function d(a){return function(b){return function(){function c(d,e){var f=a.b?a.b(e):a.call(null,e);return b.a?b.a(d,f):b.call(null,d,f)}function d(a){return b.b?
			b.b(a):b.call(null,a)}function e(){return b.l?b.l():b.call(null)}var f=null,s=function(){function c(a,b,e){var f=null;if(2<arguments.length){for(var f=0,g=Array(arguments.length-2);f<g.length;)g[f]=arguments[f+2],++f;f=new F(g,0)}return d.call(this,a,b,f)}function d(c,e,f){e=T.c(a,e,f);return b.a?b.a(c,e):b.call(null,c,e)}c.i=2;c.f=function(a){var b=G(a);a=K(a);var c=G(a);a=H(a);return d(b,c,a)};c.d=d;return c}(),f=function(a,b,f){switch(arguments.length){case 0:return e.call(this);case 1:return d.call(this,
			a);case 2:return c.call(this,a,b);default:var g=null;if(2<arguments.length){for(var g=0,h=Array(arguments.length-2);g<h.length;)h[g]=arguments[g+2],++g;g=new F(h,0)}return s.d(a,b,g)}throw Error("Invalid arity: "+arguments.length);};f.i=2;f.f=s.f;f.l=e;f.b=d;f.a=c;f.d=s.d;return f}()}}var e=null,f=function(){function a(c,d,e,f,g){var u=null;if(4<arguments.length){for(var u=0,v=Array(arguments.length-4);u<v.length;)v[u]=arguments[u+4],++u;u=new F(v,0)}return b.call(this,c,d,e,f,u)}function b(a,c,d,
			f,g){var h=function y(a){return new V(null,function(){var b=e.a(D,a);return Ee(ud,b)?M(e.a(G,b),y(e.a(H,b))):null},null,null)};return e.a(function(){return function(b){return T.a(a,b)}}(h),h(Nc.d(g,f,Kc([d,c],0))))}a.i=4;a.f=function(a){var c=G(a);a=K(a);var d=G(a);a=K(a);var e=G(a);a=K(a);var f=G(a);a=H(a);return b(c,d,e,f,a)};a.d=b;return a}(),e=function(e,h,l,m,p){switch(arguments.length){case 1:return d.call(this,e);case 2:return c.call(this,e,h);case 3:return b.call(this,e,h,l);case 4:return a.call(this,
			e,h,l,m);default:var q=null;if(4<arguments.length){for(var q=0,s=Array(arguments.length-4);q<s.length;)s[q]=arguments[q+4],++q;q=new F(s,0)}return f.d(e,h,l,m,q)}throw Error("Invalid arity: "+arguments.length);};e.i=4;e.f=f.f;e.b=d;e.a=c;e.c=b;e.n=a;e.d=f.d;return e}(),Pe=function(){function a(a,b){return new V(null,function(){if(0<a){var f=D(b);return f?M(G(f),c.a(a-1,H(f))):null}return null},null,null)}function b(a){return function(b){return function(a){return function(){function c(d,g){var h=qb(a),
			l=a.bb(0,a.Ra(null)-1),h=0<h?b.a?b.a(d,g):b.call(null,d,g):d;return 0<l?h:Ac(h)?h:new yc(h)}function d(a){return b.b?b.b(a):b.call(null,a)}function l(){return b.l?b.l():b.call(null)}var m=null,m=function(a,b){switch(arguments.length){case 0:return l.call(this);case 1:return d.call(this,a);case 2:return c.call(this,a,b)}throw Error("Invalid arity: "+arguments.length);};m.l=l;m.b=d;m.a=c;return m}()}(new Me(a))}}var c=null,c=function(c,e){switch(arguments.length){case 1:return b.call(this,c);case 2:return a.call(this,
			c,e)}throw Error("Invalid arity: "+arguments.length);};c.b=b;c.a=a;return c}(),Qe=function(){function a(a,b){return new V(null,function(c){return function(){return c(a,b)}}(function(a,b){for(;;){var c=D(b);if(0<a&&c){var d=a-1,c=H(c);a=d;b=c}else return c}}),null,null)}function b(a){return function(b){return function(a){return function(){function c(d,g){var h=qb(a);a.bb(0,a.Ra(null)-1);return 0<h?d:b.a?b.a(d,g):b.call(null,d,g)}function d(a){return b.b?b.b(a):b.call(null,a)}function l(){return b.l?
			b.l():b.call(null)}var m=null,m=function(a,b){switch(arguments.length){case 0:return l.call(this);case 1:return d.call(this,a);case 2:return c.call(this,a,b)}throw Error("Invalid arity: "+arguments.length);};m.l=l;m.b=d;m.a=c;return m}()}(new Me(a))}}var c=null,c=function(c,e){switch(arguments.length){case 1:return b.call(this,c);case 2:return a.call(this,c,e)}throw Error("Invalid arity: "+arguments.length);};c.b=b;c.a=a;return c}(),Re=function(){function a(a,b){return new V(null,function(c){return function(){return c(a,
			b)}}(function(a,b){for(;;){var c=D(b),d;if(d=c)d=G(c),d=a.b?a.b(d):a.call(null,d);if(t(d))d=a,c=H(c),a=d,b=c;else return c}}),null,null)}function b(a){return function(b){return function(c){return function(){function g(g,h){var l=qb(c);if(t(t(l)?a.b?a.b(h):a.call(null,h):l))return g;ac(c,null);return b.a?b.a(g,h):b.call(null,g,h)}function h(a){return b.b?b.b(a):b.call(null,a)}function l(){return b.l?b.l():b.call(null)}var m=null,m=function(a,b){switch(arguments.length){case 0:return l.call(this);case 1:return h.call(this,
			a);case 2:return g.call(this,a,b)}throw Error("Invalid arity: "+arguments.length);};m.l=l;m.b=h;m.a=g;return m}()}(new Me(!0))}}var c=null,c=function(c,e){switch(arguments.length){case 1:return b.call(this,c);case 2:return a.call(this,c,e)}throw Error("Invalid arity: "+arguments.length);};c.b=b;c.a=a;return c}(),Se=function(){function a(a,b){return Pe.a(a,c.b(b))}function b(a){return new V(null,function(){return M(a,c.b(a))},null,null)}var c=null,c=function(c,e){switch(arguments.length){case 1:return b.call(this,
			c);case 2:return a.call(this,c,e)}throw Error("Invalid arity: "+arguments.length);};c.b=b;c.a=a;return c}(),Te=function(){function a(a,b){return Pe.a(a,c.b(b))}function b(a){return new V(null,function(){return M(a.l?a.l():a.call(null),c.b(a))},null,null)}var c=null,c=function(c,e){switch(arguments.length){case 1:return b.call(this,c);case 2:return a.call(this,c,e)}throw Error("Invalid arity: "+arguments.length);};c.b=b;c.a=a;return c}(),Ue=function(){function a(a,c){return new V(null,function(){var f=
			D(a),g=D(c);return f&&g?M(G(f),M(G(g),b.a(H(f),H(g)))):null},null,null)}var b=null,c=function(){function a(b,d,h){var l=null;if(2<arguments.length){for(var l=0,m=Array(arguments.length-2);l<m.length;)m[l]=arguments[l+2],++l;l=new F(m,0)}return c.call(this,b,d,l)}function c(a,d,e){return new V(null,function(){var c=Oe.a(D,Nc.d(e,d,Kc([a],0)));return Ee(ud,c)?ae.a(Oe.a(G,c),T.a(b,Oe.a(H,c))):null},null,null)}a.i=2;a.f=function(a){var b=G(a);a=K(a);var d=G(a);a=H(a);return c(b,d,a)};a.d=c;return a}(),
			b=function(b,e,f){switch(arguments.length){case 2:return a.call(this,b,e);default:var g=null;if(2<arguments.length){for(var g=0,h=Array(arguments.length-2);g<h.length;)h[g]=arguments[g+2],++g;g=new F(h,0)}return c.d(b,e,g)}throw Error("Invalid arity: "+arguments.length);};b.i=2;b.f=c.f;b.a=a;b.d=c.d;return b}(),We=function(){function a(a){return Ie.a(Oe.b(a),Ve)}var b=null,c=function(){function a(c,d){var h=null;if(1<arguments.length){for(var h=0,l=Array(arguments.length-1);h<l.length;)l[h]=arguments[h+
			1],++h;h=new F(l,0)}return b.call(this,c,h)}function b(a,c){return T.a(ae,T.c(Oe,a,c))}a.i=1;a.f=function(a){var c=G(a);a=H(a);return b(c,a)};a.d=b;return a}(),b=function(b,e){switch(arguments.length){case 1:return a.call(this,b);default:var f=null;if(1<arguments.length){for(var f=0,g=Array(arguments.length-1);f<g.length;)g[f]=arguments[f+1],++f;f=new F(g,0)}return c.d(b,f)}throw Error("Invalid arity: "+arguments.length);};b.i=1;b.f=c.f;b.b=a;b.d=c.d;return b}(),Xe=function(){function a(a,b){return new V(null,
			function(){var f=D(b);if(f){if(fd(f)){for(var g=Yb(f),h=Q(g),l=Td(h),m=0;;)if(m<h){var p;p=C.a(g,m);p=a.b?a.b(p):a.call(null,p);t(p)&&(p=C.a(g,m),l.add(p));m+=1}else break;return Wd(l.ca(),c.a(a,Zb(f)))}g=G(f);f=H(f);return t(a.b?a.b(g):a.call(null,g))?M(g,c.a(a,f)):c.a(a,f)}return null},null,null)}function b(a){return function(b){return function(){function c(f,g){return t(a.b?a.b(g):a.call(null,g))?b.a?b.a(f,g):b.call(null,f,g):f}function g(a){return b.b?b.b(a):b.call(null,a)}function h(){return b.l?
			b.l():b.call(null)}var l=null,l=function(a,b){switch(arguments.length){case 0:return h.call(this);case 1:return g.call(this,a);case 2:return c.call(this,a,b)}throw Error("Invalid arity: "+arguments.length);};l.l=h;l.b=g;l.a=c;return l}()}}var c=null,c=function(c,e){switch(arguments.length){case 1:return b.call(this,c);case 2:return a.call(this,c,e)}throw Error("Invalid arity: "+arguments.length);};c.b=b;c.a=a;return c}(),Ye=function(){function a(a,b){return Xe.a(He(a),b)}function b(a){return Xe.b(He(a))}
			var c=null,c=function(c,e){switch(arguments.length){case 1:return b.call(this,c);case 2:return a.call(this,c,e)}throw Error("Invalid arity: "+arguments.length);};c.b=b;c.a=a;return c}();function Ze(a){var b=$e;return function d(a){return new V(null,function(){return M(a,t(b.b?b.b(a):b.call(null,a))?We.d(d,Kc([D.b?D.b(a):D.call(null,a)],0)):null)},null,null)}(a)}
			var af=function(){function a(a,b,c){return a&&(a.q&4||a.dc)?O(ce(wd.n(b,de,Ob(a),c)),Vc(a)):wd.n(b,Nc,a,c)}function b(a,b){return null!=a?a&&(a.q&4||a.dc)?O(ce(A.c(Pb,Ob(a),b)),Vc(a)):A.c(Ra,a,b):A.c(Nc,J,b)}var c=null,c=function(c,e,f){switch(arguments.length){case 2:return b.call(this,c,e);case 3:return a.call(this,c,e,f)}throw Error("Invalid arity: "+arguments.length);};c.a=b;c.c=a;return c}(),bf=function(){function a(a,b,c,h){return new V(null,function(){var l=D(h);if(l){var m=Pe.a(a,l);return a===
			Q(m)?M(m,d.n(a,b,c,Qe.a(b,l))):Ra(J,Pe.a(a,ae.a(m,c)))}return null},null,null)}function b(a,b,c){return new V(null,function(){var h=D(c);if(h){var l=Pe.a(a,h);return a===Q(l)?M(l,d.c(a,b,Qe.a(b,h))):null}return null},null,null)}function c(a,b){return d.c(a,a,b)}var d=null,d=function(d,f,g,h){switch(arguments.length){case 2:return c.call(this,d,f);case 3:return b.call(this,d,f,g);case 4:return a.call(this,d,f,g,h)}throw Error("Invalid arity: "+arguments.length);};d.a=c;d.c=b;d.n=a;return d}(),cf=function(){function a(a,
			b,c){var g=jd;for(b=D(b);;)if(b){var h=a;if(h?h.j&256||h.Rb||(h.j?0:w(Za,h)):w(Za,h)){a=S.c(a,G(b),g);if(g===a)return c;b=K(b)}else return c}else return a}function b(a,b){return c.c(a,b,null)}var c=null,c=function(c,e,f){switch(arguments.length){case 2:return b.call(this,c,e);case 3:return a.call(this,c,e,f)}throw Error("Invalid arity: "+arguments.length);};c.a=b;c.c=a;return c}(),df=function(){function a(a,b,c,d,f,q){var s=R.c(b,0,null);return(b=Ed(b))?Rc.c(a,s,e.P(S.a(a,s),b,c,d,f,q)):Rc.c(a,s,
			function(){var b=S.a(a,s);return c.n?c.n(b,d,f,q):c.call(null,b,d,f,q)}())}function b(a,b,c,d,f){var q=R.c(b,0,null);return(b=Ed(b))?Rc.c(a,q,e.r(S.a(a,q),b,c,d,f)):Rc.c(a,q,function(){var b=S.a(a,q);return c.c?c.c(b,d,f):c.call(null,b,d,f)}())}function c(a,b,c,d){var f=R.c(b,0,null);return(b=Ed(b))?Rc.c(a,f,e.n(S.a(a,f),b,c,d)):Rc.c(a,f,function(){var b=S.a(a,f);return c.a?c.a(b,d):c.call(null,b,d)}())}function d(a,b,c){var d=R.c(b,0,null);return(b=Ed(b))?Rc.c(a,d,e.c(S.a(a,d),b,c)):Rc.c(a,d,function(){var b=
			S.a(a,d);return c.b?c.b(b):c.call(null,b)}())}var e=null,f=function(){function a(c,d,e,f,g,u,v){var y=null;if(6<arguments.length){for(var y=0,B=Array(arguments.length-6);y<B.length;)B[y]=arguments[y+6],++y;y=new F(B,0)}return b.call(this,c,d,e,f,g,u,y)}function b(a,c,d,f,g,h,v){var y=R.c(c,0,null);return(c=Ed(c))?Rc.c(a,y,T.d(e,S.a(a,y),c,d,f,Kc([g,h,v],0))):Rc.c(a,y,T.d(d,S.a(a,y),f,g,h,Kc([v],0)))}a.i=6;a.f=function(a){var c=G(a);a=K(a);var d=G(a);a=K(a);var e=G(a);a=K(a);var f=G(a);a=K(a);var g=
			G(a);a=K(a);var v=G(a);a=H(a);return b(c,d,e,f,g,v,a)};a.d=b;return a}(),e=function(e,h,l,m,p,q,s){switch(arguments.length){case 3:return d.call(this,e,h,l);case 4:return c.call(this,e,h,l,m);case 5:return b.call(this,e,h,l,m,p);case 6:return a.call(this,e,h,l,m,p,q);default:var u=null;if(6<arguments.length){for(var u=0,v=Array(arguments.length-6);u<v.length;)v[u]=arguments[u+6],++u;u=new F(v,0)}return f.d(e,h,l,m,p,q,u)}throw Error("Invalid arity: "+arguments.length);};e.i=6;e.f=f.f;e.c=d;e.n=c;
			e.r=b;e.P=a;e.d=f.d;return e}();function ef(a,b){this.u=a;this.e=b}function ff(a){return new ef(a,[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null])}function gf(a){return new ef(a.u,Fa(a.e))}function hf(a){a=a.g;return 32>a?0:a-1>>>5<<5}function jf(a,b,c){for(;;){if(0===b)return c;var d=ff(a);d.e[0]=c;c=d;b-=5}}
			var lf=function kf(b,c,d,e){var f=gf(d),g=b.g-1>>>c&31;5===c?f.e[g]=e:(d=d.e[g],b=null!=d?kf(b,c-5,d,e):jf(null,c-5,e),f.e[g]=b);return f};function mf(a,b){throw Error([z("No item "),z(a),z(" in vector of length "),z(b)].join(""));}function nf(a,b){if(b>=hf(a))return a.W;for(var c=a.root,d=a.shift;;)if(0<d)var e=d-5,c=c.e[b>>>d&31],d=e;else return c.e}function of(a,b){return 0<=b&&b<a.g?nf(a,b):mf(b,a.g)}
			var qf=function pf(b,c,d,e,f){var g=gf(d);if(0===c)g.e[e&31]=f;else{var h=e>>>c&31;b=pf(b,c-5,d.e[h],e,f);g.e[h]=b}return g},sf=function rf(b,c,d){var e=b.g-2>>>c&31;if(5<c){b=rf(b,c-5,d.e[e]);if(null==b&&0===e)return null;d=gf(d);d.e[e]=b;return d}if(0===e)return null;d=gf(d);d.e[e]=null;return d};function tf(a,b,c,d,e,f){this.m=a;this.zb=b;this.e=c;this.oa=d;this.start=e;this.end=f}tf.prototype.ga=function(){return this.m<this.end};
			tf.prototype.next=function(){32===this.m-this.zb&&(this.e=nf(this.oa,this.m),this.zb+=32);var a=this.e[this.m&31];this.m+=1;return a};function W(a,b,c,d,e,f){this.k=a;this.g=b;this.shift=c;this.root=d;this.W=e;this.p=f;this.j=167668511;this.q=8196}k=W.prototype;k.toString=function(){return ec(this)};k.t=function(a,b){return $a.c(this,b,null)};k.s=function(a,b,c){return"number"===typeof b?C.c(this,b,c):c};
			k.gb=function(a,b,c){a=0;for(var d=c;;)if(a<this.g){var e=nf(this,a);c=e.length;a:{for(var f=0;;)if(f<c){var g=f+a,h=e[f],d=b.c?b.c(d,g,h):b.call(null,d,g,h);if(Ac(d)){e=d;break a}f+=1}else{e=d;break a}e=void 0}if(Ac(e))return b=e,L.b?L.b(b):L.call(null,b);a+=c;d=e}else return d};k.Q=function(a,b){return of(this,b)[b&31]};k.$=function(a,b,c){return 0<=b&&b<this.g?nf(this,b)[b&31]:c};
			k.Ua=function(a,b,c){if(0<=b&&b<this.g)return hf(this)<=b?(a=Fa(this.W),a[b&31]=c,new W(this.k,this.g,this.shift,this.root,a,null)):new W(this.k,this.g,this.shift,qf(this,this.shift,this.root,b,c),this.W,null);if(b===this.g)return Ra(this,c);throw Error([z("Index "),z(b),z(" out of bounds  [0,"),z(this.g),z("]")].join(""));};k.vb=!0;k.fb=function(){var a=this.g;return new tf(0,0,0<Q(this)?nf(this,0):null,this,0,a)};k.H=function(){return this.k};k.L=function(){return this.g};
			k.hb=function(){return C.a(this,0)};k.ib=function(){return C.a(this,1)};k.La=function(){return 0<this.g?C.a(this,this.g-1):null};
			k.Ma=function(){if(0===this.g)throw Error("Can't pop empty vector");if(1===this.g)return ub(Mc,this.k);if(1<this.g-hf(this))return new W(this.k,this.g-1,this.shift,this.root,this.W.slice(0,-1),null);var a=nf(this,this.g-2),b=sf(this,this.shift,this.root),b=null==b?uf:b,c=this.g-1;return 5<this.shift&&null==b.e[1]?new W(this.k,c,this.shift-5,b.e[0],a,null):new W(this.k,c,this.shift,b,a,null)};k.ab=function(){return 0<this.g?new Hc(this,this.g-1,null):null};
			k.B=function(){var a=this.p;return null!=a?a:this.p=a=wc(this)};k.A=function(a,b){if(b instanceof W)if(this.g===Q(b))for(var c=cc(this),d=cc(b);;)if(t(c.ga())){var e=c.next(),f=d.next();if(!sc.a(e,f))return!1}else return!0;else return!1;else return Ic(this,b)};k.$a=function(){var a=this;return new vf(a.g,a.shift,function(){var b=a.root;return wf.b?wf.b(b):wf.call(null,b)}(),function(){var b=a.W;return xf.b?xf.b(b):xf.call(null,b)}())};k.J=function(){return O(Mc,this.k)};
			k.R=function(a,b){return Cc.a(this,b)};k.O=function(a,b,c){a=0;for(var d=c;;)if(a<this.g){var e=nf(this,a);c=e.length;a:{for(var f=0;;)if(f<c){var g=e[f],d=b.a?b.a(d,g):b.call(null,d,g);if(Ac(d)){e=d;break a}f+=1}else{e=d;break a}e=void 0}if(Ac(e))return b=e,L.b?L.b(b):L.call(null,b);a+=c;d=e}else return d};k.Ka=function(a,b,c){if("number"===typeof b)return pb(this,b,c);throw Error("Vector's key for assoc must be a number.");};
			k.D=function(){if(0===this.g)return null;if(32>=this.g)return new F(this.W,0);var a;a:{a=this.root;for(var b=this.shift;;)if(0<b)b-=5,a=a.e[0];else{a=a.e;break a}a=void 0}return yf.n?yf.n(this,a,0,0):yf.call(null,this,a,0,0)};k.F=function(a,b){return new W(b,this.g,this.shift,this.root,this.W,this.p)};
			k.G=function(a,b){if(32>this.g-hf(this)){for(var c=this.W.length,d=Array(c+1),e=0;;)if(e<c)d[e]=this.W[e],e+=1;else break;d[c]=b;return new W(this.k,this.g+1,this.shift,this.root,d,null)}c=(d=this.g>>>5>1<<this.shift)?this.shift+5:this.shift;d?(d=ff(null),d.e[0]=this.root,e=jf(null,this.shift,new ef(null,this.W)),d.e[1]=e):d=lf(this,this.shift,this.root,new ef(null,this.W));return new W(this.k,this.g+1,c,d,[b],null)};
			k.call=function(){var a=null,a=function(a,c,d){switch(arguments.length){case 2:return this.Q(null,c);case 3:return this.$(null,c,d)}throw Error("Invalid arity: "+arguments.length);};a.a=function(a,c){return this.Q(null,c)};a.c=function(a,c,d){return this.$(null,c,d)};return a}();k.apply=function(a,b){return this.call.apply(this,[this].concat(Fa(b)))};k.b=function(a){return this.Q(null,a)};k.a=function(a,b){return this.$(null,a,b)};
			var uf=new ef(null,[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null]),Mc=new W(null,0,5,uf,[],0);W.prototype[Ea]=function(){return uc(this)};function zf(a){return Qb(A.c(Pb,Ob(Mc),a))}
			var Af=function(){function a(a){var d=null;if(0<arguments.length){for(var d=0,e=Array(arguments.length-0);d<e.length;)e[d]=arguments[d+0],++d;d=new F(e,0)}return b.call(this,d)}function b(a){if(a instanceof F&&0===a.m)a:{a=a.e;var b=a.length;if(32>b)a=new W(null,b,5,uf,a,null);else{for(var e=32,f=(new W(null,32,5,uf,a.slice(0,32),null)).$a(null);;)if(e<b)var g=e+1,f=de.a(f,a[e]),e=g;else{a=Qb(f);break a}a=void 0}}else a=zf(a);return a}a.i=0;a.f=function(a){a=D(a);return b(a)};a.d=b;return a}();
			function Bf(a,b,c,d,e,f){this.ha=a;this.Ja=b;this.m=c;this.V=d;this.k=e;this.p=f;this.j=32375020;this.q=1536}k=Bf.prototype;k.toString=function(){return ec(this)};k.H=function(){return this.k};k.T=function(){if(this.V+1<this.Ja.length){var a;a=this.ha;var b=this.Ja,c=this.m,d=this.V+1;a=yf.n?yf.n(a,b,c,d):yf.call(null,a,b,c,d);return null==a?null:a}return $b(this)};k.B=function(){var a=this.p;return null!=a?a:this.p=a=wc(this)};k.A=function(a,b){return Ic(this,b)};k.J=function(){return O(Mc,this.k)};
			k.R=function(a,b){var c=this;return Cc.a(function(){var a=c.ha,b=c.m+c.V,f=Q(c.ha);return Cf.c?Cf.c(a,b,f):Cf.call(null,a,b,f)}(),b)};k.O=function(a,b,c){var d=this;return Cc.c(function(){var a=d.ha,b=d.m+d.V,c=Q(d.ha);return Cf.c?Cf.c(a,b,c):Cf.call(null,a,b,c)}(),b,c)};k.N=function(){return this.Ja[this.V]};k.S=function(){if(this.V+1<this.Ja.length){var a;a=this.ha;var b=this.Ja,c=this.m,d=this.V+1;a=yf.n?yf.n(a,b,c,d):yf.call(null,a,b,c,d);return null==a?J:a}return Zb(this)};k.D=function(){return this};
			k.Cb=function(){return Ud.a(this.Ja,this.V)};k.Db=function(){var a=this.m+this.Ja.length;if(a<Ma(this.ha)){var b=this.ha,c=nf(this.ha,a);return yf.n?yf.n(b,c,a,0):yf.call(null,b,c,a,0)}return J};k.F=function(a,b){var c=this.ha,d=this.Ja,e=this.m,f=this.V;return yf.r?yf.r(c,d,e,f,b):yf.call(null,c,d,e,f,b)};k.G=function(a,b){return M(b,this)};k.Bb=function(){var a=this.m+this.Ja.length;if(a<Ma(this.ha)){var b=this.ha,c=nf(this.ha,a);return yf.n?yf.n(b,c,a,0):yf.call(null,b,c,a,0)}return null};
			Bf.prototype[Ea]=function(){return uc(this)};var yf=function(){function a(a,b,c,d,l){return new Bf(a,b,c,d,l,null)}function b(a,b,c,d){return new Bf(a,b,c,d,null,null)}function c(a,b,c){return new Bf(a,of(a,b),b,c,null,null)}var d=null,d=function(d,f,g,h,l){switch(arguments.length){case 3:return c.call(this,d,f,g);case 4:return b.call(this,d,f,g,h);case 5:return a.call(this,d,f,g,h,l)}throw Error("Invalid arity: "+arguments.length);};d.c=c;d.n=b;d.r=a;return d}();
			function Df(a,b,c,d,e){this.k=a;this.oa=b;this.start=c;this.end=d;this.p=e;this.j=166617887;this.q=8192}k=Df.prototype;k.toString=function(){return ec(this)};k.t=function(a,b){return $a.c(this,b,null)};k.s=function(a,b,c){return"number"===typeof b?C.c(this,b,c):c};k.Q=function(a,b){return 0>b||this.end<=this.start+b?mf(b,this.end-this.start):C.a(this.oa,this.start+b)};k.$=function(a,b,c){return 0>b||this.end<=this.start+b?c:C.c(this.oa,this.start+b,c)};
			k.Ua=function(a,b,c){var d=this.start+b;a=this.k;c=Rc.c(this.oa,d,c);b=this.start;var e=this.end,d=d+1,d=e>d?e:d;return Ef.r?Ef.r(a,c,b,d,null):Ef.call(null,a,c,b,d,null)};k.H=function(){return this.k};k.L=function(){return this.end-this.start};k.La=function(){return C.a(this.oa,this.end-1)};k.Ma=function(){if(this.start===this.end)throw Error("Can't pop empty vector");var a=this.k,b=this.oa,c=this.start,d=this.end-1;return Ef.r?Ef.r(a,b,c,d,null):Ef.call(null,a,b,c,d,null)};
			k.ab=function(){return this.start!==this.end?new Hc(this,this.end-this.start-1,null):null};k.B=function(){var a=this.p;return null!=a?a:this.p=a=wc(this)};k.A=function(a,b){return Ic(this,b)};k.J=function(){return O(Mc,this.k)};k.R=function(a,b){return Cc.a(this,b)};k.O=function(a,b,c){return Cc.c(this,b,c)};k.Ka=function(a,b,c){if("number"===typeof b)return pb(this,b,c);throw Error("Subvec's key for assoc must be a number.");};
			k.D=function(){var a=this;return function(b){return function d(e){return e===a.end?null:M(C.a(a.oa,e),new V(null,function(){return function(){return d(e+1)}}(b),null,null))}}(this)(a.start)};k.F=function(a,b){var c=this.oa,d=this.start,e=this.end,f=this.p;return Ef.r?Ef.r(b,c,d,e,f):Ef.call(null,b,c,d,e,f)};k.G=function(a,b){var c=this.k,d=pb(this.oa,this.end,b),e=this.start,f=this.end+1;return Ef.r?Ef.r(c,d,e,f,null):Ef.call(null,c,d,e,f,null)};
			k.call=function(){var a=null,a=function(a,c,d){switch(arguments.length){case 2:return this.Q(null,c);case 3:return this.$(null,c,d)}throw Error("Invalid arity: "+arguments.length);};a.a=function(a,c){return this.Q(null,c)};a.c=function(a,c,d){return this.$(null,c,d)};return a}();k.apply=function(a,b){return this.call.apply(this,[this].concat(Fa(b)))};k.b=function(a){return this.Q(null,a)};k.a=function(a,b){return this.$(null,a,b)};Df.prototype[Ea]=function(){return uc(this)};
			function Ef(a,b,c,d,e){for(;;)if(b instanceof Df)c=b.start+c,d=b.start+d,b=b.oa;else{var f=Q(b);if(0>c||0>d||c>f||d>f)throw Error("Index out of bounds");return new Df(a,b,c,d,e)}}var Cf=function(){function a(a,b,c){return Ef(null,a,b,c,null)}function b(a,b){return c.c(a,b,Q(a))}var c=null,c=function(c,e,f){switch(arguments.length){case 2:return b.call(this,c,e);case 3:return a.call(this,c,e,f)}throw Error("Invalid arity: "+arguments.length);};c.a=b;c.c=a;return c}();
			function Ff(a,b){return a===b.u?b:new ef(a,Fa(b.e))}function wf(a){return new ef({},Fa(a.e))}function xf(a){var b=[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null];hd(a,0,b,0,a.length);return b}
			var Hf=function Gf(b,c,d,e){d=Ff(b.root.u,d);var f=b.g-1>>>c&31;if(5===c)b=e;else{var g=d.e[f];b=null!=g?Gf(b,c-5,g,e):jf(b.root.u,c-5,e)}d.e[f]=b;return d},Jf=function If(b,c,d){d=Ff(b.root.u,d);var e=b.g-2>>>c&31;if(5<c){b=If(b,c-5,d.e[e]);if(null==b&&0===e)return null;d.e[e]=b;return d}if(0===e)return null;d.e[e]=null;return d};function vf(a,b,c,d){this.g=a;this.shift=b;this.root=c;this.W=d;this.j=275;this.q=88}k=vf.prototype;
			k.call=function(){var a=null,a=function(a,c,d){switch(arguments.length){case 2:return this.t(null,c);case 3:return this.s(null,c,d)}throw Error("Invalid arity: "+arguments.length);};a.a=function(a,c){return this.t(null,c)};a.c=function(a,c,d){return this.s(null,c,d)};return a}();k.apply=function(a,b){return this.call.apply(this,[this].concat(Fa(b)))};k.b=function(a){return this.t(null,a)};k.a=function(a,b){return this.s(null,a,b)};k.t=function(a,b){return $a.c(this,b,null)};
			k.s=function(a,b,c){return"number"===typeof b?C.c(this,b,c):c};k.Q=function(a,b){if(this.root.u)return of(this,b)[b&31];throw Error("nth after persistent!");};k.$=function(a,b,c){return 0<=b&&b<this.g?C.a(this,b):c};k.L=function(){if(this.root.u)return this.g;throw Error("count after persistent!");};
			k.Ub=function(a,b,c){var d=this;if(d.root.u){if(0<=b&&b<d.g)return hf(this)<=b?d.W[b&31]=c:(a=function(){return function f(a,h){var l=Ff(d.root.u,h);if(0===a)l.e[b&31]=c;else{var m=b>>>a&31,p=f(a-5,l.e[m]);l.e[m]=p}return l}}(this).call(null,d.shift,d.root),d.root=a),this;if(b===d.g)return Pb(this,c);throw Error([z("Index "),z(b),z(" out of bounds for TransientVector of length"),z(d.g)].join(""));}throw Error("assoc! after persistent!");};
			k.Vb=function(){if(this.root.u){if(0===this.g)throw Error("Can't pop empty vector");if(1===this.g)this.g=0;else if(0<(this.g-1&31))this.g-=1;else{var a;a:if(a=this.g-2,a>=hf(this))a=this.W;else{for(var b=this.root,c=b,d=this.shift;;)if(0<d)c=Ff(b.u,c.e[a>>>d&31]),d-=5;else{a=c.e;break a}a=void 0}b=Jf(this,this.shift,this.root);b=null!=b?b:new ef(this.root.u,[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,
			null,null,null,null]);5<this.shift&&null==b.e[1]?(this.root=Ff(this.root.u,b.e[0]),this.shift-=5):this.root=b;this.g-=1;this.W=a}return this}throw Error("pop! after persistent!");};k.kb=function(a,b,c){if("number"===typeof b)return Tb(this,b,c);throw Error("TransientVector's key for assoc! must be a number.");};
			k.Sa=function(a,b){if(this.root.u){if(32>this.g-hf(this))this.W[this.g&31]=b;else{var c=new ef(this.root.u,this.W),d=[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null];d[0]=b;this.W=d;if(this.g>>>5>1<<this.shift){var d=[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],e=this.shift+
			5;d[0]=this.root;d[1]=jf(this.root.u,this.shift,c);this.root=new ef(this.root.u,d);this.shift=e}else this.root=Hf(this,this.shift,this.root,c)}this.g+=1;return this}throw Error("conj! after persistent!");};k.Ta=function(){if(this.root.u){this.root.u=null;var a=this.g-hf(this),b=Array(a);hd(this.W,0,b,0,a);return new W(null,this.g,this.shift,this.root,b,null)}throw Error("persistent! called twice");};function Kf(a,b,c,d){this.k=a;this.ea=b;this.sa=c;this.p=d;this.q=0;this.j=31850572}k=Kf.prototype;
			k.toString=function(){return ec(this)};k.H=function(){return this.k};k.B=function(){var a=this.p;return null!=a?a:this.p=a=wc(this)};k.A=function(a,b){return Ic(this,b)};k.J=function(){return O(J,this.k)};k.N=function(){return G(this.ea)};k.S=function(){var a=K(this.ea);return a?new Kf(this.k,a,this.sa,null):null==this.sa?Na(this):new Kf(this.k,this.sa,null,null)};k.D=function(){return this};k.F=function(a,b){return new Kf(b,this.ea,this.sa,this.p)};k.G=function(a,b){return M(b,this)};
			Kf.prototype[Ea]=function(){return uc(this)};function Lf(a,b,c,d,e){this.k=a;this.count=b;this.ea=c;this.sa=d;this.p=e;this.j=31858766;this.q=8192}k=Lf.prototype;k.toString=function(){return ec(this)};k.H=function(){return this.k};k.L=function(){return this.count};k.La=function(){return G(this.ea)};k.Ma=function(){if(t(this.ea)){var a=K(this.ea);return a?new Lf(this.k,this.count-1,a,this.sa,null):new Lf(this.k,this.count-1,D(this.sa),Mc,null)}return this};
			k.B=function(){var a=this.p;return null!=a?a:this.p=a=wc(this)};k.A=function(a,b){return Ic(this,b)};k.J=function(){return O(Mf,this.k)};k.N=function(){return G(this.ea)};k.S=function(){return H(D(this))};k.D=function(){var a=D(this.sa),b=this.ea;return t(t(b)?b:a)?new Kf(null,this.ea,D(a),null):null};k.F=function(a,b){return new Lf(b,this.count,this.ea,this.sa,this.p)};
			k.G=function(a,b){var c;t(this.ea)?(c=this.sa,c=new Lf(this.k,this.count+1,this.ea,Nc.a(t(c)?c:Mc,b),null)):c=new Lf(this.k,this.count+1,Nc.a(this.ea,b),Mc,null);return c};var Mf=new Lf(null,0,null,Mc,0);Lf.prototype[Ea]=function(){return uc(this)};function Nf(){this.q=0;this.j=2097152}Nf.prototype.A=function(){return!1};var Of=new Nf;function Pf(a,b){return md(dd(b)?Q(a)===Q(b)?Ee(ud,Oe.a(function(a){return sc.a(S.c(b,G(a),Of),Lc(a))},a)):null:null)}
			function Qf(a,b){var c=a.e;if(b instanceof U)a:{for(var d=c.length,e=b.pa,f=0;;){if(d<=f){c=-1;break a}var g=c[f];if(g instanceof U&&e===g.pa){c=f;break a}f+=2}c=void 0}else if(d="string"==typeof b,t(t(d)?d:"number"===typeof b))a:{d=c.length;for(e=0;;){if(d<=e){c=-1;break a}if(b===c[e]){c=e;break a}e+=2}c=void 0}else if(b instanceof qc)a:{d=c.length;e=b.ta;for(f=0;;){if(d<=f){c=-1;break a}g=c[f];if(g instanceof qc&&e===g.ta){c=f;break a}f+=2}c=void 0}else if(null==b)a:{d=c.length;for(e=0;;){if(d<=
			e){c=-1;break a}if(null==c[e]){c=e;break a}e+=2}c=void 0}else a:{d=c.length;for(e=0;;){if(d<=e){c=-1;break a}if(sc.a(b,c[e])){c=e;break a}e+=2}c=void 0}return c}function Rf(a,b,c){this.e=a;this.m=b;this.Z=c;this.q=0;this.j=32374990}k=Rf.prototype;k.toString=function(){return ec(this)};k.H=function(){return this.Z};k.T=function(){return this.m<this.e.length-2?new Rf(this.e,this.m+2,this.Z):null};k.L=function(){return(this.e.length-this.m)/2};k.B=function(){return wc(this)};
			k.A=function(a,b){return Ic(this,b)};k.J=function(){return O(J,this.Z)};k.R=function(a,b){return P.a(b,this)};k.O=function(a,b,c){return P.c(b,c,this)};k.N=function(){return new W(null,2,5,uf,[this.e[this.m],this.e[this.m+1]],null)};k.S=function(){return this.m<this.e.length-2?new Rf(this.e,this.m+2,this.Z):J};k.D=function(){return this};k.F=function(a,b){return new Rf(this.e,this.m,b)};k.G=function(a,b){return M(b,this)};Rf.prototype[Ea]=function(){return uc(this)};
			function Sf(a,b,c){this.e=a;this.m=b;this.g=c}Sf.prototype.ga=function(){return this.m<this.g};Sf.prototype.next=function(){var a=new W(null,2,5,uf,[this.e[this.m],this.e[this.m+1]],null);this.m+=2;return a};function pa(a,b,c,d){this.k=a;this.g=b;this.e=c;this.p=d;this.j=16647951;this.q=8196}k=pa.prototype;k.toString=function(){return ec(this)};k.t=function(a,b){return $a.c(this,b,null)};k.s=function(a,b,c){a=Qf(this,b);return-1===a?c:this.e[a+1]};
			k.gb=function(a,b,c){a=this.e.length;for(var d=0;;)if(d<a){var e=this.e[d],f=this.e[d+1];c=b.c?b.c(c,e,f):b.call(null,c,e,f);if(Ac(c))return b=c,L.b?L.b(b):L.call(null,b);d+=2}else return c};k.vb=!0;k.fb=function(){return new Sf(this.e,0,2*this.g)};k.H=function(){return this.k};k.L=function(){return this.g};k.B=function(){var a=this.p;return null!=a?a:this.p=a=xc(this)};
			k.A=function(a,b){if(b&&(b.j&1024||b.ic)){var c=this.e.length;if(this.g===b.L(null))for(var d=0;;)if(d<c){var e=b.s(null,this.e[d],jd);if(e!==jd)if(sc.a(this.e[d+1],e))d+=2;else return!1;else return!1}else return!0;else return!1}else return Pf(this,b)};k.$a=function(){return new Tf({},this.e.length,Fa(this.e))};k.J=function(){return ub(Uf,this.k)};k.R=function(a,b){return P.a(b,this)};k.O=function(a,b,c){return P.c(b,c,this)};
			k.wb=function(a,b){if(0<=Qf(this,b)){var c=this.e.length,d=c-2;if(0===d)return Na(this);for(var d=Array(d),e=0,f=0;;){if(e>=c)return new pa(this.k,this.g-1,d,null);sc.a(b,this.e[e])||(d[f]=this.e[e],d[f+1]=this.e[e+1],f+=2);e+=2}}else return this};
			k.Ka=function(a,b,c){a=Qf(this,b);if(-1===a){if(this.g<Vf){a=this.e;for(var d=a.length,e=Array(d+2),f=0;;)if(f<d)e[f]=a[f],f+=1;else break;e[d]=b;e[d+1]=c;return new pa(this.k,this.g+1,e,null)}return ub(cb(af.a(Qc,this),b,c),this.k)}if(c===this.e[a+1])return this;b=Fa(this.e);b[a+1]=c;return new pa(this.k,this.g,b,null)};k.rb=function(a,b){return-1!==Qf(this,b)};k.D=function(){var a=this.e;return 0<=a.length-2?new Rf(a,0,null):null};k.F=function(a,b){return new pa(b,this.g,this.e,this.p)};
			k.G=function(a,b){if(ed(b))return cb(this,C.a(b,0),C.a(b,1));for(var c=this,d=D(b);;){if(null==d)return c;var e=G(d);if(ed(e))c=cb(c,C.a(e,0),C.a(e,1)),d=K(d);else throw Error("conj on a map takes map entries or seqables of map entries");}};
			k.call=function(){var a=null,a=function(a,c,d){switch(arguments.length){case 2:return this.t(null,c);case 3:return this.s(null,c,d)}throw Error("Invalid arity: "+arguments.length);};a.a=function(a,c){return this.t(null,c)};a.c=function(a,c,d){return this.s(null,c,d)};return a}();k.apply=function(a,b){return this.call.apply(this,[this].concat(Fa(b)))};k.b=function(a){return this.t(null,a)};k.a=function(a,b){return this.s(null,a,b)};var Uf=new pa(null,0,[],null),Vf=8;pa.prototype[Ea]=function(){return uc(this)};
			function Tf(a,b,c){this.Va=a;this.qa=b;this.e=c;this.q=56;this.j=258}k=Tf.prototype;k.Jb=function(a,b){if(t(this.Va)){var c=Qf(this,b);0<=c&&(this.e[c]=this.e[this.qa-2],this.e[c+1]=this.e[this.qa-1],c=this.e,c.pop(),c.pop(),this.qa-=2);return this}throw Error("dissoc! after persistent!");};
			k.kb=function(a,b,c){var d=this;if(t(d.Va)){a=Qf(this,b);if(-1===a)return d.qa+2<=2*Vf?(d.qa+=2,d.e.push(b),d.e.push(c),this):ee.c(function(){var a=d.qa,b=d.e;return Xf.a?Xf.a(a,b):Xf.call(null,a,b)}(),b,c);c!==d.e[a+1]&&(d.e[a+1]=c);return this}throw Error("assoc! after persistent!");};
			k.Sa=function(a,b){if(t(this.Va)){if(b?b.j&2048||b.jc||(b.j?0:w(fb,b)):w(fb,b))return Rb(this,Yf.b?Yf.b(b):Yf.call(null,b),Zf.b?Zf.b(b):Zf.call(null,b));for(var c=D(b),d=this;;){var e=G(c);if(t(e))var f=e,c=K(c),d=Rb(d,function(){var a=f;return Yf.b?Yf.b(a):Yf.call(null,a)}(),function(){var a=f;return Zf.b?Zf.b(a):Zf.call(null,a)}());else return d}}else throw Error("conj! after persistent!");};
			k.Ta=function(){if(t(this.Va))return this.Va=!1,new pa(null,Cd(this.qa,2),this.e,null);throw Error("persistent! called twice");};k.t=function(a,b){return $a.c(this,b,null)};k.s=function(a,b,c){if(t(this.Va))return a=Qf(this,b),-1===a?c:this.e[a+1];throw Error("lookup after persistent!");};k.L=function(){if(t(this.Va))return Cd(this.qa,2);throw Error("count after persistent!");};function Xf(a,b){for(var c=Ob(Qc),d=0;;)if(d<a)c=ee.c(c,b[d],b[d+1]),d+=2;else return c}function $f(){this.o=!1}
			function ag(a,b){return a===b?!0:Nd(a,b)?!0:sc.a(a,b)}var bg=function(){function a(a,b,c,g,h){a=Fa(a);a[b]=c;a[g]=h;return a}function b(a,b,c){a=Fa(a);a[b]=c;return a}var c=null,c=function(c,e,f,g,h){switch(arguments.length){case 3:return b.call(this,c,e,f);case 5:return a.call(this,c,e,f,g,h)}throw Error("Invalid arity: "+arguments.length);};c.c=b;c.r=a;return c}();function cg(a,b){var c=Array(a.length-2);hd(a,0,c,0,2*b);hd(a,2*(b+1),c,2*b,c.length-2*b);return c}
			var dg=function(){function a(a,b,c,g,h,l){a=a.Na(b);a.e[c]=g;a.e[h]=l;return a}function b(a,b,c,g){a=a.Na(b);a.e[c]=g;return a}var c=null,c=function(c,e,f,g,h,l){switch(arguments.length){case 4:return b.call(this,c,e,f,g);case 6:return a.call(this,c,e,f,g,h,l)}throw Error("Invalid arity: "+arguments.length);};c.n=b;c.P=a;return c}();
			function eg(a,b,c){for(var d=a.length,e=0,f=c;;)if(e<d){c=a[e];if(null!=c){var g=a[e+1];c=b.c?b.c(f,c,g):b.call(null,f,c,g)}else c=a[e+1],c=null!=c?c.Xa(b,f):f;if(Ac(c))return a=c,L.b?L.b(a):L.call(null,a);e+=2;f=c}else return f}function fg(a,b,c){this.u=a;this.w=b;this.e=c}k=fg.prototype;k.Na=function(a){if(a===this.u)return this;var b=Dd(this.w),c=Array(0>b?4:2*(b+1));hd(this.e,0,c,0,2*b);return new fg(a,this.w,c)};
			k.nb=function(a,b,c,d,e){var f=1<<(c>>>b&31);if(0===(this.w&f))return this;var g=Dd(this.w&f-1),h=this.e[2*g],l=this.e[2*g+1];return null==h?(b=l.nb(a,b+5,c,d,e),b===l?this:null!=b?dg.n(this,a,2*g+1,b):this.w===f?null:gg(this,a,f,g)):ag(d,h)?(e[0]=!0,gg(this,a,f,g)):this};function gg(a,b,c,d){if(a.w===c)return null;a=a.Na(b);b=a.e;var e=b.length;a.w^=c;hd(b,2*(d+1),b,2*d,e-2*(d+1));b[e-2]=null;b[e-1]=null;return a}k.lb=function(){var a=this.e;return hg.b?hg.b(a):hg.call(null,a)};
			k.Xa=function(a,b){return eg(this.e,a,b)};k.Oa=function(a,b,c,d){var e=1<<(b>>>a&31);if(0===(this.w&e))return d;var f=Dd(this.w&e-1),e=this.e[2*f],f=this.e[2*f+1];return null==e?f.Oa(a+5,b,c,d):ag(c,e)?f:d};
			k.la=function(a,b,c,d,e,f){var g=1<<(c>>>b&31),h=Dd(this.w&g-1);if(0===(this.w&g)){var l=Dd(this.w);if(2*l<this.e.length){var m=this.Na(a),p=m.e;f.o=!0;id(p,2*h,p,2*(h+1),2*(l-h));p[2*h]=d;p[2*h+1]=e;m.w|=g;return m}if(16<=l){g=[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null];g[c>>>b&31]=ig.la(a,b+5,c,d,e,f);for(m=h=0;;)if(32>h)0!==(this.w>>>h&1)&&(g[h]=null!=this.e[m]?ig.la(a,b+5,nc(this.e[m]),
			this.e[m],this.e[m+1],f):this.e[m+1],m+=2),h+=1;else break;return new jg(a,l+1,g)}p=Array(2*(l+4));hd(this.e,0,p,0,2*h);p[2*h]=d;p[2*h+1]=e;hd(this.e,2*h,p,2*(h+1),2*(l-h));f.o=!0;m=this.Na(a);m.e=p;m.w|=g;return m}var q=this.e[2*h],s=this.e[2*h+1];if(null==q)return l=s.la(a,b+5,c,d,e,f),l===s?this:dg.n(this,a,2*h+1,l);if(ag(d,q))return e===s?this:dg.n(this,a,2*h+1,e);f.o=!0;return dg.P(this,a,2*h,null,2*h+1,function(){var f=b+5;return kg.ia?kg.ia(a,f,q,s,c,d,e):kg.call(null,a,f,q,s,c,d,e)}())};
			k.ka=function(a,b,c,d,e){var f=1<<(b>>>a&31),g=Dd(this.w&f-1);if(0===(this.w&f)){var h=Dd(this.w);if(16<=h){f=[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null];f[b>>>a&31]=ig.ka(a+5,b,c,d,e);for(var l=g=0;;)if(32>g)0!==(this.w>>>g&1)&&(f[g]=null!=this.e[l]?ig.ka(a+5,nc(this.e[l]),this.e[l],this.e[l+1],e):this.e[l+1],l+=2),g+=1;else break;return new jg(null,h+1,f)}l=Array(2*(h+1));hd(this.e,
			0,l,0,2*g);l[2*g]=c;l[2*g+1]=d;hd(this.e,2*g,l,2*(g+1),2*(h-g));e.o=!0;return new fg(null,this.w|f,l)}var m=this.e[2*g],p=this.e[2*g+1];if(null==m)return h=p.ka(a+5,b,c,d,e),h===p?this:new fg(null,this.w,bg.c(this.e,2*g+1,h));if(ag(c,m))return d===p?this:new fg(null,this.w,bg.c(this.e,2*g+1,d));e.o=!0;return new fg(null,this.w,bg.r(this.e,2*g,null,2*g+1,function(){var e=a+5;return kg.P?kg.P(e,m,p,b,c,d):kg.call(null,e,m,p,b,c,d)}()))};
			k.mb=function(a,b,c){var d=1<<(b>>>a&31);if(0===(this.w&d))return this;var e=Dd(this.w&d-1),f=this.e[2*e],g=this.e[2*e+1];return null==f?(a=g.mb(a+5,b,c),a===g?this:null!=a?new fg(null,this.w,bg.c(this.e,2*e+1,a)):this.w===d?null:new fg(null,this.w^d,cg(this.e,e))):ag(c,f)?new fg(null,this.w^d,cg(this.e,e)):this};var ig=new fg(null,0,[]);
			function lg(a,b,c){var d=a.e,e=d.length;a=Array(2*(a.g-1));for(var f=0,g=1,h=0;;)if(f<e)f!==c&&null!=d[f]&&(a[g]=d[f],g+=2,h|=1<<f),f+=1;else return new fg(b,h,a)}function jg(a,b,c){this.u=a;this.g=b;this.e=c}k=jg.prototype;k.Na=function(a){return a===this.u?this:new jg(a,this.g,Fa(this.e))};
			k.nb=function(a,b,c,d,e){var f=c>>>b&31,g=this.e[f];if(null==g)return this;b=g.nb(a,b+5,c,d,e);if(b===g)return this;if(null==b){if(8>=this.g)return lg(this,a,f);a=dg.n(this,a,f,b);a.g-=1;return a}return dg.n(this,a,f,b)};k.lb=function(){var a=this.e;return mg.b?mg.b(a):mg.call(null,a)};k.Xa=function(a,b){for(var c=this.e.length,d=0,e=b;;)if(d<c){var f=this.e[d];if(null!=f&&(e=f.Xa(a,e),Ac(e)))return c=e,L.b?L.b(c):L.call(null,c);d+=1}else return e};
			k.Oa=function(a,b,c,d){var e=this.e[b>>>a&31];return null!=e?e.Oa(a+5,b,c,d):d};k.la=function(a,b,c,d,e,f){var g=c>>>b&31,h=this.e[g];if(null==h)return a=dg.n(this,a,g,ig.la(a,b+5,c,d,e,f)),a.g+=1,a;b=h.la(a,b+5,c,d,e,f);return b===h?this:dg.n(this,a,g,b)};k.ka=function(a,b,c,d,e){var f=b>>>a&31,g=this.e[f];if(null==g)return new jg(null,this.g+1,bg.c(this.e,f,ig.ka(a+5,b,c,d,e)));a=g.ka(a+5,b,c,d,e);return a===g?this:new jg(null,this.g,bg.c(this.e,f,a))};
			k.mb=function(a,b,c){var d=b>>>a&31,e=this.e[d];return null!=e?(a=e.mb(a+5,b,c),a===e?this:null==a?8>=this.g?lg(this,null,d):new jg(null,this.g-1,bg.c(this.e,d,a)):new jg(null,this.g,bg.c(this.e,d,a))):this};function ng(a,b,c){b*=2;for(var d=0;;)if(d<b){if(ag(c,a[d]))return d;d+=2}else return-1}function og(a,b,c,d){this.u=a;this.Ia=b;this.g=c;this.e=d}k=og.prototype;k.Na=function(a){if(a===this.u)return this;var b=Array(2*(this.g+1));hd(this.e,0,b,0,2*this.g);return new og(a,this.Ia,this.g,b)};
			k.nb=function(a,b,c,d,e){b=ng(this.e,this.g,d);if(-1===b)return this;e[0]=!0;if(1===this.g)return null;a=this.Na(a);e=a.e;e[b]=e[2*this.g-2];e[b+1]=e[2*this.g-1];e[2*this.g-1]=null;e[2*this.g-2]=null;a.g-=1;return a};k.lb=function(){var a=this.e;return hg.b?hg.b(a):hg.call(null,a)};k.Xa=function(a,b){return eg(this.e,a,b)};k.Oa=function(a,b,c,d){a=ng(this.e,this.g,c);return 0>a?d:ag(c,this.e[a])?this.e[a+1]:d};
			k.la=function(a,b,c,d,e,f){if(c===this.Ia){b=ng(this.e,this.g,d);if(-1===b){if(this.e.length>2*this.g)return a=dg.P(this,a,2*this.g,d,2*this.g+1,e),f.o=!0,a.g+=1,a;c=this.e.length;b=Array(c+2);hd(this.e,0,b,0,c);b[c]=d;b[c+1]=e;f.o=!0;f=this.g+1;a===this.u?(this.e=b,this.g=f,a=this):a=new og(this.u,this.Ia,f,b);return a}return this.e[b+1]===e?this:dg.n(this,a,b+1,e)}return(new fg(a,1<<(this.Ia>>>b&31),[null,this,null,null])).la(a,b,c,d,e,f)};
			k.ka=function(a,b,c,d,e){return b===this.Ia?(a=ng(this.e,this.g,c),-1===a?(a=2*this.g,b=Array(a+2),hd(this.e,0,b,0,a),b[a]=c,b[a+1]=d,e.o=!0,new og(null,this.Ia,this.g+1,b)):sc.a(this.e[a],d)?this:new og(null,this.Ia,this.g,bg.c(this.e,a+1,d))):(new fg(null,1<<(this.Ia>>>a&31),[null,this])).ka(a,b,c,d,e)};k.mb=function(a,b,c){a=ng(this.e,this.g,c);return-1===a?this:1===this.g?null:new og(null,this.Ia,this.g-1,cg(this.e,Cd(a,2)))};
			var kg=function(){function a(a,b,c,g,h,l,m){var p=nc(c);if(p===h)return new og(null,p,2,[c,g,l,m]);var q=new $f;return ig.la(a,b,p,c,g,q).la(a,b,h,l,m,q)}function b(a,b,c,g,h,l){var m=nc(b);if(m===g)return new og(null,m,2,[b,c,h,l]);var p=new $f;return ig.ka(a,m,b,c,p).ka(a,g,h,l,p)}var c=null,c=function(c,e,f,g,h,l,m){switch(arguments.length){case 6:return b.call(this,c,e,f,g,h,l);case 7:return a.call(this,c,e,f,g,h,l,m)}throw Error("Invalid arity: "+arguments.length);};c.P=b;c.ia=a;return c}();
			function pg(a,b,c,d,e){this.k=a;this.Pa=b;this.m=c;this.C=d;this.p=e;this.q=0;this.j=32374860}k=pg.prototype;k.toString=function(){return ec(this)};k.H=function(){return this.k};k.B=function(){var a=this.p;return null!=a?a:this.p=a=wc(this)};k.A=function(a,b){return Ic(this,b)};k.J=function(){return O(J,this.k)};k.R=function(a,b){return P.a(b,this)};k.O=function(a,b,c){return P.c(b,c,this)};k.N=function(){return null==this.C?new W(null,2,5,uf,[this.Pa[this.m],this.Pa[this.m+1]],null):G(this.C)};
			k.S=function(){if(null==this.C){var a=this.Pa,b=this.m+2;return hg.c?hg.c(a,b,null):hg.call(null,a,b,null)}var a=this.Pa,b=this.m,c=K(this.C);return hg.c?hg.c(a,b,c):hg.call(null,a,b,c)};k.D=function(){return this};k.F=function(a,b){return new pg(b,this.Pa,this.m,this.C,this.p)};k.G=function(a,b){return M(b,this)};pg.prototype[Ea]=function(){return uc(this)};
			var hg=function(){function a(a,b,c){if(null==c)for(c=a.length;;)if(b<c){if(null!=a[b])return new pg(null,a,b,null,null);var g=a[b+1];if(t(g)&&(g=g.lb(),t(g)))return new pg(null,a,b+2,g,null);b+=2}else return null;else return new pg(null,a,b,c,null)}function b(a){return c.c(a,0,null)}var c=null,c=function(c,e,f){switch(arguments.length){case 1:return b.call(this,c);case 3:return a.call(this,c,e,f)}throw Error("Invalid arity: "+arguments.length);};c.b=b;c.c=a;return c}();
			function qg(a,b,c,d,e){this.k=a;this.Pa=b;this.m=c;this.C=d;this.p=e;this.q=0;this.j=32374860}k=qg.prototype;k.toString=function(){return ec(this)};k.H=function(){return this.k};k.B=function(){var a=this.p;return null!=a?a:this.p=a=wc(this)};k.A=function(a,b){return Ic(this,b)};k.J=function(){return O(J,this.k)};k.R=function(a,b){return P.a(b,this)};k.O=function(a,b,c){return P.c(b,c,this)};k.N=function(){return G(this.C)};
			k.S=function(){var a=this.Pa,b=this.m,c=K(this.C);return mg.n?mg.n(null,a,b,c):mg.call(null,null,a,b,c)};k.D=function(){return this};k.F=function(a,b){return new qg(b,this.Pa,this.m,this.C,this.p)};k.G=function(a,b){return M(b,this)};qg.prototype[Ea]=function(){return uc(this)};
			var mg=function(){function a(a,b,c,g){if(null==g)for(g=b.length;;)if(c<g){var h=b[c];if(t(h)&&(h=h.lb(),t(h)))return new qg(a,b,c+1,h,null);c+=1}else return null;else return new qg(a,b,c,g,null)}function b(a){return c.n(null,a,0,null)}var c=null,c=function(c,e,f,g){switch(arguments.length){case 1:return b.call(this,c);case 4:return a.call(this,c,e,f,g)}throw Error("Invalid arity: "+arguments.length);};c.b=b;c.n=a;return c}();
			function rg(a,b,c,d,e,f){this.k=a;this.g=b;this.root=c;this.U=d;this.da=e;this.p=f;this.j=16123663;this.q=8196}k=rg.prototype;k.toString=function(){return ec(this)};k.t=function(a,b){return $a.c(this,b,null)};k.s=function(a,b,c){return null==b?this.U?this.da:c:null==this.root?c:this.root.Oa(0,nc(b),b,c)};k.gb=function(a,b,c){this.U&&(a=this.da,c=b.c?b.c(c,null,a):b.call(null,c,null,a));return Ac(c)?L.b?L.b(c):L.call(null,c):null!=this.root?this.root.Xa(b,c):c};k.H=function(){return this.k};k.L=function(){return this.g};
			k.B=function(){var a=this.p;return null!=a?a:this.p=a=xc(this)};k.A=function(a,b){return Pf(this,b)};k.$a=function(){return new sg({},this.root,this.g,this.U,this.da)};k.J=function(){return ub(Qc,this.k)};k.wb=function(a,b){if(null==b)return this.U?new rg(this.k,this.g-1,this.root,!1,null,null):this;if(null==this.root)return this;var c=this.root.mb(0,nc(b),b);return c===this.root?this:new rg(this.k,this.g-1,c,this.U,this.da,null)};
			k.Ka=function(a,b,c){if(null==b)return this.U&&c===this.da?this:new rg(this.k,this.U?this.g:this.g+1,this.root,!0,c,null);a=new $f;b=(null==this.root?ig:this.root).ka(0,nc(b),b,c,a);return b===this.root?this:new rg(this.k,a.o?this.g+1:this.g,b,this.U,this.da,null)};k.rb=function(a,b){return null==b?this.U:null==this.root?!1:this.root.Oa(0,nc(b),b,jd)!==jd};k.D=function(){if(0<this.g){var a=null!=this.root?this.root.lb():null;return this.U?M(new W(null,2,5,uf,[null,this.da],null),a):a}return null};
			k.F=function(a,b){return new rg(b,this.g,this.root,this.U,this.da,this.p)};k.G=function(a,b){if(ed(b))return cb(this,C.a(b,0),C.a(b,1));for(var c=this,d=D(b);;){if(null==d)return c;var e=G(d);if(ed(e))c=cb(c,C.a(e,0),C.a(e,1)),d=K(d);else throw Error("conj on a map takes map entries or seqables of map entries");}};
			k.call=function(){var a=null,a=function(a,c,d){switch(arguments.length){case 2:return this.t(null,c);case 3:return this.s(null,c,d)}throw Error("Invalid arity: "+arguments.length);};a.a=function(a,c){return this.t(null,c)};a.c=function(a,c,d){return this.s(null,c,d)};return a}();k.apply=function(a,b){return this.call.apply(this,[this].concat(Fa(b)))};k.b=function(a){return this.t(null,a)};k.a=function(a,b){return this.s(null,a,b)};var Qc=new rg(null,0,null,!1,null,0);rg.prototype[Ea]=function(){return uc(this)};
			function sg(a,b,c,d,e){this.u=a;this.root=b;this.count=c;this.U=d;this.da=e;this.q=56;this.j=258}k=sg.prototype;k.Jb=function(a,b){if(this.u)if(null==b)this.U&&(this.U=!1,this.da=null,this.count-=1);else{if(null!=this.root){var c=new $f,d=this.root.nb(this.u,0,nc(b),b,c);d!==this.root&&(this.root=d);t(c[0])&&(this.count-=1)}}else throw Error("dissoc! after persistent!");return this};k.kb=function(a,b,c){return tg(this,b,c)};k.Sa=function(a,b){return ug(this,b)};
			k.Ta=function(){var a;if(this.u)this.u=null,a=new rg(null,this.count,this.root,this.U,this.da,null);else throw Error("persistent! called twice");return a};k.t=function(a,b){return null==b?this.U?this.da:null:null==this.root?null:this.root.Oa(0,nc(b),b)};k.s=function(a,b,c){return null==b?this.U?this.da:c:null==this.root?c:this.root.Oa(0,nc(b),b,c)};k.L=function(){if(this.u)return this.count;throw Error("count after persistent!");};
			function ug(a,b){if(a.u){if(b?b.j&2048||b.jc||(b.j?0:w(fb,b)):w(fb,b))return tg(a,Yf.b?Yf.b(b):Yf.call(null,b),Zf.b?Zf.b(b):Zf.call(null,b));for(var c=D(b),d=a;;){var e=G(c);if(t(e))var f=e,c=K(c),d=tg(d,function(){var a=f;return Yf.b?Yf.b(a):Yf.call(null,a)}(),function(){var a=f;return Zf.b?Zf.b(a):Zf.call(null,a)}());else return d}}else throw Error("conj! after persistent");}
			function tg(a,b,c){if(a.u){if(null==b)a.da!==c&&(a.da=c),a.U||(a.count+=1,a.U=!0);else{var d=new $f;b=(null==a.root?ig:a.root).la(a.u,0,nc(b),b,c,d);b!==a.root&&(a.root=b);d.o&&(a.count+=1)}return a}throw Error("assoc! after persistent!");}function vg(a,b,c){for(var d=b;;)if(null!=a)b=c?a.left:a.right,d=Nc.a(d,a),a=b;else return d}function wg(a,b,c,d,e){this.k=a;this.stack=b;this.pb=c;this.g=d;this.p=e;this.q=0;this.j=32374862}k=wg.prototype;k.toString=function(){return ec(this)};k.H=function(){return this.k};
			k.L=function(){return 0>this.g?Q(K(this))+1:this.g};k.B=function(){var a=this.p;return null!=a?a:this.p=a=wc(this)};k.A=function(a,b){return Ic(this,b)};k.J=function(){return O(J,this.k)};k.R=function(a,b){return P.a(b,this)};k.O=function(a,b,c){return P.c(b,c,this)};k.N=function(){return Wc(this.stack)};k.S=function(){var a=G(this.stack),a=vg(this.pb?a.right:a.left,K(this.stack),this.pb);return null!=a?new wg(null,a,this.pb,this.g-1,null):J};k.D=function(){return this};
			k.F=function(a,b){return new wg(b,this.stack,this.pb,this.g,this.p)};k.G=function(a,b){return M(b,this)};wg.prototype[Ea]=function(){return uc(this)};function xg(a,b,c){return new wg(null,vg(a,null,b),b,c,null)}
			function yg(a,b,c,d){return c instanceof X?c.left instanceof X?new X(c.key,c.o,c.left.ua(),new Z(a,b,c.right,d,null),null):c.right instanceof X?new X(c.right.key,c.right.o,new Z(c.key,c.o,c.left,c.right.left,null),new Z(a,b,c.right.right,d,null),null):new Z(a,b,c,d,null):new Z(a,b,c,d,null)}
			function zg(a,b,c,d){return d instanceof X?d.right instanceof X?new X(d.key,d.o,new Z(a,b,c,d.left,null),d.right.ua(),null):d.left instanceof X?new X(d.left.key,d.left.o,new Z(a,b,c,d.left.left,null),new Z(d.key,d.o,d.left.right,d.right,null),null):new Z(a,b,c,d,null):new Z(a,b,c,d,null)}
			function Ag(a,b,c,d){if(c instanceof X)return new X(a,b,c.ua(),d,null);if(d instanceof Z)return zg(a,b,c,d.ob());if(d instanceof X&&d.left instanceof Z)return new X(d.left.key,d.left.o,new Z(a,b,c,d.left.left,null),zg(d.key,d.o,d.left.right,d.right.ob()),null);throw Error("red-black tree invariant violation");}
			var Cg=function Bg(b,c,d){d=null!=b.left?Bg(b.left,c,d):d;if(Ac(d))return L.b?L.b(d):L.call(null,d);var e=b.key,f=b.o;d=c.c?c.c(d,e,f):c.call(null,d,e,f);if(Ac(d))return L.b?L.b(d):L.call(null,d);b=null!=b.right?Bg(b.right,c,d):d;return Ac(b)?L.b?L.b(b):L.call(null,b):b};function Z(a,b,c,d,e){this.key=a;this.o=b;this.left=c;this.right=d;this.p=e;this.q=0;this.j=32402207}k=Z.prototype;k.Mb=function(a){return a.Ob(this)};k.ob=function(){return new X(this.key,this.o,this.left,this.right,null)};
			k.ua=function(){return this};k.Lb=function(a){return a.Nb(this)};k.replace=function(a,b,c,d){return new Z(a,b,c,d,null)};k.Nb=function(a){return new Z(a.key,a.o,this,a.right,null)};k.Ob=function(a){return new Z(a.key,a.o,a.left,this,null)};k.Xa=function(a,b){return Cg(this,a,b)};k.t=function(a,b){return C.c(this,b,null)};k.s=function(a,b,c){return C.c(this,b,c)};k.Q=function(a,b){return 0===b?this.key:1===b?this.o:null};k.$=function(a,b,c){return 0===b?this.key:1===b?this.o:c};
			k.Ua=function(a,b,c){return(new W(null,2,5,uf,[this.key,this.o],null)).Ua(null,b,c)};k.H=function(){return null};k.L=function(){return 2};k.hb=function(){return this.key};k.ib=function(){return this.o};k.La=function(){return this.o};k.Ma=function(){return new W(null,1,5,uf,[this.key],null)};k.B=function(){var a=this.p;return null!=a?a:this.p=a=wc(this)};k.A=function(a,b){return Ic(this,b)};k.J=function(){return Mc};k.R=function(a,b){return Cc.a(this,b)};k.O=function(a,b,c){return Cc.c(this,b,c)};
			k.Ka=function(a,b,c){return Rc.c(new W(null,2,5,uf,[this.key,this.o],null),b,c)};k.D=function(){return Ra(Ra(J,this.o),this.key)};k.F=function(a,b){return O(new W(null,2,5,uf,[this.key,this.o],null),b)};k.G=function(a,b){return new W(null,3,5,uf,[this.key,this.o,b],null)};
			k.call=function(){var a=null,a=function(a,c,d){switch(arguments.length){case 2:return this.t(null,c);case 3:return this.s(null,c,d)}throw Error("Invalid arity: "+arguments.length);};a.a=function(a,c){return this.t(null,c)};a.c=function(a,c,d){return this.s(null,c,d)};return a}();k.apply=function(a,b){return this.call.apply(this,[this].concat(Fa(b)))};k.b=function(a){return this.t(null,a)};k.a=function(a,b){return this.s(null,a,b)};Z.prototype[Ea]=function(){return uc(this)};
			function X(a,b,c,d,e){this.key=a;this.o=b;this.left=c;this.right=d;this.p=e;this.q=0;this.j=32402207}k=X.prototype;k.Mb=function(a){return new X(this.key,this.o,this.left,a,null)};k.ob=function(){throw Error("red-black tree invariant violation");};k.ua=function(){return new Z(this.key,this.o,this.left,this.right,null)};k.Lb=function(a){return new X(this.key,this.o,a,this.right,null)};k.replace=function(a,b,c,d){return new X(a,b,c,d,null)};
			k.Nb=function(a){return this.left instanceof X?new X(this.key,this.o,this.left.ua(),new Z(a.key,a.o,this.right,a.right,null),null):this.right instanceof X?new X(this.right.key,this.right.o,new Z(this.key,this.o,this.left,this.right.left,null),new Z(a.key,a.o,this.right.right,a.right,null),null):new Z(a.key,a.o,this,a.right,null)};
			k.Ob=function(a){return this.right instanceof X?new X(this.key,this.o,new Z(a.key,a.o,a.left,this.left,null),this.right.ua(),null):this.left instanceof X?new X(this.left.key,this.left.o,new Z(a.key,a.o,a.left,this.left.left,null),new Z(this.key,this.o,this.left.right,this.right,null),null):new Z(a.key,a.o,a.left,this,null)};k.Xa=function(a,b){return Cg(this,a,b)};k.t=function(a,b){return C.c(this,b,null)};k.s=function(a,b,c){return C.c(this,b,c)};
			k.Q=function(a,b){return 0===b?this.key:1===b?this.o:null};k.$=function(a,b,c){return 0===b?this.key:1===b?this.o:c};k.Ua=function(a,b,c){return(new W(null,2,5,uf,[this.key,this.o],null)).Ua(null,b,c)};k.H=function(){return null};k.L=function(){return 2};k.hb=function(){return this.key};k.ib=function(){return this.o};k.La=function(){return this.o};k.Ma=function(){return new W(null,1,5,uf,[this.key],null)};k.B=function(){var a=this.p;return null!=a?a:this.p=a=wc(this)};
			k.A=function(a,b){return Ic(this,b)};k.J=function(){return Mc};k.R=function(a,b){return Cc.a(this,b)};k.O=function(a,b,c){return Cc.c(this,b,c)};k.Ka=function(a,b,c){return Rc.c(new W(null,2,5,uf,[this.key,this.o],null),b,c)};k.D=function(){return Ra(Ra(J,this.o),this.key)};k.F=function(a,b){return O(new W(null,2,5,uf,[this.key,this.o],null),b)};k.G=function(a,b){return new W(null,3,5,uf,[this.key,this.o,b],null)};
			k.call=function(){var a=null,a=function(a,c,d){switch(arguments.length){case 2:return this.t(null,c);case 3:return this.s(null,c,d)}throw Error("Invalid arity: "+arguments.length);};a.a=function(a,c){return this.t(null,c)};a.c=function(a,c,d){return this.s(null,c,d)};return a}();k.apply=function(a,b){return this.call.apply(this,[this].concat(Fa(b)))};k.b=function(a){return this.t(null,a)};k.a=function(a,b){return this.s(null,a,b)};X.prototype[Ea]=function(){return uc(this)};
			var Eg=function Dg(b,c,d,e,f){if(null==c)return new X(d,e,null,null,null);var g;g=c.key;g=b.a?b.a(d,g):b.call(null,d,g);if(0===g)return f[0]=c,null;if(0>g)return b=Dg(b,c.left,d,e,f),null!=b?c.Lb(b):null;b=Dg(b,c.right,d,e,f);return null!=b?c.Mb(b):null},Gg=function Fg(b,c){if(null==b)return c;if(null==c)return b;if(b instanceof X){if(c instanceof X){var d=Fg(b.right,c.left);return d instanceof X?new X(d.key,d.o,new X(b.key,b.o,b.left,d.left,null),new X(c.key,c.o,d.right,c.right,null),null):new X(b.key,
			b.o,b.left,new X(c.key,c.o,d,c.right,null),null)}return new X(b.key,b.o,b.left,Fg(b.right,c),null)}if(c instanceof X)return new X(c.key,c.o,Fg(b,c.left),c.right,null);d=Fg(b.right,c.left);return d instanceof X?new X(d.key,d.o,new Z(b.key,b.o,b.left,d.left,null),new Z(c.key,c.o,d.right,c.right,null),null):Ag(b.key,b.o,b.left,new Z(c.key,c.o,d,c.right,null))},Ig=function Hg(b,c,d,e){if(null!=c){var f;f=c.key;f=b.a?b.a(d,f):b.call(null,d,f);if(0===f)return e[0]=c,Gg(c.left,c.right);if(0>f)return b=Hg(b,
			c.left,d,e),null!=b||null!=e[0]?c.left instanceof Z?Ag(c.key,c.o,b,c.right):new X(c.key,c.o,b,c.right,null):null;b=Hg(b,c.right,d,e);if(null!=b||null!=e[0])if(c.right instanceof Z)if(e=c.key,d=c.o,c=c.left,b instanceof X)c=new X(e,d,c,b.ua(),null);else if(c instanceof Z)c=yg(e,d,c.ob(),b);else if(c instanceof X&&c.right instanceof Z)c=new X(c.right.key,c.right.o,yg(c.key,c.o,c.left.ob(),c.right.left),new Z(e,d,c.right.right,b,null),null);else throw Error("red-black tree invariant violation");else c=
			new X(c.key,c.o,c.left,b,null);else c=null;return c}return null},Kg=function Jg(b,c,d,e){var f=c.key,g=b.a?b.a(d,f):b.call(null,d,f);return 0===g?c.replace(f,e,c.left,c.right):0>g?c.replace(f,c.o,Jg(b,c.left,d,e),c.right):c.replace(f,c.o,c.left,Jg(b,c.right,d,e))};function Lg(a,b,c,d,e){this.aa=a;this.na=b;this.g=c;this.k=d;this.p=e;this.j=418776847;this.q=8192}k=Lg.prototype;k.toString=function(){return ec(this)};
			function Mg(a,b){for(var c=a.na;;)if(null!=c){var d;d=c.key;d=a.aa.a?a.aa.a(b,d):a.aa.call(null,b,d);if(0===d)return c;c=0>d?c.left:c.right}else return null}k.t=function(a,b){return $a.c(this,b,null)};k.s=function(a,b,c){a=Mg(this,b);return null!=a?a.o:c};k.gb=function(a,b,c){return null!=this.na?Cg(this.na,b,c):c};k.H=function(){return this.k};k.L=function(){return this.g};k.ab=function(){return 0<this.g?xg(this.na,!1,this.g):null};k.B=function(){var a=this.p;return null!=a?a:this.p=a=xc(this)};
			k.A=function(a,b){return Pf(this,b)};k.J=function(){return new Lg(this.aa,null,0,this.k,0)};k.wb=function(a,b){var c=[null],d=Ig(this.aa,this.na,b,c);return null==d?null==R.a(c,0)?this:new Lg(this.aa,null,0,this.k,null):new Lg(this.aa,d.ua(),this.g-1,this.k,null)};k.Ka=function(a,b,c){a=[null];var d=Eg(this.aa,this.na,b,c,a);return null==d?(a=R.a(a,0),sc.a(c,a.o)?this:new Lg(this.aa,Kg(this.aa,this.na,b,c),this.g,this.k,null)):new Lg(this.aa,d.ua(),this.g+1,this.k,null)};
			k.rb=function(a,b){return null!=Mg(this,b)};k.D=function(){return 0<this.g?xg(this.na,!0,this.g):null};k.F=function(a,b){return new Lg(this.aa,this.na,this.g,b,this.p)};k.G=function(a,b){if(ed(b))return cb(this,C.a(b,0),C.a(b,1));for(var c=this,d=D(b);;){if(null==d)return c;var e=G(d);if(ed(e))c=cb(c,C.a(e,0),C.a(e,1)),d=K(d);else throw Error("conj on a map takes map entries or seqables of map entries");}};
			k.call=function(){var a=null,a=function(a,c,d){switch(arguments.length){case 2:return this.t(null,c);case 3:return this.s(null,c,d)}throw Error("Invalid arity: "+arguments.length);};a.a=function(a,c){return this.t(null,c)};a.c=function(a,c,d){return this.s(null,c,d)};return a}();k.apply=function(a,b){return this.call.apply(this,[this].concat(Fa(b)))};k.b=function(a){return this.t(null,a)};k.a=function(a,b){return this.s(null,a,b)};k.Hb=function(a,b){return 0<this.g?xg(this.na,b,this.g):null};
			k.Ib=function(a,b,c){if(0<this.g){a=null;for(var d=this.na;;)if(null!=d){var e;e=d.key;e=this.aa.a?this.aa.a(b,e):this.aa.call(null,b,e);if(0===e)return new wg(null,Nc.a(a,d),c,-1,null);t(c)?0>e?(a=Nc.a(a,d),d=d.left):d=d.right:0<e?(a=Nc.a(a,d),d=d.right):d=d.left}else return null==a?null:new wg(null,a,c,-1,null)}else return null};k.Gb=function(a,b){return Yf.b?Yf.b(b):Yf.call(null,b)};k.Fb=function(){return this.aa};var Ng=new Lg(od,null,0,null,0);Lg.prototype[Ea]=function(){return uc(this)};
			var Og=function(){function a(a){var d=null;if(0<arguments.length){for(var d=0,e=Array(arguments.length-0);d<e.length;)e[d]=arguments[d+0],++d;d=new F(e,0)}return b.call(this,d)}function b(a){a=D(a);for(var b=Ob(Qc);;)if(a){var e=K(K(a)),b=ee.c(b,G(a),Lc(a));a=e}else return Qb(b)}a.i=0;a.f=function(a){a=D(a);return b(a)};a.d=b;return a}(),Pg=function(){function a(a){var d=null;if(0<arguments.length){for(var d=0,e=Array(arguments.length-0);d<e.length;)e[d]=arguments[d+0],++d;d=new F(e,0)}return b.call(this,
			d)}function b(a){a:{a=T.a(Ha,a);for(var b=a.length,e=0,f=Ob(Uf);;)if(e<b)var g=e+2,f=Rb(f,a[e],a[e+1]),e=g;else{a=Qb(f);break a}a=void 0}return a}a.i=0;a.f=function(a){a=D(a);return b(a)};a.d=b;return a}(),Qg=function(){function a(a){var d=null;if(0<arguments.length){for(var d=0,e=Array(arguments.length-0);d<e.length;)e[d]=arguments[d+0],++d;d=new F(e,0)}return b.call(this,d)}function b(a){a=D(a);for(var b=Ng;;)if(a){var e=K(K(a)),b=Rc.c(b,G(a),Lc(a));a=e}else return b}a.i=0;a.f=function(a){a=D(a);
			return b(a)};a.d=b;return a}(),Rg=function(){function a(a,d){var e=null;if(1<arguments.length){for(var e=0,f=Array(arguments.length-1);e<f.length;)f[e]=arguments[e+1],++e;e=new F(f,0)}return b.call(this,a,e)}function b(a,b){for(var e=D(b),f=new Lg(qd(a),null,0,null,0);;)if(e)var g=K(K(e)),f=Rc.c(f,G(e),Lc(e)),e=g;else return f}a.i=1;a.f=function(a){var d=G(a);a=H(a);return b(d,a)};a.d=b;return a}();function Sg(a,b){this.Y=a;this.Z=b;this.q=0;this.j=32374988}k=Sg.prototype;k.toString=function(){return ec(this)};
			k.H=function(){return this.Z};k.T=function(){var a=this.Y,a=(a?a.j&128||a.xb||(a.j?0:w(Xa,a)):w(Xa,a))?this.Y.T(null):K(this.Y);return null==a?null:new Sg(a,this.Z)};k.B=function(){return wc(this)};k.A=function(a,b){return Ic(this,b)};k.J=function(){return O(J,this.Z)};k.R=function(a,b){return P.a(b,this)};k.O=function(a,b,c){return P.c(b,c,this)};k.N=function(){return this.Y.N(null).hb(null)};
			k.S=function(){var a=this.Y,a=(a?a.j&128||a.xb||(a.j?0:w(Xa,a)):w(Xa,a))?this.Y.T(null):K(this.Y);return null!=a?new Sg(a,this.Z):J};k.D=function(){return this};k.F=function(a,b){return new Sg(this.Y,b)};k.G=function(a,b){return M(b,this)};Sg.prototype[Ea]=function(){return uc(this)};function Tg(a){return(a=D(a))?new Sg(a,null):null}function Yf(a){return hb(a)}function Ug(a,b){this.Y=a;this.Z=b;this.q=0;this.j=32374988}k=Ug.prototype;k.toString=function(){return ec(this)};k.H=function(){return this.Z};
			k.T=function(){var a=this.Y,a=(a?a.j&128||a.xb||(a.j?0:w(Xa,a)):w(Xa,a))?this.Y.T(null):K(this.Y);return null==a?null:new Ug(a,this.Z)};k.B=function(){return wc(this)};k.A=function(a,b){return Ic(this,b)};k.J=function(){return O(J,this.Z)};k.R=function(a,b){return P.a(b,this)};k.O=function(a,b,c){return P.c(b,c,this)};k.N=function(){return this.Y.N(null).ib(null)};k.S=function(){var a=this.Y,a=(a?a.j&128||a.xb||(a.j?0:w(Xa,a)):w(Xa,a))?this.Y.T(null):K(this.Y);return null!=a?new Ug(a,this.Z):J};
			k.D=function(){return this};k.F=function(a,b){return new Ug(this.Y,b)};k.G=function(a,b){return M(b,this)};Ug.prototype[Ea]=function(){return uc(this)};function Vg(a){return(a=D(a))?new Ug(a,null):null}function Zf(a){return ib(a)}
			var Wg=function(){function a(a){var d=null;if(0<arguments.length){for(var d=0,e=Array(arguments.length-0);d<e.length;)e[d]=arguments[d+0],++d;d=new F(e,0)}return b.call(this,d)}function b(a){return t(Fe(ud,a))?A.a(function(a,b){return Nc.a(t(a)?a:Uf,b)},a):null}a.i=0;a.f=function(a){a=D(a);return b(a)};a.d=b;return a}(),Xg=function(){function a(a,d){var e=null;if(1<arguments.length){for(var e=0,f=Array(arguments.length-1);e<f.length;)f[e]=arguments[e+1],++e;e=new F(f,0)}return b.call(this,a,e)}function b(a,
			b){return t(Fe(ud,b))?A.a(function(a){return function(b,c){return A.c(a,t(b)?b:Uf,D(c))}}(function(b,d){var g=G(d),h=Lc(d);return nd(b,g)?Rc.c(b,g,function(){var d=S.a(b,g);return a.a?a.a(d,h):a.call(null,d,h)}()):Rc.c(b,g,h)}),b):null}a.i=1;a.f=function(a){var d=G(a);a=H(a);return b(d,a)};a.d=b;return a}();function Yg(a,b){for(var c=Uf,d=D(b);;)if(d)var e=G(d),f=S.c(a,e,Zg),c=je.a(f,Zg)?Rc.c(c,e,f):c,d=K(d);else return O(c,Vc(a))}
			function $g(a,b,c){this.k=a;this.Wa=b;this.p=c;this.j=15077647;this.q=8196}k=$g.prototype;k.toString=function(){return ec(this)};k.t=function(a,b){return $a.c(this,b,null)};k.s=function(a,b,c){return bb(this.Wa,b)?b:c};k.H=function(){return this.k};k.L=function(){return Ma(this.Wa)};k.B=function(){var a=this.p;return null!=a?a:this.p=a=xc(this)};k.A=function(a,b){return ad(b)&&Q(this)===Q(b)&&Ee(function(a){return function(b){return nd(a,b)}}(this),b)};k.$a=function(){return new ah(Ob(this.Wa))};
			k.J=function(){return O(bh,this.k)};k.Eb=function(a,b){return new $g(this.k,eb(this.Wa,b),null)};k.D=function(){return Tg(this.Wa)};k.F=function(a,b){return new $g(b,this.Wa,this.p)};k.G=function(a,b){return new $g(this.k,Rc.c(this.Wa,b,null),null)};
			k.call=function(){var a=null,a=function(a,c,d){switch(arguments.length){case 2:return this.t(null,c);case 3:return this.s(null,c,d)}throw Error("Invalid arity: "+arguments.length);};a.a=function(a,c){return this.t(null,c)};a.c=function(a,c,d){return this.s(null,c,d)};return a}();k.apply=function(a,b){return this.call.apply(this,[this].concat(Fa(b)))};k.b=function(a){return this.t(null,a)};k.a=function(a,b){return this.s(null,a,b)};var bh=new $g(null,Uf,0);$g.prototype[Ea]=function(){return uc(this)};
			function ah(a){this.ma=a;this.j=259;this.q=136}k=ah.prototype;k.call=function(){function a(a,b,c){return $a.c(this.ma,b,jd)===jd?c:b}function b(a,b){return $a.c(this.ma,b,jd)===jd?null:b}var c=null,c=function(c,e,f){switch(arguments.length){case 2:return b.call(this,c,e);case 3:return a.call(this,c,e,f)}throw Error("Invalid arity: "+arguments.length);};c.a=b;c.c=a;return c}();k.apply=function(a,b){return this.call.apply(this,[this].concat(Fa(b)))};
			k.b=function(a){return $a.c(this.ma,a,jd)===jd?null:a};k.a=function(a,b){return $a.c(this.ma,a,jd)===jd?b:a};k.t=function(a,b){return $a.c(this,b,null)};k.s=function(a,b,c){return $a.c(this.ma,b,jd)===jd?c:b};k.L=function(){return Q(this.ma)};k.Tb=function(a,b){this.ma=fe.a(this.ma,b);return this};k.Sa=function(a,b){this.ma=ee.c(this.ma,b,null);return this};k.Ta=function(){return new $g(null,Qb(this.ma),null)};function ch(a,b,c){this.k=a;this.ja=b;this.p=c;this.j=417730831;this.q=8192}k=ch.prototype;
			k.toString=function(){return ec(this)};k.t=function(a,b){return $a.c(this,b,null)};k.s=function(a,b,c){a=Mg(this.ja,b);return null!=a?a.key:c};k.H=function(){return this.k};k.L=function(){return Q(this.ja)};k.ab=function(){return 0<Q(this.ja)?Oe.a(Yf,Gb(this.ja)):null};k.B=function(){var a=this.p;return null!=a?a:this.p=a=xc(this)};k.A=function(a,b){return ad(b)&&Q(this)===Q(b)&&Ee(function(a){return function(b){return nd(a,b)}}(this),b)};k.J=function(){return new ch(this.k,Na(this.ja),0)};
			k.Eb=function(a,b){return new ch(this.k,Sc.a(this.ja,b),null)};k.D=function(){return Tg(this.ja)};k.F=function(a,b){return new ch(b,this.ja,this.p)};k.G=function(a,b){return new ch(this.k,Rc.c(this.ja,b,null),null)};k.call=function(){var a=null,a=function(a,c,d){switch(arguments.length){case 2:return this.t(null,c);case 3:return this.s(null,c,d)}throw Error("Invalid arity: "+arguments.length);};a.a=function(a,c){return this.t(null,c)};a.c=function(a,c,d){return this.s(null,c,d)};return a}();
			k.apply=function(a,b){return this.call.apply(this,[this].concat(Fa(b)))};k.b=function(a){return this.t(null,a)};k.a=function(a,b){return this.s(null,a,b)};k.Hb=function(a,b){return Oe.a(Yf,Hb(this.ja,b))};k.Ib=function(a,b,c){return Oe.a(Yf,Ib(this.ja,b,c))};k.Gb=function(a,b){return b};k.Fb=function(){return Kb(this.ja)};var eh=new ch(null,Ng,0);ch.prototype[Ea]=function(){return uc(this)};
			function fh(a){a=D(a);if(null==a)return bh;if(a instanceof F&&0===a.m){a=a.e;a:{for(var b=0,c=Ob(bh);;)if(b<a.length)var d=b+1,c=c.Sa(null,a[b]),b=d;else{a=c;break a}a=void 0}return a.Ta(null)}for(d=Ob(bh);;)if(null!=a)b=a.T(null),d=d.Sa(null,a.N(null)),a=b;else return d.Ta(null)}
			var gh=function(){function a(a){var d=null;if(0<arguments.length){for(var d=0,e=Array(arguments.length-0);d<e.length;)e[d]=arguments[d+0],++d;d=new F(e,0)}return b.call(this,d)}function b(a){return A.c(Ra,eh,a)}a.i=0;a.f=function(a){a=D(a);return b(a)};a.d=b;return a}(),hh=function(){function a(a,d){var e=null;if(1<arguments.length){for(var e=0,f=Array(arguments.length-1);e<f.length;)f[e]=arguments[e+1],++e;e=new F(f,0)}return b.call(this,a,e)}function b(a,b){return A.c(Ra,new ch(null,Rg(a),0),b)}
			a.i=1;a.f=function(a){var d=G(a);a=H(a);return b(d,a)};a.d=b;return a}();function Od(a){if(a&&(a.q&4096||a.lc))return a.name;if("string"===typeof a)return a;throw Error([z("Doesn't support name: "),z(a)].join(""));}
			var ih=function(){function a(a,b,c){return(a.b?a.b(b):a.call(null,b))>(a.b?a.b(c):a.call(null,c))?b:c}var b=null,c=function(){function a(b,d,h,l){var m=null;if(3<arguments.length){for(var m=0,p=Array(arguments.length-3);m<p.length;)p[m]=arguments[m+3],++m;m=new F(p,0)}return c.call(this,b,d,h,m)}function c(a,d,e,l){return A.c(function(c,d){return b.c(a,c,d)},b.c(a,d,e),l)}a.i=3;a.f=function(a){var b=G(a);a=K(a);var d=G(a);a=K(a);var l=G(a);a=H(a);return c(b,d,l,a)};a.d=c;return a}(),b=function(b,
			e,f,g){switch(arguments.length){case 2:return e;case 3:return a.call(this,b,e,f);default:var h=null;if(3<arguments.length){for(var h=0,l=Array(arguments.length-3);h<l.length;)l[h]=arguments[h+3],++h;h=new F(l,0)}return c.d(b,e,f,h)}throw Error("Invalid arity: "+arguments.length);};b.i=3;b.f=c.f;b.a=function(a,b){return b};b.c=a;b.d=c.d;return b}();function jh(a){this.e=a}jh.prototype.add=function(a){return this.e.push(a)};jh.prototype.size=function(){return this.e.length};
			jh.prototype.clear=function(){return this.e=[]};
			var kh=function(){function a(a,b,c){return new V(null,function(){var h=D(c);return h?M(Pe.a(a,h),d.c(a,b,Qe.a(b,h))):null},null,null)}function b(a,b){return d.c(a,a,b)}function c(a){return function(b){return function(c){return function(){function d(h,l){c.add(l);if(a===c.size()){var m=zf(c.e);c.clear();return b.a?b.a(h,m):b.call(null,h,m)}return h}function l(a){if(!t(0===c.e.length)){var d=zf(c.e);c.clear();a=Bc(b.a?b.a(a,d):b.call(null,a,d))}return b.b?b.b(a):b.call(null,a)}function m(){return b.l?
			b.l():b.call(null)}var p=null,p=function(a,b){switch(arguments.length){case 0:return m.call(this);case 1:return l.call(this,a);case 2:return d.call(this,a,b)}throw Error("Invalid arity: "+arguments.length);};p.l=m;p.b=l;p.a=d;return p}()}(new jh([]))}}var d=null,d=function(d,f,g){switch(arguments.length){case 1:return c.call(this,d);case 2:return b.call(this,d,f);case 3:return a.call(this,d,f,g)}throw Error("Invalid arity: "+arguments.length);};d.b=c;d.a=b;d.c=a;return d}(),lh=function(){function a(a,
			b){return new V(null,function(){var f=D(b);if(f){var g;g=G(f);g=a.b?a.b(g):a.call(null,g);f=t(g)?M(G(f),c.a(a,H(f))):null}else f=null;return f},null,null)}function b(a){return function(b){return function(){function c(f,g){return t(a.b?a.b(g):a.call(null,g))?b.a?b.a(f,g):b.call(null,f,g):new yc(f)}function g(a){return b.b?b.b(a):b.call(null,a)}function h(){return b.l?b.l():b.call(null)}var l=null,l=function(a,b){switch(arguments.length){case 0:return h.call(this);case 1:return g.call(this,a);case 2:return c.call(this,
			a,b)}throw Error("Invalid arity: "+arguments.length);};l.l=h;l.b=g;l.a=c;return l}()}}var c=null,c=function(c,e){switch(arguments.length){case 1:return b.call(this,c);case 2:return a.call(this,c,e)}throw Error("Invalid arity: "+arguments.length);};c.b=b;c.a=a;return c}();function mh(a,b,c){return function(d){var e=Kb(a);d=Jb(a,d);e=e.a?e.a(d,c):e.call(null,d,c);return b.a?b.a(e,0):b.call(null,e,0)}}
			var nh=function(){function a(a,b,c,g,h){var l=Ib(a,c,!0);if(t(l)){var m=R.c(l,0,null);return lh.a(mh(a,g,h),t(mh(a,b,c).call(null,m))?l:K(l))}return null}function b(a,b,c){var g=mh(a,b,c),h;a:{h=[Ad,Bd];var l=h.length;if(l<=Vf)for(var m=0,p=Ob(Uf);;)if(m<l)var q=m+1,p=Rb(p,h[m],null),m=q;else{h=new $g(null,Qb(p),null);break a}else for(m=0,p=Ob(bh);;)if(m<l)q=m+1,p=Pb(p,h[m]),m=q;else{h=Qb(p);break a}h=void 0}return t(h.call(null,b))?(a=Ib(a,c,!0),t(a)?(b=R.c(a,0,null),t(g.b?g.b(b):g.call(null,b))?
			a:K(a)):null):lh.a(g,Hb(a,!0))}var c=null,c=function(c,e,f,g,h){switch(arguments.length){case 3:return b.call(this,c,e,f);case 5:return a.call(this,c,e,f,g,h)}throw Error("Invalid arity: "+arguments.length);};c.c=b;c.r=a;return c}();function oh(a,b,c){this.m=a;this.end=b;this.step=c}oh.prototype.ga=function(){return 0<this.step?this.m<this.end:this.m>this.end};oh.prototype.next=function(){var a=this.m;this.m+=this.step;return a};
			function ph(a,b,c,d,e){this.k=a;this.start=b;this.end=c;this.step=d;this.p=e;this.j=32375006;this.q=8192}k=ph.prototype;k.toString=function(){return ec(this)};k.Q=function(a,b){if(b<Ma(this))return this.start+b*this.step;if(this.start>this.end&&0===this.step)return this.start;throw Error("Index out of bounds");};k.$=function(a,b,c){return b<Ma(this)?this.start+b*this.step:this.start>this.end&&0===this.step?this.start:c};k.vb=!0;k.fb=function(){return new oh(this.start,this.end,this.step)};k.H=function(){return this.k};
			k.T=function(){return 0<this.step?this.start+this.step<this.end?new ph(this.k,this.start+this.step,this.end,this.step,null):null:this.start+this.step>this.end?new ph(this.k,this.start+this.step,this.end,this.step,null):null};k.L=function(){if(Aa(Cb(this)))return 0;var a=(this.end-this.start)/this.step;return Math.ceil.b?Math.ceil.b(a):Math.ceil.call(null,a)};k.B=function(){var a=this.p;return null!=a?a:this.p=a=wc(this)};k.A=function(a,b){return Ic(this,b)};k.J=function(){return O(J,this.k)};
			k.R=function(a,b){return Cc.a(this,b)};k.O=function(a,b,c){for(a=this.start;;)if(0<this.step?a<this.end:a>this.end){var d=a;c=b.a?b.a(c,d):b.call(null,c,d);if(Ac(c))return b=c,L.b?L.b(b):L.call(null,b);a+=this.step}else return c};k.N=function(){return null==Cb(this)?null:this.start};k.S=function(){return null!=Cb(this)?new ph(this.k,this.start+this.step,this.end,this.step,null):J};k.D=function(){return 0<this.step?this.start<this.end?this:null:this.start>this.end?this:null};
			k.F=function(a,b){return new ph(b,this.start,this.end,this.step,this.p)};k.G=function(a,b){return M(b,this)};ph.prototype[Ea]=function(){return uc(this)};
			var qh=function(){function a(a,b,c){return new ph(null,a,b,c,null)}function b(a,b){return e.c(a,b,1)}function c(a){return e.c(0,a,1)}function d(){return e.c(0,Number.MAX_VALUE,1)}var e=null,e=function(e,g,h){switch(arguments.length){case 0:return d.call(this);case 1:return c.call(this,e);case 2:return b.call(this,e,g);case 3:return a.call(this,e,g,h)}throw Error("Invalid arity: "+arguments.length);};e.l=d;e.b=c;e.a=b;e.c=a;return e}(),rh=function(){function a(a,b){return new V(null,function(){var f=
			D(b);return f?M(G(f),c.a(a,Qe.a(a,f))):null},null,null)}function b(a){return function(b){return function(c){return function(){function g(g,h){var l=c.bb(0,c.Ra(null)+1),m=Cd(l,a);return 0===l-a*m?b.a?b.a(g,h):b.call(null,g,h):g}function h(a){return b.b?b.b(a):b.call(null,a)}function l(){return b.l?b.l():b.call(null)}var m=null,m=function(a,b){switch(arguments.length){case 0:return l.call(this);case 1:return h.call(this,a);case 2:return g.call(this,a,b)}throw Error("Invalid arity: "+arguments.length);
			};m.l=l;m.b=h;m.a=g;return m}()}(new Me(-1))}}var c=null,c=function(c,e){switch(arguments.length){case 1:return b.call(this,c);case 2:return a.call(this,c,e)}throw Error("Invalid arity: "+arguments.length);};c.b=b;c.a=a;return c}(),th=function(){function a(a,b){return new V(null,function(){var f=D(b);if(f){var g=G(f),h=a.b?a.b(g):a.call(null,g),g=M(g,lh.a(function(b,c){return function(b){return sc.a(c,a.b?a.b(b):a.call(null,b))}}(g,h,f,f),K(f)));return M(g,c.a(a,D(Qe.a(Q(g),f))))}return null},null,
			null)}function b(a){return function(b){return function(c,g){return function(){function h(h,l){var m=L.b?L.b(g):L.call(null,g),p=a.b?a.b(l):a.call(null,l);ac(g,p);if(Nd(m,sh)||sc.a(p,m))return c.add(l),h;m=zf(c.e);c.clear();m=b.a?b.a(h,m):b.call(null,h,m);Ac(m)||c.add(l);return m}function l(a){if(!t(0===c.e.length)){var d=zf(c.e);c.clear();a=Bc(b.a?b.a(a,d):b.call(null,a,d))}return b.b?b.b(a):b.call(null,a)}function m(){return b.l?b.l():b.call(null)}var p=null,p=function(a,b){switch(arguments.length){case 0:return m.call(this);
			case 1:return l.call(this,a);case 2:return h.call(this,a,b)}throw Error("Invalid arity: "+arguments.length);};p.l=m;p.b=l;p.a=h;return p}()}(new jh([]),new Me(sh))}}var c=null,c=function(c,e){switch(arguments.length){case 1:return b.call(this,c);case 2:return a.call(this,c,e)}throw Error("Invalid arity: "+arguments.length);};c.b=b;c.a=a;return c}(),uh=function(){function a(a,b){for(;;)if(D(b)&&0<a){var c=a-1,g=K(b);a=c;b=g}else return null}function b(a){for(;;)if(D(a))a=K(a);else return null}var c=
			null,c=function(c,e){switch(arguments.length){case 1:return b.call(this,c);case 2:return a.call(this,c,e)}throw Error("Invalid arity: "+arguments.length);};c.b=b;c.a=a;return c}(),vh=function(){function a(a,b){uh.a(a,b);return b}function b(a){uh.b(a);return a}var c=null,c=function(c,e){switch(arguments.length){case 1:return b.call(this,c);case 2:return a.call(this,c,e)}throw Error("Invalid arity: "+arguments.length);};c.b=b;c.a=a;return c}();
			function wh(a,b,c,d,e,f,g){var h=ma;try{ma=null==ma?null:ma-1;if(null!=ma&&0>ma)return Lb(a,"#");Lb(a,c);if(D(g)){var l=G(g);b.c?b.c(l,a,f):b.call(null,l,a,f)}for(var m=K(g),p=za.b(f)-1;;)if(!m||null!=p&&0===p){D(m)&&0===p&&(Lb(a,d),Lb(a,"..."));break}else{Lb(a,d);var q=G(m);c=a;g=f;b.c?b.c(q,c,g):b.call(null,q,c,g);var s=K(m);c=p-1;m=s;p=c}return Lb(a,e)}finally{ma=h}}
			var xh=function(){function a(a,d){var e=null;if(1<arguments.length){for(var e=0,f=Array(arguments.length-1);e<f.length;)f[e]=arguments[e+1],++e;e=new F(f,0)}return b.call(this,a,e)}function b(a,b){for(var e=D(b),f=null,g=0,h=0;;)if(h<g){var l=f.Q(null,h);Lb(a,l);h+=1}else if(e=D(e))f=e,fd(f)?(e=Yb(f),g=Zb(f),f=e,l=Q(e),e=g,g=l):(l=G(f),Lb(a,l),e=K(f),f=null,g=0),h=0;else return null}a.i=1;a.f=function(a){var d=G(a);a=H(a);return b(d,a)};a.d=b;return a}(),yh={'"':'\\"',"\\":"\\\\","\b":"\\b","\f":"\\f",
			"\n":"\\n","\r":"\\r","\t":"\\t"};function zh(a){return[z('"'),z(a.replace(RegExp('[\\\\"\b\f\n\r\t]',"g"),function(a){return yh[a]})),z('"')].join("")}
			var $=function Ah(b,c,d){if(null==b)return Lb(c,"nil");if(void 0===b)return Lb(c,"#\x3cundefined\x3e");t(function(){var c=S.a(d,wa);return t(c)?(c=b?b.j&131072||b.kc?!0:b.j?!1:w(rb,b):w(rb,b))?Vc(b):c:c}())&&(Lb(c,"^"),Ah(Vc(b),c,d),Lb(c," "));if(null==b)return Lb(c,"nil");if(b.Yb)return b.nc(c);if(b&&(b.j&2147483648||b.I))return b.v(null,c,d);if(Ba(b)===Boolean||"number"===typeof b)return Lb(c,""+z(b));if(null!=b&&b.constructor===Object){Lb(c,"#js ");var e=Oe.a(function(c){return new W(null,2,5,
			uf,[Pd.b(c),b[c]],null)},gd(b));return Bh.n?Bh.n(e,Ah,c,d):Bh.call(null,e,Ah,c,d)}return b instanceof Array?wh(c,Ah,"#js ["," ","]",d,b):t("string"==typeof b)?t(ua.b(d))?Lb(c,zh(b)):Lb(c,b):Tc(b)?xh.d(c,Kc(["#\x3c",""+z(b),"\x3e"],0)):b instanceof Date?(e=function(b,c){for(var d=""+z(b);;)if(Q(d)<c)d=[z("0"),z(d)].join("");else return d},xh.d(c,Kc(['#inst "',""+z(b.getUTCFullYear()),"-",e(b.getUTCMonth()+1,2),"-",e(b.getUTCDate(),2),"T",e(b.getUTCHours(),2),":",e(b.getUTCMinutes(),2),":",e(b.getUTCSeconds(),
			2),".",e(b.getUTCMilliseconds(),3),"-",'00:00"'],0))):b instanceof RegExp?xh.d(c,Kc(['#"',b.source,'"'],0)):(b?b.j&2147483648||b.I||(b.j?0:w(Mb,b)):w(Mb,b))?Nb(b,c,d):xh.d(c,Kc(["#\x3c",""+z(b),"\x3e"],0))},Ch=function(){function a(a){var d=null;if(0<arguments.length){for(var d=0,e=Array(arguments.length-0);d<e.length;)e[d]=arguments[d+0],++d;d=new F(e,0)}return b.call(this,d)}function b(a){var b=oa();if(Yc(a))b="";else{var e=z,f=new fa;a:{var g=new dc(f);$(G(a),g,b);a=D(K(a));for(var h=null,l=0,
			m=0;;)if(m<l){var p=h.Q(null,m);Lb(g," ");$(p,g,b);m+=1}else if(a=D(a))h=a,fd(h)?(a=Yb(h),l=Zb(h),h=a,p=Q(a),a=l,l=p):(p=G(h),Lb(g," "),$(p,g,b),a=K(h),h=null,l=0),m=0;else break a}b=""+e(f)}return b}a.i=0;a.f=function(a){a=D(a);return b(a)};a.d=b;return a}();function Bh(a,b,c,d){return wh(c,function(a,c,d){var h=hb(a);b.c?b.c(h,c,d):b.call(null,h,c,d);Lb(c," ");a=ib(a);return b.c?b.c(a,c,d):b.call(null,a,c,d)},"{",", ","}",d,D(a))}Me.prototype.I=!0;
			Me.prototype.v=function(a,b,c){Lb(b,"#\x3cVolatile: ");$(this.state,b,c);return Lb(b,"\x3e")};F.prototype.I=!0;F.prototype.v=function(a,b,c){return wh(b,$,"("," ",")",c,this)};V.prototype.I=!0;V.prototype.v=function(a,b,c){return wh(b,$,"("," ",")",c,this)};wg.prototype.I=!0;wg.prototype.v=function(a,b,c){return wh(b,$,"("," ",")",c,this)};pg.prototype.I=!0;pg.prototype.v=function(a,b,c){return wh(b,$,"("," ",")",c,this)};Z.prototype.I=!0;
			Z.prototype.v=function(a,b,c){return wh(b,$,"["," ","]",c,this)};Rf.prototype.I=!0;Rf.prototype.v=function(a,b,c){return wh(b,$,"("," ",")",c,this)};ch.prototype.I=!0;ch.prototype.v=function(a,b,c){return wh(b,$,"#{"," ","}",c,this)};Bf.prototype.I=!0;Bf.prototype.v=function(a,b,c){return wh(b,$,"("," ",")",c,this)};Ld.prototype.I=!0;Ld.prototype.v=function(a,b,c){return wh(b,$,"("," ",")",c,this)};Hc.prototype.I=!0;Hc.prototype.v=function(a,b,c){return wh(b,$,"("," ",")",c,this)};
			rg.prototype.I=!0;rg.prototype.v=function(a,b,c){return Bh(this,$,b,c)};qg.prototype.I=!0;qg.prototype.v=function(a,b,c){return wh(b,$,"("," ",")",c,this)};Df.prototype.I=!0;Df.prototype.v=function(a,b,c){return wh(b,$,"["," ","]",c,this)};Lg.prototype.I=!0;Lg.prototype.v=function(a,b,c){return Bh(this,$,b,c)};$g.prototype.I=!0;$g.prototype.v=function(a,b,c){return wh(b,$,"#{"," ","}",c,this)};Vd.prototype.I=!0;Vd.prototype.v=function(a,b,c){return wh(b,$,"("," ",")",c,this)};Ug.prototype.I=!0;
			Ug.prototype.v=function(a,b,c){return wh(b,$,"("," ",")",c,this)};X.prototype.I=!0;X.prototype.v=function(a,b,c){return wh(b,$,"["," ","]",c,this)};W.prototype.I=!0;W.prototype.v=function(a,b,c){return wh(b,$,"["," ","]",c,this)};Kf.prototype.I=!0;Kf.prototype.v=function(a,b,c){return wh(b,$,"("," ",")",c,this)};Hd.prototype.I=!0;Hd.prototype.v=function(a,b){return Lb(b,"()")};ze.prototype.I=!0;ze.prototype.v=function(a,b,c){return wh(b,$,"("," ",")",c,this)};Lf.prototype.I=!0;
			Lf.prototype.v=function(a,b,c){return wh(b,$,"#queue ["," ","]",c,D(this))};pa.prototype.I=!0;pa.prototype.v=function(a,b,c){return Bh(this,$,b,c)};ph.prototype.I=!0;ph.prototype.v=function(a,b,c){return wh(b,$,"("," ",")",c,this)};Sg.prototype.I=!0;Sg.prototype.v=function(a,b,c){return wh(b,$,"("," ",")",c,this)};Fd.prototype.I=!0;Fd.prototype.v=function(a,b,c){return wh(b,$,"("," ",")",c,this)};W.prototype.sb=!0;W.prototype.tb=function(a,b){return pd.a(this,b)};Df.prototype.sb=!0;
			Df.prototype.tb=function(a,b){return pd.a(this,b)};U.prototype.sb=!0;U.prototype.tb=function(a,b){return Md(this,b)};qc.prototype.sb=!0;qc.prototype.tb=function(a,b){return pc(this,b)};var Dh=function(){function a(a,d,e){var f=null;if(2<arguments.length){for(var f=0,g=Array(arguments.length-2);f<g.length;)g[f]=arguments[f+2],++f;f=new F(g,0)}return b.call(this,a,d,f)}function b(a,b,e){return a.k=T.c(b,a.k,e)}a.i=2;a.f=function(a){var d=G(a);a=K(a);var e=G(a);a=H(a);return b(d,e,a)};a.d=b;return a}();
			function Eh(a){return function(b,c){var d=a.a?a.a(b,c):a.call(null,b,c);return Ac(d)?new yc(d):d}}
			function Ve(a){return function(b){return function(){function c(a,c){return A.c(b,a,c)}function d(b){return a.b?a.b(b):a.call(null,b)}function e(){return a.l?a.l():a.call(null)}var f=null,f=function(a,b){switch(arguments.length){case 0:return e.call(this);case 1:return d.call(this,a);case 2:return c.call(this,a,b)}throw Error("Invalid arity: "+arguments.length);};f.l=e;f.b=d;f.a=c;return f}()}(Eh(a))}
			var Fh=function(){function a(a){return Ce.a(c.l(),a)}function b(){return function(a){return function(b){return function(){function c(f,g){var h=L.b?L.b(b):L.call(null,b);ac(b,g);return sc.a(h,g)?f:a.a?a.a(f,g):a.call(null,f,g)}function g(b){return a.b?a.b(b):a.call(null,b)}function h(){return a.l?a.l():a.call(null)}var l=null,l=function(a,b){switch(arguments.length){case 0:return h.call(this);case 1:return g.call(this,a);case 2:return c.call(this,a,b)}throw Error("Invalid arity: "+arguments.length);
			};l.l=h;l.b=g;l.a=c;return l}()}(new Me(sh))}}var c=null,c=function(c){switch(arguments.length){case 0:return b.call(this);case 1:return a.call(this,c)}throw Error("Invalid arity: "+arguments.length);};c.l=b;c.b=a;return c}();function Gh(a,b){this.fa=a;this.Zb=b;this.q=0;this.j=2173173760}Gh.prototype.v=function(a,b,c){return wh(b,$,"("," ",")",c,this)};Gh.prototype.O=function(a,b,c){return wd.n(this.fa,b,c,this.Zb)};Gh.prototype.D=function(){return D(Ce.a(this.fa,this.Zb))};Gh.prototype[Ea]=function(){return uc(this)};
			var Hh={};function Ih(a){if(a?a.gc:a)return a.gc(a);var b;b=Ih[n(null==a?null:a)];if(!b&&(b=Ih._,!b))throw x("IEncodeJS.-clj-\x3ejs",a);return b.call(null,a)}function Jh(a){return(a?t(t(null)?null:a.fc)||(a.yb?0:w(Hh,a)):w(Hh,a))?Ih(a):"string"===typeof a||"number"===typeof a||a instanceof U||a instanceof qc?Kh.b?Kh.b(a):Kh.call(null,a):Ch.d(Kc([a],0))}
			var Kh=function Lh(b){if(null==b)return null;if(b?t(t(null)?null:b.fc)||(b.yb?0:w(Hh,b)):w(Hh,b))return Ih(b);if(b instanceof U)return Od(b);if(b instanceof qc)return""+z(b);if(dd(b)){var c={};b=D(b);for(var d=null,e=0,f=0;;)if(f<e){var g=d.Q(null,f),h=R.c(g,0,null),g=R.c(g,1,null);c[Jh(h)]=Lh(g);f+=1}else if(b=D(b))fd(b)?(e=Yb(b),b=Zb(b),d=e,e=Q(e)):(e=G(b),d=R.c(e,0,null),e=R.c(e,1,null),c[Jh(d)]=Lh(e),b=K(b),d=null,e=0),f=0;else break;return c}if($c(b)){c=[];b=D(Oe.a(Lh,b));d=null;for(f=e=0;;)if(f<
			e)h=d.Q(null,f),c.push(h),f+=1;else if(b=D(b))d=b,fd(d)?(b=Yb(d),f=Zb(d),d=b,e=Q(b),b=f):(b=G(d),c.push(b),b=K(d),d=null,e=0),f=0;else break;return c}return b},Mh={};function Nh(a,b){if(a?a.ec:a)return a.ec(a,b);var c;c=Nh[n(null==a?null:a)];if(!c&&(c=Nh._,!c))throw x("IEncodeClojure.-js-\x3eclj",a);return c.call(null,a,b)}
			var Ph=function(){function a(a){return b.d(a,Kc([new pa(null,1,[Oh,!1],null)],0))}var b=null,c=function(){function a(c,d){var h=null;if(1<arguments.length){for(var h=0,l=Array(arguments.length-1);h<l.length;)l[h]=arguments[h+1],++h;h=new F(l,0)}return b.call(this,c,h)}function b(a,c){var d=kd(c)?T.a(Og,c):c,e=S.a(d,Oh);return function(a,b,d,e){return function v(f){return(f?t(t(null)?null:f.uc)||(f.yb?0:w(Mh,f)):w(Mh,f))?Nh(f,T.a(Pg,c)):kd(f)?vh.b(Oe.a(v,f)):$c(f)?af.a(Oc(f),Oe.a(v,f)):f instanceof
			Array?zf(Oe.a(v,f)):Ba(f)===Object?af.a(Uf,function(){return function(a,b,c,d){return function Pa(e){return new V(null,function(a,b,c,d){return function(){for(;;){var a=D(e);if(a){if(fd(a)){var b=Yb(a),c=Q(b),g=Td(c);return function(){for(var a=0;;)if(a<c){var e=C.a(b,a),h=g,l=uf,m;m=e;m=d.b?d.b(m):d.call(null,m);e=new W(null,2,5,l,[m,v(f[e])],null);h.add(e);a+=1}else return!0}()?Wd(g.ca(),Pa(Zb(a))):Wd(g.ca(),null)}var h=G(a);return M(new W(null,2,5,uf,[function(){var a=h;return d.b?d.b(a):d.call(null,
			a)}(),v(f[h])],null),Pa(H(a)))}return null}}}(a,b,c,d),null,null)}}(a,b,d,e)(gd(f))}()):f}}(c,d,e,t(e)?Pd:z)(a)}a.i=1;a.f=function(a){var c=G(a);a=H(a);return b(c,a)};a.d=b;return a}(),b=function(b,e){switch(arguments.length){case 1:return a.call(this,b);default:var f=null;if(1<arguments.length){for(var f=0,g=Array(arguments.length-1);f<g.length;)g[f]=arguments[f+1],++f;f=new F(g,0)}return c.d(b,f)}throw Error("Invalid arity: "+arguments.length);};b.i=1;b.f=c.f;b.b=a;b.d=c.d;return b}();var wa=new U(null,"meta","meta",1499536964),ya=new U(null,"dup","dup",556298533),sh=new U("cljs.core","none","cljs.core/none",926646439),pe=new U(null,"file","file",-1269645878),le=new U(null,"end-column","end-column",1425389514),sa=new U(null,"flush-on-newline","flush-on-newline",-151457939),ne=new U(null,"column","column",2078222095),ua=new U(null,"readably","readably",1129599760),oe=new U(null,"line","line",212345235),za=new U(null,"print-length","print-length",1931866356),me=new U(null,"end-line",
			"end-line",1837326455),Oh=new U(null,"keywordize-keys","keywordize-keys",1310784252),Zg=new U("cljs.core","not-found","cljs.core/not-found",-1572889185);function Qh(a,b){var c=T.c(ih,a,b);return M(c,Ye.a(function(a){return function(b){return a===b}}(c),b))}
			var Rh=function(){function a(a,b){return Q(a)<Q(b)?A.c(Nc,b,a):A.c(Nc,a,b)}var b=null,c=function(){function a(c,d,h){var l=null;if(2<arguments.length){for(var l=0,m=Array(arguments.length-2);l<m.length;)m[l]=arguments[l+2],++l;l=new F(m,0)}return b.call(this,c,d,l)}function b(a,c,d){a=Qh(Q,Nc.d(d,c,Kc([a],0)));return A.c(af,G(a),H(a))}a.i=2;a.f=function(a){var c=G(a);a=K(a);var d=G(a);a=H(a);return b(c,d,a)};a.d=b;return a}(),b=function(b,e,f){switch(arguments.length){case 0:return bh;case 1:return b;
			case 2:return a.call(this,b,e);default:var g=null;if(2<arguments.length){for(var g=0,h=Array(arguments.length-2);g<h.length;)h[g]=arguments[g+2],++g;g=new F(h,0)}return c.d(b,e,g)}throw Error("Invalid arity: "+arguments.length);};b.i=2;b.f=c.f;b.l=function(){return bh};b.b=function(a){return a};b.a=a;b.d=c.d;return b}(),Sh=function(){function a(a,b){for(;;)if(Q(b)<Q(a)){var c=a;a=b;b=c}else return A.c(function(a,b){return function(a,c){return nd(b,c)?a:Xc.a(a,c)}}(a,b),a,a)}var b=null,c=function(){function a(b,
			d,h){var l=null;if(2<arguments.length){for(var l=0,m=Array(arguments.length-2);l<m.length;)m[l]=arguments[l+2],++l;l=new F(m,0)}return c.call(this,b,d,l)}function c(a,d,e){a=Qh(function(a){return-Q(a)},Nc.d(e,d,Kc([a],0)));return A.c(b,G(a),H(a))}a.i=2;a.f=function(a){var b=G(a);a=K(a);var d=G(a);a=H(a);return c(b,d,a)};a.d=c;return a}(),b=function(b,e,f){switch(arguments.length){case 1:return b;case 2:return a.call(this,b,e);default:var g=null;if(2<arguments.length){for(var g=0,h=Array(arguments.length-
			2);g<h.length;)h[g]=arguments[g+2],++g;g=new F(h,0)}return c.d(b,e,g)}throw Error("Invalid arity: "+arguments.length);};b.i=2;b.f=c.f;b.b=function(a){return a};b.a=a;b.d=c.d;return b}(),Th=function(){function a(a,b){return Q(a)<Q(b)?A.c(function(a,c){return nd(b,c)?Xc.a(a,c):a},a,a):A.c(Xc,a,b)}var b=null,c=function(){function a(b,d,h){var l=null;if(2<arguments.length){for(var l=0,m=Array(arguments.length-2);l<m.length;)m[l]=arguments[l+2],++l;l=new F(m,0)}return c.call(this,b,d,l)}function c(a,d,
			e){return A.c(b,a,Nc.a(e,d))}a.i=2;a.f=function(a){var b=G(a);a=K(a);var d=G(a);a=H(a);return c(b,d,a)};a.d=c;return a}(),b=function(b,e,f){switch(arguments.length){case 1:return b;case 2:return a.call(this,b,e);default:var g=null;if(2<arguments.length){for(var g=0,h=Array(arguments.length-2);g<h.length;)h[g]=arguments[g+2],++g;g=new F(h,0)}return c.d(b,e,g)}throw Error("Invalid arity: "+arguments.length);};b.i=2;b.f=c.f;b.b=function(a){return a};b.a=a;b.d=c.d;return b}();
			function Uh(a,b){return A.c(function(b,d){var e=R.c(d,0,null),f=R.c(d,1,null);return nd(a,e)?Rc.c(b,f,S.a(a,e)):b},T.c(Sc,a,Tg(b)),b)}function Vh(a,b){return A.c(function(a,d){var e=Yg(d,b);return Rc.c(a,e,Nc.a(S.c(a,e,bh),d))},Uf,a)}function Wh(a){return A.c(function(a,c){var d=R.c(c,0,null),e=R.c(c,1,null);return Rc.c(a,e,d)},Uf,a)}
			var Xh=function(){function a(a,b,c){a=Q(a)<=Q(b)?new W(null,3,5,uf,[a,b,Wh(c)],null):new W(null,3,5,uf,[b,a,c],null);b=R.c(a,0,null);c=R.c(a,1,null);var g=R.c(a,2,null),h=Vh(b,Vg(g));return A.c(function(a,b,c,d,e){return function(f,g){var h=function(){var a=Uh(Yg(g,Tg(d)),d);return e.b?e.b(a):e.call(null,a)}();return t(h)?A.c(function(){return function(a,b){return Nc.a(a,Wg.d(Kc([b,g],0)))}}(h,a,b,c,d,e),f,h):f}}(a,b,c,g,h),bh,c)}function b(a,b){if(D(a)&&D(b)){var c=Sh.a(fh(Tg(G(a))),fh(Tg(G(b)))),
			g=Q(a)<=Q(b)?new W(null,2,5,uf,[a,b],null):new W(null,2,5,uf,[b,a],null),h=R.c(g,0,null),l=R.c(g,1,null),m=Vh(h,c);return A.c(function(a,b,c,d,e){return function(f,g){var h=function(){var b=Yg(g,a);return e.b?e.b(b):e.call(null,b)}();return t(h)?A.c(function(){return function(a,b){return Nc.a(a,Wg.d(Kc([b,g],0)))}}(h,a,b,c,d,e),f,h):f}}(c,g,h,l,m),bh,l)}return bh}var c=null,c=function(c,e,f){switch(arguments.length){case 2:return b.call(this,c,e);case 3:return a.call(this,c,e,f)}throw Error("Invalid arity: "+
			arguments.length);};c.a=b;c.c=a;return c}();r("mori.apply",T);r("mori.apply.f2",T.a);r("mori.apply.f3",T.c);r("mori.apply.f4",T.n);r("mori.apply.f5",T.r);r("mori.apply.fn",T.K);r("mori.count",Q);r("mori.distinct",function(a){return function c(a,e){return new V(null,function(){return function(a,d){for(;;){var e=a,l=R.c(e,0,null);if(e=D(e))if(nd(d,l))l=H(e),e=d,a=l,d=e;else return M(l,c(H(e),Nc.a(d,l)));else return null}}.call(null,a,e)},null,null)}(a,bh)});r("mori.empty",Oc);r("mori.first",G);r("mori.second",Lc);r("mori.next",K);
			r("mori.rest",H);r("mori.seq",D);r("mori.conj",Nc);r("mori.conj.f0",Nc.l);r("mori.conj.f1",Nc.b);r("mori.conj.f2",Nc.a);r("mori.conj.fn",Nc.K);r("mori.cons",M);r("mori.find",function(a,b){return null!=a&&bd(a)&&nd(a,b)?new W(null,2,5,uf,[b,S.a(a,b)],null):null});r("mori.nth",R);r("mori.nth.f2",R.a);r("mori.nth.f3",R.c);r("mori.last",function(a){for(;;){var b=K(a);if(null!=b)a=b;else return G(a)}});r("mori.assoc",Rc);r("mori.assoc.f3",Rc.c);r("mori.assoc.fn",Rc.K);r("mori.dissoc",Sc);
			r("mori.dissoc.f1",Sc.b);r("mori.dissoc.f2",Sc.a);r("mori.dissoc.fn",Sc.K);r("mori.getIn",cf);r("mori.getIn.f2",cf.a);r("mori.getIn.f3",cf.c);r("mori.updateIn",df);r("mori.updateIn.f3",df.c);r("mori.updateIn.f4",df.n);r("mori.updateIn.f5",df.r);r("mori.updateIn.f6",df.P);r("mori.updateIn.fn",df.K);r("mori.assocIn",function Yh(b,c,d){var e=R.c(c,0,null);return(c=Ed(c))?Rc.c(b,e,Yh(S.a(b,e),c,d)):Rc.c(b,e,d)});r("mori.fnil",Ke);r("mori.fnil.f2",Ke.a);r("mori.fnil.f3",Ke.c);r("mori.fnil.f4",Ke.n);
			r("mori.disj",Xc);r("mori.disj.f1",Xc.b);r("mori.disj.f2",Xc.a);r("mori.disj.fn",Xc.K);r("mori.pop",function(a){return null==a?null:mb(a)});r("mori.peek",Wc);r("mori.hash",nc);r("mori.get",S);r("mori.get.f2",S.a);r("mori.get.f3",S.c);r("mori.hasKey",nd);r("mori.isEmpty",Yc);r("mori.reverse",Jd);r("mori.take",Pe);r("mori.take.f1",Pe.b);r("mori.take.f2",Pe.a);r("mori.drop",Qe);r("mori.drop.f1",Qe.b);r("mori.drop.f2",Qe.a);r("mori.takeNth",rh);r("mori.takeNth.f1",rh.b);r("mori.takeNth.f2",rh.a);
			r("mori.partition",bf);r("mori.partition.f2",bf.a);r("mori.partition.f3",bf.c);r("mori.partition.f4",bf.n);r("mori.partitionAll",kh);r("mori.partitionAll.f1",kh.b);r("mori.partitionAll.f2",kh.a);r("mori.partitionAll.f3",kh.c);r("mori.partitionBy",th);r("mori.partitionBy.f1",th.b);r("mori.partitionBy.f2",th.a);r("mori.iterate",function Zh(b,c){return M(c,new V(null,function(){return Zh(b,b.b?b.b(c):b.call(null,c))},null,null))});r("mori.into",af);r("mori.into.f2",af.a);r("mori.into.f3",af.c);
			r("mori.merge",Wg);r("mori.mergeWith",Xg);r("mori.subvec",Cf);r("mori.subvec.f2",Cf.a);r("mori.subvec.f3",Cf.c);r("mori.takeWhile",lh);r("mori.takeWhile.f1",lh.b);r("mori.takeWhile.f2",lh.a);r("mori.dropWhile",Re);r("mori.dropWhile.f1",Re.b);r("mori.dropWhile.f2",Re.a);r("mori.groupBy",function(a,b){return ce(A.c(function(b,d){var e=a.b?a.b(d):a.call(null,d);return ee.c(b,e,Nc.a(S.c(b,e,Mc),d))},Ob(Uf),b))});r("mori.interpose",function(a,b){return Qe.a(1,Ue.a(Se.b(a),b))});r("mori.interleave",Ue);
			r("mori.interleave.f2",Ue.a);r("mori.interleave.fn",Ue.K);r("mori.concat",ae);r("mori.concat.f0",ae.l);r("mori.concat.f1",ae.b);r("mori.concat.f2",ae.a);r("mori.concat.fn",ae.K);function $e(a){return a instanceof Array||cd(a)}r("mori.flatten",function(a){return Xe.a(function(a){return!$e(a)},H(Ze(a)))});r("mori.lazySeq",function(a){return new V(null,a,null,null)});r("mori.keys",Tg);r("mori.selectKeys",Yg);r("mori.vals",Vg);r("mori.primSeq",Jc);r("mori.primSeq.f1",Jc.b);r("mori.primSeq.f2",Jc.a);
			r("mori.map",Oe);r("mori.map.f1",Oe.b);r("mori.map.f2",Oe.a);r("mori.map.f3",Oe.c);r("mori.map.f4",Oe.n);r("mori.map.fn",Oe.K);
			r("mori.mapIndexed",function(a,b){return function d(b,f){return new V(null,function(){var g=D(f);if(g){if(fd(g)){for(var h=Yb(g),l=Q(h),m=Td(l),p=0;;)if(p<l)Xd(m,function(){var d=b+p,f=C.a(h,p);return a.a?a.a(d,f):a.call(null,d,f)}()),p+=1;else break;return Wd(m.ca(),d(b+l,Zb(g)))}return M(function(){var d=G(g);return a.a?a.a(b,d):a.call(null,b,d)}(),d(b+1,H(g)))}return null},null,null)}(0,b)});r("mori.mapcat",We);r("mori.mapcat.f1",We.b);r("mori.mapcat.fn",We.K);r("mori.reduce",A);
			r("mori.reduce.f2",A.a);r("mori.reduce.f3",A.c);r("mori.reduceKV",function(a,b,c){return null!=c?xb(c,a,b):b});r("mori.keep",Le);r("mori.keep.f1",Le.b);r("mori.keep.f2",Le.a);r("mori.keepIndexed",Ne);r("mori.keepIndexed.f1",Ne.b);r("mori.keepIndexed.f2",Ne.a);r("mori.filter",Xe);r("mori.filter.f1",Xe.b);r("mori.filter.f2",Xe.a);r("mori.remove",Ye);r("mori.remove.f1",Ye.b);r("mori.remove.f2",Ye.a);r("mori.some",Fe);r("mori.every",Ee);r("mori.equals",sc);r("mori.equals.f1",sc.b);
			r("mori.equals.f2",sc.a);r("mori.equals.fn",sc.K);r("mori.range",qh);r("mori.range.f0",qh.l);r("mori.range.f1",qh.b);r("mori.range.f2",qh.a);r("mori.range.f3",qh.c);r("mori.repeat",Se);r("mori.repeat.f1",Se.b);r("mori.repeat.f2",Se.a);r("mori.repeatedly",Te);r("mori.repeatedly.f1",Te.b);r("mori.repeatedly.f2",Te.a);r("mori.sort",sd);r("mori.sort.f1",sd.b);r("mori.sort.f2",sd.a);r("mori.sortBy",td);r("mori.sortBy.f2",td.a);r("mori.sortBy.f3",td.c);r("mori.intoArray",Ia);r("mori.intoArray.f1",Ia.b);
			r("mori.intoArray.f2",Ia.a);r("mori.subseq",nh);r("mori.subseq.f3",nh.c);r("mori.subseq.f5",nh.r);r("mori.dedupe",Fh);r("mori.dedupe.f0",Fh.l);r("mori.dedupe.f1",Fh.b);r("mori.transduce",wd);r("mori.transduce.f3",wd.c);r("mori.transduce.f4",wd.n);r("mori.eduction",function(a,b){return new Gh(a,b)});r("mori.sequence",Ce);r("mori.sequence.f1",Ce.b);r("mori.sequence.f2",Ce.a);r("mori.sequence.fn",Ce.K);r("mori.completing",vd);r("mori.completing.f1",vd.b);r("mori.completing.f2",vd.a);r("mori.list",Kd);
			r("mori.vector",Af);r("mori.hashMap",Pg);r("mori.set",fh);r("mori.sortedSet",gh);r("mori.sortedSetBy",hh);r("mori.sortedMap",Qg);r("mori.sortedMapBy",Rg);r("mori.queue",function(){function a(a){var d=null;if(0<arguments.length){for(var d=0,e=Array(arguments.length-0);d<e.length;)e[d]=arguments[d+0],++d;d=new F(e,0)}return b.call(this,d)}function b(a){return af.a?af.a(Mf,a):af.call(null,Mf,a)}a.i=0;a.f=function(a){a=D(a);return b(a)};a.d=b;return a}());r("mori.keyword",Pd);r("mori.keyword.f1",Pd.b);
			r("mori.keyword.f2",Pd.a);r("mori.symbol",rc);r("mori.symbol.f1",rc.b);r("mori.symbol.f2",rc.a);r("mori.zipmap",function(a,b){for(var c=Ob(Uf),d=D(a),e=D(b);;)if(d&&e)c=ee.c(c,G(d),G(e)),d=K(d),e=K(e);else return Qb(c)});r("mori.isList",function(a){return a?a.j&33554432||a.wc?!0:a.j?!1:w(Eb,a):w(Eb,a)});r("mori.isSeq",kd);r("mori.isVector",ed);r("mori.isMap",dd);r("mori.isSet",ad);r("mori.isKeyword",function(a){return a instanceof U});r("mori.isSymbol",function(a){return a instanceof qc});
			r("mori.isCollection",$c);r("mori.isSequential",cd);r("mori.isAssociative",bd);r("mori.isCounted",Ec);r("mori.isIndexed",Fc);r("mori.isReduceable",function(a){return a?a.j&524288||a.Sb?!0:a.j?!1:w(vb,a):w(vb,a)});r("mori.isSeqable",ld);r("mori.isReversible",Id);r("mori.union",Rh);r("mori.union.f0",Rh.l);r("mori.union.f1",Rh.b);r("mori.union.f2",Rh.a);r("mori.union.fn",Rh.K);r("mori.intersection",Sh);r("mori.intersection.f1",Sh.b);r("mori.intersection.f2",Sh.a);r("mori.intersection.fn",Sh.K);
			r("mori.difference",Th);r("mori.difference.f1",Th.b);r("mori.difference.f2",Th.a);r("mori.difference.fn",Th.K);r("mori.join",Xh);r("mori.join.f2",Xh.a);r("mori.join.f3",Xh.c);r("mori.index",Vh);r("mori.project",function(a,b){return fh(Oe.a(function(a){return Yg(a,b)},a))});r("mori.mapInvert",Wh);r("mori.rename",function(a,b){return fh(Oe.a(function(a){return Uh(a,b)},a))});r("mori.renameKeys",Uh);r("mori.isSubset",function(a,b){return Q(a)<=Q(b)&&Ee(function(a){return nd(b,a)},a)});
			r("mori.isSuperset",function(a,b){return Q(a)>=Q(b)&&Ee(function(b){return nd(a,b)},b)});r("mori.notEquals",je);r("mori.notEquals.f1",je.b);r("mori.notEquals.f2",je.a);r("mori.notEquals.fn",je.K);r("mori.gt",Ad);r("mori.gt.f1",Ad.b);r("mori.gt.f2",Ad.a);r("mori.gt.fn",Ad.K);r("mori.gte",Bd);r("mori.gte.f1",Bd.b);r("mori.gte.f2",Bd.a);r("mori.gte.fn",Bd.K);r("mori.lt",yd);r("mori.lt.f1",yd.b);r("mori.lt.f2",yd.a);r("mori.lt.fn",yd.K);r("mori.lte",zd);r("mori.lte.f1",zd.b);r("mori.lte.f2",zd.a);
			r("mori.lte.fn",zd.K);r("mori.compare",od);r("mori.partial",Je);r("mori.partial.f1",Je.b);r("mori.partial.f2",Je.a);r("mori.partial.f3",Je.c);r("mori.partial.f4",Je.n);r("mori.partial.fn",Je.K);r("mori.comp",Ie);r("mori.comp.f0",Ie.l);r("mori.comp.f1",Ie.b);r("mori.comp.f2",Ie.a);r("mori.comp.f3",Ie.c);r("mori.comp.fn",Ie.K);
			r("mori.pipeline",function(){function a(a){var d=null;if(0<arguments.length){for(var d=0,e=Array(arguments.length-0);d<e.length;)e[d]=arguments[d+0],++d;d=new F(e,0)}return b.call(this,d)}function b(a){function b(a,c){return c.b?c.b(a):c.call(null,a)}return A.a?A.a(b,a):A.call(null,b,a)}a.i=0;a.f=function(a){a=D(a);return b(a)};a.d=b;return a}());
			r("mori.curry",function(){function a(a,d){var e=null;if(1<arguments.length){for(var e=0,f=Array(arguments.length-1);e<f.length;)f[e]=arguments[e+1],++e;e=new F(f,0)}return b.call(this,a,e)}function b(a,b){return function(e){return T.a(a,M.a?M.a(e,b):M.call(null,e,b))}}a.i=1;a.f=function(a){var d=G(a);a=H(a);return b(d,a)};a.d=b;return a}());
			r("mori.juxt",function(){function a(a){var d=null;if(0<arguments.length){for(var d=0,e=Array(arguments.length-0);d<e.length;)e[d]=arguments[d+0],++d;d=new F(e,0)}return b.call(this,d)}function b(a){return function(){function b(a){var c=null;if(0<arguments.length){for(var c=0,d=Array(arguments.length-0);c<d.length;)d[c]=arguments[c+0],++c;c=new F(d,0)}return e.call(this,c)}function e(b){var d=function(){function d(a){return T.a(a,b)}return Oe.a?Oe.a(d,a):Oe.call(null,d,a)}();return Ia.b?Ia.b(d):Ia.call(null,
			d)}b.i=0;b.f=function(a){a=D(a);return e(a)};b.d=e;return b}()}a.i=0;a.f=function(a){a=D(a);return b(a)};a.d=b;return a}());
			r("mori.knit",function(){function a(a){var d=null;if(0<arguments.length){for(var d=0,e=Array(arguments.length-0);d<e.length;)e[d]=arguments[d+0],++d;d=new F(e,0)}return b.call(this,d)}function b(a){return function(b){var e=function(){function e(a,b){return a.b?a.b(b):a.call(null,b)}return Oe.c?Oe.c(e,a,b):Oe.call(null,e,a,b)}();return Ia.b?Ia.b(e):Ia.call(null,e)}}a.i=0;a.f=function(a){a=D(a);return b(a)};a.d=b;return a}());r("mori.sum",xd);r("mori.sum.f0",xd.l);r("mori.sum.f1",xd.b);
			r("mori.sum.f2",xd.a);r("mori.sum.fn",xd.K);r("mori.inc",function(a){return a+1});r("mori.dec",function(a){return a-1});r("mori.isEven",Ge);r("mori.isOdd",function(a){return!Ge(a)});r("mori.each",function(a,b){for(var c=D(a),d=null,e=0,f=0;;)if(f<e){var g=d.Q(null,f);b.b?b.b(g):b.call(null,g);f+=1}else if(c=D(c))fd(c)?(e=Yb(c),c=Zb(c),d=e,e=Q(e)):(d=g=G(c),b.b?b.b(d):b.call(null,d),c=K(c),d=null,e=0),f=0;else return null});r("mori.identity",ud);
			r("mori.constantly",function(a){return function(){function b(b){if(0<arguments.length)for(var d=0,e=Array(arguments.length-0);d<e.length;)e[d]=arguments[d+0],++d;return a}b.i=0;b.f=function(b){D(b);return a};b.d=function(){return a};return b}()});r("mori.toJs",Kh);
			r("mori.toClj",function(){function a(a,b){return Ph.d(a,Kc([Oh,b],0))}function b(a){return Ph.b(a)}var c=null,c=function(c,e){switch(arguments.length){case 1:return b.call(this,c);case 2:return a.call(this,c,e)}throw Error("Invalid arity: "+arguments.length);};c.b=b;c.a=a;return c}());r("mori.configure",function(a,b){switch(a){case "print-length":return la=b;case "print-level":return ma=b;default:throw Error([z("No matching clause: "),z(a)].join(""));}});r("mori.meta",Vc);r("mori.withMeta",O);
			r("mori.varyMeta",ie);r("mori.varyMeta.f2",ie.a);r("mori.varyMeta.f3",ie.c);r("mori.varyMeta.f4",ie.n);r("mori.varyMeta.f5",ie.r);r("mori.varyMeta.f6",ie.P);r("mori.varyMeta.fn",ie.K);r("mori.alterMeta",Dh);r("mori.resetMeta",function(a,b){return a.k=b});V.prototype.inspect=function(){return this.toString()};F.prototype.inspect=function(){return this.toString()};Hc.prototype.inspect=function(){return this.toString()};wg.prototype.inspect=function(){return this.toString()};pg.prototype.inspect=function(){return this.toString()};
			qg.prototype.inspect=function(){return this.toString()};Fd.prototype.inspect=function(){return this.toString()};Ld.prototype.inspect=function(){return this.toString()};Hd.prototype.inspect=function(){return this.toString()};W.prototype.inspect=function(){return this.toString()};Vd.prototype.inspect=function(){return this.toString()};Bf.prototype.inspect=function(){return this.toString()};Df.prototype.inspect=function(){return this.toString()};Z.prototype.inspect=function(){return this.toString()};
			X.prototype.inspect=function(){return this.toString()};pa.prototype.inspect=function(){return this.toString()};rg.prototype.inspect=function(){return this.toString()};Lg.prototype.inspect=function(){return this.toString()};$g.prototype.inspect=function(){return this.toString()};ch.prototype.inspect=function(){return this.toString()};ph.prototype.inspect=function(){return this.toString()};U.prototype.inspect=function(){return this.toString()};qc.prototype.inspect=function(){return this.toString()};
			Lf.prototype.inspect=function(){return this.toString()};Kf.prototype.inspect=function(){return this.toString()};r("mori.mutable.thaw",function(a){return Ob(a)});r("mori.mutable.freeze",ce);r("mori.mutable.conj",de);r("mori.mutable.conj.f0",de.l);r("mori.mutable.conj.f1",de.b);r("mori.mutable.conj.f2",de.a);r("mori.mutable.conj.fn",de.K);r("mori.mutable.assoc",ee);r("mori.mutable.assoc.f3",ee.c);r("mori.mutable.assoc.fn",ee.K);r("mori.mutable.dissoc",fe);r("mori.mutable.dissoc.f2",fe.a);r("mori.mutable.dissoc.fn",fe.K);r("mori.mutable.pop",function(a){return Ub(a)});r("mori.mutable.disj",ge);
			r("mori.mutable.disj.f2",ge.a);r("mori.mutable.disj.fn",ge.K);;return this.mori;}.call({});});
		}
	},
	"react-todo": {
		"build": {
			"app.js": function (exports, module, require) {
				var React = require('../lib/react.js'),
				    state = require('./state_atom'),
				    R$ = require('../lib/redact.js'),
				    Layout = require('../build/components').layout,
				    mori = require('mori'),
				    // just to add them to the bundle.js
				    controllers = require('./controllers');

				window.onload = function() {

				  state.swap(mori.toClj({
				    ui: {filter: 'all'},
				    data: {todos: []}
				  }));

				  //var update = React.render.bind(React, <Layout state={state.get()}/>, document.getElementById('main'))
				  var update = function(s) {
				        React.render(React.createElement(Layout, {state: s}), document.getElementById('main'));
				  }

				  //var update = React.render(<Layout state={state_atom.get()}/>,
				//  //components.layout(state.get()),
				//                       document.getElementById('main')),
				      setFocus = function() { document.getElementById('focus').focus(); };
				  update(state.get());
				  // better: debounce update
				  state.addChangeListener(function(state) {
				    //state.swap(state);
				    update(state);
				    setTimeout(setFocus, 0);
				  });

				};
			},
			"components.js": function (exports, module, require) {
				var React = require('../lib/react'),
				    d = require('../lib/redact').d,
				    models = require('./models'),
				    controllers = require('./controllers'),
				    _ = require('mori'),
				    sender = require('./dispatcher').sender;

				// TODO Header

				var TodoHeader = React.createClass({displayName: "TodoHeader",
				  render: function() {
				    return (React.createElement("header", {className: "todo-header"}, 
				             React.createElement("input", {type: "text", placeholder: "Add item", id: "focus", 
				                         onKeyUp: sender('input:keypress')})
				            ))
				  }
				});

				// TODO List

				var TodoItem = React.createClass({displayName: "TodoItem",
				  render: function() {
				    console.log(this.props);
				    var todo = this.props.todo;
				    var caption = _.get(todo, 'caption');
				    var done = _.get(todo, 'done')? 'done' : '';
				    return (React.createElement("li", {className: done, 
				                    onClick: sender('item:toggle', todo)}, 
				             React.createElement("input", {type: "checkbox"}), 
				             React.createElement("label", null, caption), 
				             React.createElement("a", {className: "close", href: "#", 
				                     onClick: sender('item:remove', todo)}, 
				               React.createElement("span", {className: "icon icon-close"})
				             )
				          ));
				  }
				});

				var TodoList = React.createClass({displayName: "TodoList",
				  render: function() {
				    var filter = models.ui.filter('get', this.props.state),
				      items = models.todos.getFiltered(this.props.state, filter);
				    var itemViews = _.toJs(_.map(function(item){
				      return React.createElement(TodoItem, {todo: item})
				    }, items));

				    return (React.createElement("ul", {className: "todo-list"}, 
				             itemViews
				            ))
				  }
				});

				// TODO Footer

				var TodoCounter = React.createClass({displayName: "TodoCounter",
				  render: function() {
				    var n = _.count(models.todos.getFiltered(this.props.state, 'active'));
				    return (React.createElement("a", {className: "remaining active", href: "#"}, 
				             React.createElement("span", null, " ", n, " Items left")
				            ))
				  }
				});

				var TodoToggleButtons = React.createClass({displayName: "TodoToggleButtons",
				  render: function() {
				  var filter = models.ui.filter('get', this.props.state),
				      isActive = function(filter, active) {
				        return filter === active? 'active' : '';
				      };
				  var isAllActive = isActive(filter, 'all'),
				      isFilterActive = isActive(filter, 'active'),
				      isDoneActive = isActive(filter, 'done');

				  return (React.createElement("span", {className: "completed"}, 
				           React.createElement("a", {className: isAllActive, href: "#", 
				                   onClick: sender('set:filter', 'all')}, 
				             React.createElement("span", null, " All ")
				           ), 
				           React.createElement("a", {className: isFilterActive, href: "#", 
				                   onClick: sender('set:filter', 'active')}, 
				             React.createElement("span", null, " Active ")
				           ), 
				           React.createElement("a", {className: isDoneActive, href: "#", 
				                   onClick: sender('set:filter', 'done')}, 
				             React.createElement("span", null, " Completed ")
				           )
				          ))
				  }
				});

				var TodoClearButton = React.createClass({displayName: "TodoClearButton",
				  render: function() {
				    return (React.createElement("a", {className: "completed clear", href: "#", 
				                     onClick: sender('clear:all')}, 
				               React.createElement("span", {className: "icon icon-bin"}, "Clear All")
				            ))
				  }
				})

				var TodoFooter = React.createClass({displayName: "TodoFooter",
				  render: function() {
				    return (React.createElement("footer", {className: "todo-footer"}, 
				             React.createElement(TodoCounter, {state: this.props.state}), 
				             React.createElement(TodoToggleButtons, {state: this.props.state}), 
				             React.createElement(TodoClearButton, {state: this.props.state})
				           ))
				  }
				});

				// TODO Box layout

				var TodoBox = React.createClass({displayName: "TodoBox",
				  render: function() {
				    console.log(this.props);
				    return (React.createElement("section", {className: "todo panel"}, 
				             React.createElement(TodoHeader, {state: this.props.state}), 
				             React.createElement("div", {className: "todo-main"}, 
				               React.createElement(TodoList, {state: this.props.state})
				             ), 
				             React.createElement(TodoFooter, {state: this.props.state})
				           ))
				  }
				});

				// General Page Layout

				var Layout = React.createClass({displayName: "Layout",
				  render: function() {
				    console.log(this.props)
				    return (React.createElement("div", {className: "wrapper"}, 
				             React.createElement("h1", {className: "centered"}, " To Do "), 
				             React.createElement(TodoBox, {state: this.props.state})
				           ));
				  }
				});

				module.exports = {
				  layout: Layout
				};
			},
			"controllers.js": function (exports, module, require) {
				var state = require('./state_atom'),
				    dispatcher = require('./dispatcher'),
				    _ = require('mori'),
				    models = require('./models'),
				    swap = state.model_swap;

				// Input

				var ENTER_KEY = 13;

				dispatcher.on('input:keypress', function(e) {
				  if (e.keyCode === ENTER_KEY) {
				    state.swap(models.todos.insert(state.get(),
				                                   e.currentTarget.value));
				    e.currentTarget.value = '';
				  }
				    
				});

				dispatcher.on('item:remove', function(item) {
				  swap(models.todos, 'update', function(todos) {
				    return _.remove(_.curry(_.equals, item), todos);
				  });
				});

				dispatcher.on('set:filter', function(filter) {
				  swap(models.ui.filter, 'assoc', filter);
				});

				dispatcher.on('item:toggle', function(item) {
				  var todos = models.todos('get', state.get());
				  todos = _.map(function(i) {
				    if (_.equals(item, i))
				      return _.assoc(item, 'done', !_.get(item, 'done'));
				    else
				      return i;
				  }, todos);
				  swap(models.todos, 'assoc', todos);
				});

				dispatcher.on('clear:all', function() {
				  swap(models.todos, 'assoc', _.vector());
				});
			},
			"dispatcher.js": function (exports, module, require) {
				var listeners = {};

				module.exports = {
				  on: function(ev, cb) {
				    if (!(ev in listeners)) listeners[ev] = [];
				    listeners[ev].push(cb);
				  },
				  trigger: function(ev) {
				    args = [].slice.call(arguments, 1);
				    if (ev in listeners)
				      for (var l=listeners[ev], i=l.length; i--;)
				        l[i].apply(null, args);
				    console.log('triggering:', ev, args);
				  },
				  sender: function() {
				    var trigger = module.exports.trigger,
				        args = [].slice.call(arguments);
				    return trigger.bind.apply(trigger, [{}].concat(args));
				  }
				};
			},
			"models.js": function (exports, module, require) {
				var _ = require('mori');

				var model = function(path, extra) {
				  var m = function(op, state) {
				    var args = [].slice.call(arguments, 2);
				    return _[op + 'In'].apply(_, [state, path].concat(args));
				  };
				  for (var k in extra) m[k] = extra[k];
				  return m;
				};

				var models = {
				  ui: {
				    filter: model(['ui', 'filter'])
				  },
				  todos: model(['data', 'todos'], {
				    insert: function(state, txt) {
				      var todo = _.hashMap('stamp', Date.now(),
				                           'caption', txt,
				                           'done', false);
				      return models.todos('update', state, function(todos) {
				        return _.conj(todos, todo);
				      });
				    },
				    getFiltered: function(state, filter) {
				      var filters = {
				        'all': function() { return true; },
				        'active': function(t) { return !_.get(t, 'done'); },
				        'done': function(t) { return _.get(t, 'done'); }
				      };
				      return _.filter(filters[filter], models.todos('get', state));
				    }
				  })
				};

				module.exports = models;
			},
			"state_atom.js": function (exports, module, require) {
				var state;
				var listeners = [];

				module.exports = {
				  get: function() {
				    return state;
				  },
				  swap: function(newState) {
				    state = newState;
				    for (var i=listeners.length; i--;) listeners[i](state);
				  },
				  model_swap: function(model, op) {
				    var args = [].slice.call(arguments, 2),
				        state = module.exports.get();
				    module.exports.swap(model.apply(null, [op, state].concat(args)));
				  },
				  addChangeListener: function(fn) {
				    listeners.push(fn);
				  }
				};
			}
		},
		"lib": {
			"react.js": function (exports, module, require) {
				/**
				 * React v0.12.2
				 */
				!function(e){if("object"==typeof exports&&"undefined"!=typeof module)module.exports=e();else if("function"==typeof define&&define.amd)define([],e);else{var f;"undefined"!=typeof window?f=window:"undefined"!=typeof global?f=global:"undefined"!=typeof self&&(f=self),f.React=e()}}(function(){var define,module,exports;return (function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require=="function"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error("Cannot find module '"+o+"'");throw f.code="MODULE_NOT_FOUND",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require=="function"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(_dereq_,module,exports){
				/**
				 * Copyright 2013-2014, Facebook, Inc.
				 * All rights reserved.
				 *
				 * This source code is licensed under the BSD-style license found in the
				 * LICENSE file in the root directory of this source tree. An additional grant
				 * of patent rights can be found in the PATENTS file in the same directory.
				 *
				 * @providesModule React
				 */

				"use strict";

				var DOMPropertyOperations = _dereq_("./DOMPropertyOperations");
				var EventPluginUtils = _dereq_("./EventPluginUtils");
				var ReactChildren = _dereq_("./ReactChildren");
				var ReactComponent = _dereq_("./ReactComponent");
				var ReactCompositeComponent = _dereq_("./ReactCompositeComponent");
				var ReactContext = _dereq_("./ReactContext");
				var ReactCurrentOwner = _dereq_("./ReactCurrentOwner");
				var ReactElement = _dereq_("./ReactElement");
				var ReactElementValidator = _dereq_("./ReactElementValidator");
				var ReactDOM = _dereq_("./ReactDOM");
				var ReactDOMComponent = _dereq_("./ReactDOMComponent");
				var ReactDefaultInjection = _dereq_("./ReactDefaultInjection");
				var ReactInstanceHandles = _dereq_("./ReactInstanceHandles");
				var ReactLegacyElement = _dereq_("./ReactLegacyElement");
				var ReactMount = _dereq_("./ReactMount");
				var ReactMultiChild = _dereq_("./ReactMultiChild");
				var ReactPerf = _dereq_("./ReactPerf");
				var ReactPropTypes = _dereq_("./ReactPropTypes");
				var ReactServerRendering = _dereq_("./ReactServerRendering");
				var ReactTextComponent = _dereq_("./ReactTextComponent");

				var assign = _dereq_("./Object.assign");
				var deprecated = _dereq_("./deprecated");
				var onlyChild = _dereq_("./onlyChild");

				ReactDefaultInjection.inject();

				var createElement = ReactElement.createElement;
				var createFactory = ReactElement.createFactory;

				if ("production" !== "development") {
				  createElement = ReactElementValidator.createElement;
				  createFactory = ReactElementValidator.createFactory;
				}

				// TODO: Drop legacy elements once classes no longer export these factories
				createElement = ReactLegacyElement.wrapCreateElement(
				  createElement
				);
				createFactory = ReactLegacyElement.wrapCreateFactory(
				  createFactory
				);

				var render = ReactPerf.measure('React', 'render', ReactMount.render);

				var React = {
				  Children: {
				    map: ReactChildren.map,
				    forEach: ReactChildren.forEach,
				    count: ReactChildren.count,
				    only: onlyChild
				  },
				  DOM: ReactDOM,
				  PropTypes: ReactPropTypes,
				  initializeTouchEvents: function(shouldUseTouch) {
				    EventPluginUtils.useTouchEvents = shouldUseTouch;
				  },
				  createClass: ReactCompositeComponent.createClass,
				  createElement: createElement,
				  createFactory: createFactory,
				  constructAndRenderComponent: ReactMount.constructAndRenderComponent,
				  constructAndRenderComponentByID: ReactMount.constructAndRenderComponentByID,
				  render: render,
				  renderToString: ReactServerRendering.renderToString,
				  renderToStaticMarkup: ReactServerRendering.renderToStaticMarkup,
				  unmountComponentAtNode: ReactMount.unmountComponentAtNode,
				  isValidClass: ReactLegacyElement.isValidClass,
				  isValidElement: ReactElement.isValidElement,
				  withContext: ReactContext.withContext,

				  // Hook for JSX spread, don't use this for anything else.
				  __spread: assign,

				  // Deprecations (remove for 0.13)
				  renderComponent: deprecated(
				    'React',
				    'renderComponent',
				    'render',
				    this,
				    render
				  ),
				  renderComponentToString: deprecated(
				    'React',
				    'renderComponentToString',
				    'renderToString',
				    this,
				    ReactServerRendering.renderToString
				  ),
				  renderComponentToStaticMarkup: deprecated(
				    'React',
				    'renderComponentToStaticMarkup',
				    'renderToStaticMarkup',
				    this,
				    ReactServerRendering.renderToStaticMarkup
				  ),
				  isValidComponent: deprecated(
				    'React',
				    'isValidComponent',
				    'isValidElement',
				    this,
				    ReactElement.isValidElement
				  )
				};

				// Inject the runtime into a devtools global hook regardless of browser.
				// Allows for debugging when the hook is injected on the page.
				if (
				  typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ !== 'undefined' &&
				  typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.inject === 'function') {
				  __REACT_DEVTOOLS_GLOBAL_HOOK__.inject({
				    Component: ReactComponent,
				    CurrentOwner: ReactCurrentOwner,
				    DOMComponent: ReactDOMComponent,
				    DOMPropertyOperations: DOMPropertyOperations,
				    InstanceHandles: ReactInstanceHandles,
				    Mount: ReactMount,
				    MultiChild: ReactMultiChild,
				    TextComponent: ReactTextComponent
				  });
				}

				if ("production" !== "development") {
				  var ExecutionEnvironment = _dereq_("./ExecutionEnvironment");
				  if (ExecutionEnvironment.canUseDOM && window.top === window.self) {

				    // If we're in Chrome, look for the devtools marker and provide a download
				    // link if not installed.
				    if (navigator.userAgent.indexOf('Chrome') > -1) {
				      if (typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ === 'undefined') {
				        console.debug(
				          'Download the React DevTools for a better development experience: ' +
				          'http://fb.me/react-devtools'
				        );
				      }
				    }

				    var expectedFeatures = [
				      // shims
				      Array.isArray,
				      Array.prototype.every,
				      Array.prototype.forEach,
				      Array.prototype.indexOf,
				      Array.prototype.map,
				      Date.now,
				      Function.prototype.bind,
				      Object.keys,
				      String.prototype.split,
				      String.prototype.trim,

				      // shams
				      Object.create,
				      Object.freeze
				    ];

				    for (var i = 0; i < expectedFeatures.length; i++) {
				      if (!expectedFeatures[i]) {
				        console.error(
				          'One or more ES5 shim/shams expected by React are not available: ' +
				          'http://fb.me/react-warning-polyfills'
				        );
				        break;
				      }
				    }
				  }
				}

				// Version exists only in the open-source version of React, not in Facebook's
				// internal version.
				React.version = '0.12.2';

				module.exports = React;

				},{"./DOMPropertyOperations":12,"./EventPluginUtils":20,"./ExecutionEnvironment":22,"./Object.assign":27,"./ReactChildren":31,"./ReactComponent":32,"./ReactCompositeComponent":34,"./ReactContext":35,"./ReactCurrentOwner":36,"./ReactDOM":37,"./ReactDOMComponent":39,"./ReactDefaultInjection":49,"./ReactElement":52,"./ReactElementValidator":53,"./ReactInstanceHandles":60,"./ReactLegacyElement":61,"./ReactMount":63,"./ReactMultiChild":64,"./ReactPerf":68,"./ReactPropTypes":72,"./ReactServerRendering":76,"./ReactTextComponent":78,"./deprecated":106,"./onlyChild":137}],2:[function(_dereq_,module,exports){
				/**
				 * Copyright 2013-2014, Facebook, Inc.
				 * All rights reserved.
				 *
				 * This source code is licensed under the BSD-style license found in the
				 * LICENSE file in the root directory of this source tree. An additional grant
				 * of patent rights can be found in the PATENTS file in the same directory.
				 *
				 * @providesModule AutoFocusMixin
				 * @typechecks static-only
				 */

				"use strict";

				var focusNode = _dereq_("./focusNode");

				var AutoFocusMixin = {
				  componentDidMount: function() {
				    if (this.props.autoFocus) {
				      focusNode(this.getDOMNode());
				    }
				  }
				};

				module.exports = AutoFocusMixin;

				},{"./focusNode":111}],3:[function(_dereq_,module,exports){
				/**
				 * Copyright 2013 Facebook, Inc.
				 * All rights reserved.
				 *
				 * This source code is licensed under the BSD-style license found in the
				 * LICENSE file in the root directory of this source tree. An additional grant
				 * of patent rights can be found in the PATENTS file in the same directory.
				 *
				 * @providesModule BeforeInputEventPlugin
				 * @typechecks static-only
				 */

				"use strict";

				var EventConstants = _dereq_("./EventConstants");
				var EventPropagators = _dereq_("./EventPropagators");
				var ExecutionEnvironment = _dereq_("./ExecutionEnvironment");
				var SyntheticInputEvent = _dereq_("./SyntheticInputEvent");

				var keyOf = _dereq_("./keyOf");

				var canUseTextInputEvent = (
				  ExecutionEnvironment.canUseDOM &&
				  'TextEvent' in window &&
				  !('documentMode' in document || isPresto())
				);

				/**
				 * Opera <= 12 includes TextEvent in window, but does not fire
				 * text input events. Rely on keypress instead.
				 */
				function isPresto() {
				  var opera = window.opera;
				  return (
				    typeof opera === 'object' &&
				    typeof opera.version === 'function' &&
				    parseInt(opera.version(), 10) <= 12
				  );
				}

				var SPACEBAR_CODE = 32;
				var SPACEBAR_CHAR = String.fromCharCode(SPACEBAR_CODE);

				var topLevelTypes = EventConstants.topLevelTypes;

				// Events and their corresponding property names.
				var eventTypes = {
				  beforeInput: {
				    phasedRegistrationNames: {
				      bubbled: keyOf({onBeforeInput: null}),
				      captured: keyOf({onBeforeInputCapture: null})
				    },
				    dependencies: [
				      topLevelTypes.topCompositionEnd,
				      topLevelTypes.topKeyPress,
				      topLevelTypes.topTextInput,
				      topLevelTypes.topPaste
				    ]
				  }
				};

				// Track characters inserted via keypress and composition events.
				var fallbackChars = null;

				// Track whether we've ever handled a keypress on the space key.
				var hasSpaceKeypress = false;

				/**
				 * Return whether a native keypress event is assumed to be a command.
				 * This is required because Firefox fires `keypress` events for key commands
				 * (cut, copy, select-all, etc.) even though no character is inserted.
				 */
				function isKeypressCommand(nativeEvent) {
				  return (
				    (nativeEvent.ctrlKey || nativeEvent.altKey || nativeEvent.metaKey) &&
				    // ctrlKey && altKey is equivalent to AltGr, and is not a command.
				    !(nativeEvent.ctrlKey && nativeEvent.altKey)
				  );
				}

				/**
				 * Create an `onBeforeInput` event to match
				 * http://www.w3.org/TR/2013/WD-DOM-Level-3-Events-20131105/#events-inputevents.
				 *
				 * This event plugin is based on the native `textInput` event
				 * available in Chrome, Safari, Opera, and IE. This event fires after
				 * `onKeyPress` and `onCompositionEnd`, but before `onInput`.
				 *
				 * `beforeInput` is spec'd but not implemented in any browsers, and
				 * the `input` event does not provide any useful information about what has
				 * actually been added, contrary to the spec. Thus, `textInput` is the best
				 * available event to identify the characters that have actually been inserted
				 * into the target node.
				 */
				var BeforeInputEventPlugin = {

				  eventTypes: eventTypes,

				  /**
				   * @param {string} topLevelType Record from `EventConstants`.
				   * @param {DOMEventTarget} topLevelTarget The listening component root node.
				   * @param {string} topLevelTargetID ID of `topLevelTarget`.
				   * @param {object} nativeEvent Native browser event.
				   * @return {*} An accumulation of synthetic events.
				   * @see {EventPluginHub.extractEvents}
				   */
				  extractEvents: function(
				      topLevelType,
				      topLevelTarget,
				      topLevelTargetID,
				      nativeEvent) {

				    var chars;

				    if (canUseTextInputEvent) {
				      switch (topLevelType) {
				        case topLevelTypes.topKeyPress:
				          /**
				           * If native `textInput` events are available, our goal is to make
				           * use of them. However, there is a special case: the spacebar key.
				           * In Webkit, preventing default on a spacebar `textInput` event
				           * cancels character insertion, but it *also* causes the browser
				           * to fall back to its default spacebar behavior of scrolling the
				           * page.
				           *
				           * Tracking at:
				           * https://code.google.com/p/chromium/issues/detail?id=355103
				           *
				           * To avoid this issue, use the keypress event as if no `textInput`
				           * event is available.
				           */
				          var which = nativeEvent.which;
				          if (which !== SPACEBAR_CODE) {
				            return;
				          }

				          hasSpaceKeypress = true;
				          chars = SPACEBAR_CHAR;
				          break;

				        case topLevelTypes.topTextInput:
				          // Record the characters to be added to the DOM.
				          chars = nativeEvent.data;

				          // If it's a spacebar character, assume that we have already handled
				          // it at the keypress level and bail immediately. Android Chrome
				          // doesn't give us keycodes, so we need to blacklist it.
				          if (chars === SPACEBAR_CHAR && hasSpaceKeypress) {
				            return;
				          }

				          // Otherwise, carry on.
				          break;

				        default:
				          // For other native event types, do nothing.
				          return;
				      }
				    } else {
				      switch (topLevelType) {
				        case topLevelTypes.topPaste:
				          // If a paste event occurs after a keypress, throw out the input
				          // chars. Paste events should not lead to BeforeInput events.
				          fallbackChars = null;
				          break;
				        case topLevelTypes.topKeyPress:
				          /**
				           * As of v27, Firefox may fire keypress events even when no character
				           * will be inserted. A few possibilities:
				           *
				           * - `which` is `0`. Arrow keys, Esc key, etc.
				           *
				           * - `which` is the pressed key code, but no char is available.
				           *   Ex: 'AltGr + d` in Polish. There is no modified character for
				           *   this key combination and no character is inserted into the
				           *   document, but FF fires the keypress for char code `100` anyway.
				           *   No `input` event will occur.
				           *
				           * - `which` is the pressed key code, but a command combination is
				           *   being used. Ex: `Cmd+C`. No character is inserted, and no
				           *   `input` event will occur.
				           */
				          if (nativeEvent.which && !isKeypressCommand(nativeEvent)) {
				            fallbackChars = String.fromCharCode(nativeEvent.which);
				          }
				          break;
				        case topLevelTypes.topCompositionEnd:
				          fallbackChars = nativeEvent.data;
				          break;
				      }

				      // If no changes have occurred to the fallback string, no relevant
				      // event has fired and we're done.
				      if (fallbackChars === null) {
				        return;
				      }

				      chars = fallbackChars;
				    }

				    // If no characters are being inserted, no BeforeInput event should
				    // be fired.
				    if (!chars) {
				      return;
				    }

				    var event = SyntheticInputEvent.getPooled(
				      eventTypes.beforeInput,
				      topLevelTargetID,
				      nativeEvent
				    );

				    event.data = chars;
				    fallbackChars = null;
				    EventPropagators.accumulateTwoPhaseDispatches(event);
				    return event;
				  }
				};

				module.exports = BeforeInputEventPlugin;

				},{"./EventConstants":16,"./EventPropagators":21,"./ExecutionEnvironment":22,"./SyntheticInputEvent":89,"./keyOf":133}],4:[function(_dereq_,module,exports){
				/**
				 * Copyright 2013-2014, Facebook, Inc.
				 * All rights reserved.
				 *
				 * This source code is licensed under the BSD-style license found in the
				 * LICENSE file in the root directory of this source tree. An additional grant
				 * of patent rights can be found in the PATENTS file in the same directory.
				 *
				 * @providesModule CSSProperty
				 */

				"use strict";

				/**
				 * CSS properties which accept numbers but are not in units of "px".
				 */
				var isUnitlessNumber = {
				  columnCount: true,
				  flex: true,
				  flexGrow: true,
				  flexShrink: true,
				  fontWeight: true,
				  lineClamp: true,
				  lineHeight: true,
				  opacity: true,
				  order: true,
				  orphans: true,
				  widows: true,
				  zIndex: true,
				  zoom: true,

				  // SVG-related properties
				  fillOpacity: true,
				  strokeOpacity: true
				};

				/**
				 * @param {string} prefix vendor-specific prefix, eg: Webkit
				 * @param {string} key style name, eg: transitionDuration
				 * @return {string} style name prefixed with `prefix`, properly camelCased, eg:
				 * WebkitTransitionDuration
				 */
				function prefixKey(prefix, key) {
				  return prefix + key.charAt(0).toUpperCase() + key.substring(1);
				}

				/**
				 * Support style names that may come passed in prefixed by adding permutations
				 * of vendor prefixes.
				 */
				var prefixes = ['Webkit', 'ms', 'Moz', 'O'];

				// Using Object.keys here, or else the vanilla for-in loop makes IE8 go into an
				// infinite loop, because it iterates over the newly added props too.
				Object.keys(isUnitlessNumber).forEach(function(prop) {
				  prefixes.forEach(function(prefix) {
				    isUnitlessNumber[prefixKey(prefix, prop)] = isUnitlessNumber[prop];
				  });
				});

				/**
				 * Most style properties can be unset by doing .style[prop] = '' but IE8
				 * doesn't like doing that with shorthand properties so for the properties that
				 * IE8 breaks on, which are listed here, we instead unset each of the
				 * individual properties. See http://bugs.jquery.com/ticket/12385.
				 * The 4-value 'clock' properties like margin, padding, border-width seem to
				 * behave without any problems. Curiously, list-style works too without any
				 * special prodding.
				 */
				var shorthandPropertyExpansions = {
				  background: {
				    backgroundImage: true,
				    backgroundPosition: true,
				    backgroundRepeat: true,
				    backgroundColor: true
				  },
				  border: {
				    borderWidth: true,
				    borderStyle: true,
				    borderColor: true
				  },
				  borderBottom: {
				    borderBottomWidth: true,
				    borderBottomStyle: true,
				    borderBottomColor: true
				  },
				  borderLeft: {
				    borderLeftWidth: true,
				    borderLeftStyle: true,
				    borderLeftColor: true
				  },
				  borderRight: {
				    borderRightWidth: true,
				    borderRightStyle: true,
				    borderRightColor: true
				  },
				  borderTop: {
				    borderTopWidth: true,
				    borderTopStyle: true,
				    borderTopColor: true
				  },
				  font: {
				    fontStyle: true,
				    fontVariant: true,
				    fontWeight: true,
				    fontSize: true,
				    lineHeight: true,
				    fontFamily: true
				  }
				};

				var CSSProperty = {
				  isUnitlessNumber: isUnitlessNumber,
				  shorthandPropertyExpansions: shorthandPropertyExpansions
				};

				module.exports = CSSProperty;

				},{}],5:[function(_dereq_,module,exports){
				/**
				 * Copyright 2013-2014, Facebook, Inc.
				 * All rights reserved.
				 *
				 * This source code is licensed under the BSD-style license found in the
				 * LICENSE file in the root directory of this source tree. An additional grant
				 * of patent rights can be found in the PATENTS file in the same directory.
				 *
				 * @providesModule CSSPropertyOperations
				 * @typechecks static-only
				 */

				"use strict";

				var CSSProperty = _dereq_("./CSSProperty");
				var ExecutionEnvironment = _dereq_("./ExecutionEnvironment");

				var camelizeStyleName = _dereq_("./camelizeStyleName");
				var dangerousStyleValue = _dereq_("./dangerousStyleValue");
				var hyphenateStyleName = _dereq_("./hyphenateStyleName");
				var memoizeStringOnly = _dereq_("./memoizeStringOnly");
				var warning = _dereq_("./warning");

				var processStyleName = memoizeStringOnly(function(styleName) {
				  return hyphenateStyleName(styleName);
				});

				var styleFloatAccessor = 'cssFloat';
				if (ExecutionEnvironment.canUseDOM) {
				  // IE8 only supports accessing cssFloat (standard) as styleFloat
				  if (document.documentElement.style.cssFloat === undefined) {
				    styleFloatAccessor = 'styleFloat';
				  }
				}

				if ("production" !== "development") {
				  var warnedStyleNames = {};

				  var warnHyphenatedStyleName = function(name) {
				    if (warnedStyleNames.hasOwnProperty(name) && warnedStyleNames[name]) {
				      return;
				    }

				    warnedStyleNames[name] = true;
				    ("production" !== "development" ? warning(
				      false,
				      'Unsupported style property ' + name + '. Did you mean ' +
				      camelizeStyleName(name) + '?'
				    ) : null);
				  };
				}

				/**
				 * Operations for dealing with CSS properties.
				 */
				var CSSPropertyOperations = {

				  /**
				   * Serializes a mapping of style properties for use as inline styles:
				   *
				   *   > createMarkupForStyles({width: '200px', height: 0})
				   *   "width:200px;height:0;"
				   *
				   * Undefined values are ignored so that declarative programming is easier.
				   * The result should be HTML-escaped before insertion into the DOM.
				   *
				   * @param {object} styles
				   * @return {?string}
				   */
				  createMarkupForStyles: function(styles) {
				    var serialized = '';
				    for (var styleName in styles) {
				      if (!styles.hasOwnProperty(styleName)) {
				        continue;
				      }
				      if ("production" !== "development") {
				        if (styleName.indexOf('-') > -1) {
				          warnHyphenatedStyleName(styleName);
				        }
				      }
				      var styleValue = styles[styleName];
				      if (styleValue != null) {
				        serialized += processStyleName(styleName) + ':';
				        serialized += dangerousStyleValue(styleName, styleValue) + ';';
				      }
				    }
				    return serialized || null;
				  },

				  /**
				   * Sets the value for multiple styles on a node.  If a value is specified as
				   * '' (empty string), the corresponding style property will be unset.
				   *
				   * @param {DOMElement} node
				   * @param {object} styles
				   */
				  setValueForStyles: function(node, styles) {
				    var style = node.style;
				    for (var styleName in styles) {
				      if (!styles.hasOwnProperty(styleName)) {
				        continue;
				      }
				      if ("production" !== "development") {
				        if (styleName.indexOf('-') > -1) {
				          warnHyphenatedStyleName(styleName);
				        }
				      }
				      var styleValue = dangerousStyleValue(styleName, styles[styleName]);
				      if (styleName === 'float') {
				        styleName = styleFloatAccessor;
				      }
				      if (styleValue) {
				        style[styleName] = styleValue;
				      } else {
				        var expansion = CSSProperty.shorthandPropertyExpansions[styleName];
				        if (expansion) {
				          // Shorthand property that IE8 won't like unsetting, so unset each
				          // component to placate it
				          for (var individualStyleName in expansion) {
				            style[individualStyleName] = '';
				          }
				        } else {
				          style[styleName] = '';
				        }
				      }
				    }
				  }

				};

				module.exports = CSSPropertyOperations;

				},{"./CSSProperty":4,"./ExecutionEnvironment":22,"./camelizeStyleName":100,"./dangerousStyleValue":105,"./hyphenateStyleName":124,"./memoizeStringOnly":135,"./warning":145}],6:[function(_dereq_,module,exports){
				/**
				 * Copyright 2013-2014, Facebook, Inc.
				 * All rights reserved.
				 *
				 * This source code is licensed under the BSD-style license found in the
				 * LICENSE file in the root directory of this source tree. An additional grant
				 * of patent rights can be found in the PATENTS file in the same directory.
				 *
				 * @providesModule CallbackQueue
				 */

				"use strict";

				var PooledClass = _dereq_("./PooledClass");

				var assign = _dereq_("./Object.assign");
				var invariant = _dereq_("./invariant");

				/**
				 * A specialized pseudo-event module to help keep track of components waiting to
				 * be notified when their DOM representations are available for use.
				 *
				 * This implements `PooledClass`, so you should never need to instantiate this.
				 * Instead, use `CallbackQueue.getPooled()`.
				 *
				 * @class ReactMountReady
				 * @implements PooledClass
				 * @internal
				 */
				function CallbackQueue() {
				  this._callbacks = null;
				  this._contexts = null;
				}

				assign(CallbackQueue.prototype, {

				  /**
				   * Enqueues a callback to be invoked when `notifyAll` is invoked.
				   *
				   * @param {function} callback Invoked when `notifyAll` is invoked.
				   * @param {?object} context Context to call `callback` with.
				   * @internal
				   */
				  enqueue: function(callback, context) {
				    this._callbacks = this._callbacks || [];
				    this._contexts = this._contexts || [];
				    this._callbacks.push(callback);
				    this._contexts.push(context);
				  },

				  /**
				   * Invokes all enqueued callbacks and clears the queue. This is invoked after
				   * the DOM representation of a component has been created or updated.
				   *
				   * @internal
				   */
				  notifyAll: function() {
				    var callbacks = this._callbacks;
				    var contexts = this._contexts;
				    if (callbacks) {
				      ("production" !== "development" ? invariant(
				        callbacks.length === contexts.length,
				        "Mismatched list of contexts in callback queue"
				      ) : invariant(callbacks.length === contexts.length));
				      this._callbacks = null;
				      this._contexts = null;
				      for (var i = 0, l = callbacks.length; i < l; i++) {
				        callbacks[i].call(contexts[i]);
				      }
				      callbacks.length = 0;
				      contexts.length = 0;
				    }
				  },

				  /**
				   * Resets the internal queue.
				   *
				   * @internal
				   */
				  reset: function() {
				    this._callbacks = null;
				    this._contexts = null;
				  },

				  /**
				   * `PooledClass` looks for this.
				   */
				  destructor: function() {
				    this.reset();
				  }

				});

				PooledClass.addPoolingTo(CallbackQueue);

				module.exports = CallbackQueue;

				},{"./Object.assign":27,"./PooledClass":28,"./invariant":126}],7:[function(_dereq_,module,exports){
				/**
				 * Copyright 2013-2014, Facebook, Inc.
				 * All rights reserved.
				 *
				 * This source code is licensed under the BSD-style license found in the
				 * LICENSE file in the root directory of this source tree. An additional grant
				 * of patent rights can be found in the PATENTS file in the same directory.
				 *
				 * @providesModule ChangeEventPlugin
				 */

				"use strict";

				var EventConstants = _dereq_("./EventConstants");
				var EventPluginHub = _dereq_("./EventPluginHub");
				var EventPropagators = _dereq_("./EventPropagators");
				var ExecutionEnvironment = _dereq_("./ExecutionEnvironment");
				var ReactUpdates = _dereq_("./ReactUpdates");
				var SyntheticEvent = _dereq_("./SyntheticEvent");

				var isEventSupported = _dereq_("./isEventSupported");
				var isTextInputElement = _dereq_("./isTextInputElement");
				var keyOf = _dereq_("./keyOf");

				var topLevelTypes = EventConstants.topLevelTypes;

				var eventTypes = {
				  change: {
				    phasedRegistrationNames: {
				      bubbled: keyOf({onChange: null}),
				      captured: keyOf({onChangeCapture: null})
				    },
				    dependencies: [
				      topLevelTypes.topBlur,
				      topLevelTypes.topChange,
				      topLevelTypes.topClick,
				      topLevelTypes.topFocus,
				      topLevelTypes.topInput,
				      topLevelTypes.topKeyDown,
				      topLevelTypes.topKeyUp,
				      topLevelTypes.topSelectionChange
				    ]
				  }
				};

				/**
				 * For IE shims
				 */
				var activeElement = null;
				var activeElementID = null;
				var activeElementValue = null;
				var activeElementValueProp = null;

				/**
				 * SECTION: handle `change` event
				 */
				function shouldUseChangeEvent(elem) {
				  return (
				    elem.nodeName === 'SELECT' ||
				    (elem.nodeName === 'INPUT' && elem.type === 'file')
				  );
				}

				var doesChangeEventBubble = false;
				if (ExecutionEnvironment.canUseDOM) {
				  // See `handleChange` comment below
				  doesChangeEventBubble = isEventSupported('change') && (
				    !('documentMode' in document) || document.documentMode > 8
				  );
				}

				function manualDispatchChangeEvent(nativeEvent) {
				  var event = SyntheticEvent.getPooled(
				    eventTypes.change,
				    activeElementID,
				    nativeEvent
				  );
				  EventPropagators.accumulateTwoPhaseDispatches(event);

				  // If change and propertychange bubbled, we'd just bind to it like all the
				  // other events and have it go through ReactBrowserEventEmitter. Since it
				  // doesn't, we manually listen for the events and so we have to enqueue and
				  // process the abstract event manually.
				  //
				  // Batching is necessary here in order to ensure that all event handlers run
				  // before the next rerender (including event handlers attached to ancestor
				  // elements instead of directly on the input). Without this, controlled
				  // components don't work properly in conjunction with event bubbling because
				  // the component is rerendered and the value reverted before all the event
				  // handlers can run. See https://github.com/facebook/react/issues/708.
				  ReactUpdates.batchedUpdates(runEventInBatch, event);
				}

				function runEventInBatch(event) {
				  EventPluginHub.enqueueEvents(event);
				  EventPluginHub.processEventQueue();
				}

				function startWatchingForChangeEventIE8(target, targetID) {
				  activeElement = target;
				  activeElementID = targetID;
				  activeElement.attachEvent('onchange', manualDispatchChangeEvent);
				}

				function stopWatchingForChangeEventIE8() {
				  if (!activeElement) {
				    return;
				  }
				  activeElement.detachEvent('onchange', manualDispatchChangeEvent);
				  activeElement = null;
				  activeElementID = null;
				}

				function getTargetIDForChangeEvent(
				    topLevelType,
				    topLevelTarget,
				    topLevelTargetID) {
				  if (topLevelType === topLevelTypes.topChange) {
				    return topLevelTargetID;
				  }
				}
				function handleEventsForChangeEventIE8(
				    topLevelType,
				    topLevelTarget,
				    topLevelTargetID) {
				  if (topLevelType === topLevelTypes.topFocus) {
				    // stopWatching() should be a noop here but we call it just in case we
				    // missed a blur event somehow.
				    stopWatchingForChangeEventIE8();
				    startWatchingForChangeEventIE8(topLevelTarget, topLevelTargetID);
				  } else if (topLevelType === topLevelTypes.topBlur) {
				    stopWatchingForChangeEventIE8();
				  }
				}


				/**
				 * SECTION: handle `input` event
				 */
				var isInputEventSupported = false;
				if (ExecutionEnvironment.canUseDOM) {
				  // IE9 claims to support the input event but fails to trigger it when
				  // deleting text, so we ignore its input events
				  isInputEventSupported = isEventSupported('input') && (
				    !('documentMode' in document) || document.documentMode > 9
				  );
				}

				/**
				 * (For old IE.) Replacement getter/setter for the `value` property that gets
				 * set on the active element.
				 */
				var newValueProp =  {
				  get: function() {
				    return activeElementValueProp.get.call(this);
				  },
				  set: function(val) {
				    // Cast to a string so we can do equality checks.
				    activeElementValue = '' + val;
				    activeElementValueProp.set.call(this, val);
				  }
				};

				/**
				 * (For old IE.) Starts tracking propertychange events on the passed-in element
				 * and override the value property so that we can distinguish user events from
				 * value changes in JS.
				 */
				function startWatchingForValueChange(target, targetID) {
				  activeElement = target;
				  activeElementID = targetID;
				  activeElementValue = target.value;
				  activeElementValueProp = Object.getOwnPropertyDescriptor(
				    target.constructor.prototype,
				    'value'
				  );

				  Object.defineProperty(activeElement, 'value', newValueProp);
				  activeElement.attachEvent('onpropertychange', handlePropertyChange);
				}

				/**
				 * (For old IE.) Removes the event listeners from the currently-tracked element,
				 * if any exists.
				 */
				function stopWatchingForValueChange() {
				  if (!activeElement) {
				    return;
				  }

				  // delete restores the original property definition
				  delete activeElement.value;
				  activeElement.detachEvent('onpropertychange', handlePropertyChange);

				  activeElement = null;
				  activeElementID = null;
				  activeElementValue = null;
				  activeElementValueProp = null;
				}

				/**
				 * (For old IE.) Handles a propertychange event, sending a `change` event if
				 * the value of the active element has changed.
				 */
				function handlePropertyChange(nativeEvent) {
				  if (nativeEvent.propertyName !== 'value') {
				    return;
				  }
				  var value = nativeEvent.srcElement.value;
				  if (value === activeElementValue) {
				    return;
				  }
				  activeElementValue = value;

				  manualDispatchChangeEvent(nativeEvent);
				}

				/**
				 * If a `change` event should be fired, returns the target's ID.
				 */
				function getTargetIDForInputEvent(
				    topLevelType,
				    topLevelTarget,
				    topLevelTargetID) {
				  if (topLevelType === topLevelTypes.topInput) {
				    // In modern browsers (i.e., not IE8 or IE9), the input event is exactly
				    // what we want so fall through here and trigger an abstract event
				    return topLevelTargetID;
				  }
				}

				// For IE8 and IE9.
				function handleEventsForInputEventIE(
				    topLevelType,
				    topLevelTarget,
				    topLevelTargetID) {
				  if (topLevelType === topLevelTypes.topFocus) {
				    // In IE8, we can capture almost all .value changes by adding a
				    // propertychange handler and looking for events with propertyName
				    // equal to 'value'
				    // In IE9, propertychange fires for most input events but is buggy and
				    // doesn't fire when text is deleted, but conveniently, selectionchange
				    // appears to fire in all of the remaining cases so we catch those and
				    // forward the event if the value has changed
				    // In either case, we don't want to call the event handler if the value
				    // is changed from JS so we redefine a setter for `.value` that updates
				    // our activeElementValue variable, allowing us to ignore those changes
				    //
				    // stopWatching() should be a noop here but we call it just in case we
				    // missed a blur event somehow.
				    stopWatchingForValueChange();
				    startWatchingForValueChange(topLevelTarget, topLevelTargetID);
				  } else if (topLevelType === topLevelTypes.topBlur) {
				    stopWatchingForValueChange();
				  }
				}

				// For IE8 and IE9.
				function getTargetIDForInputEventIE(
				    topLevelType,
				    topLevelTarget,
				    topLevelTargetID) {
				  if (topLevelType === topLevelTypes.topSelectionChange ||
				      topLevelType === topLevelTypes.topKeyUp ||
				      topLevelType === topLevelTypes.topKeyDown) {
				    // On the selectionchange event, the target is just document which isn't
				    // helpful for us so just check activeElement instead.
				    //
				    // 99% of the time, keydown and keyup aren't necessary. IE8 fails to fire
				    // propertychange on the first input event after setting `value` from a
				    // script and fires only keydown, keypress, keyup. Catching keyup usually
				    // gets it and catching keydown lets us fire an event for the first
				    // keystroke if user does a key repeat (it'll be a little delayed: right
				    // before the second keystroke). Other input methods (e.g., paste) seem to
				    // fire selectionchange normally.
				    if (activeElement && activeElement.value !== activeElementValue) {
				      activeElementValue = activeElement.value;
				      return activeElementID;
				    }
				  }
				}


				/**
				 * SECTION: handle `click` event
				 */
				function shouldUseClickEvent(elem) {
				  // Use the `click` event to detect changes to checkbox and radio inputs.
				  // This approach works across all browsers, whereas `change` does not fire
				  // until `blur` in IE8.
				  return (
				    elem.nodeName === 'INPUT' &&
				    (elem.type === 'checkbox' || elem.type === 'radio')
				  );
				}

				function getTargetIDForClickEvent(
				    topLevelType,
				    topLevelTarget,
				    topLevelTargetID) {
				  if (topLevelType === topLevelTypes.topClick) {
				    return topLevelTargetID;
				  }
				}

				/**
				 * This plugin creates an `onChange` event that normalizes change events
				 * across form elements. This event fires at a time when it's possible to
				 * change the element's value without seeing a flicker.
				 *
				 * Supported elements are:
				 * - input (see `isTextInputElement`)
				 * - textarea
				 * - select
				 */
				var ChangeEventPlugin = {

				  eventTypes: eventTypes,

				  /**
				   * @param {string} topLevelType Record from `EventConstants`.
				   * @param {DOMEventTarget} topLevelTarget The listening component root node.
				   * @param {string} topLevelTargetID ID of `topLevelTarget`.
				   * @param {object} nativeEvent Native browser event.
				   * @return {*} An accumulation of synthetic events.
				   * @see {EventPluginHub.extractEvents}
				   */
				  extractEvents: function(
				      topLevelType,
				      topLevelTarget,
				      topLevelTargetID,
				      nativeEvent) {

				    var getTargetIDFunc, handleEventFunc;
				    if (shouldUseChangeEvent(topLevelTarget)) {
				      if (doesChangeEventBubble) {
				        getTargetIDFunc = getTargetIDForChangeEvent;
				      } else {
				        handleEventFunc = handleEventsForChangeEventIE8;
				      }
				    } else if (isTextInputElement(topLevelTarget)) {
				      if (isInputEventSupported) {
				        getTargetIDFunc = getTargetIDForInputEvent;
				      } else {
				        getTargetIDFunc = getTargetIDForInputEventIE;
				        handleEventFunc = handleEventsForInputEventIE;
				      }
				    } else if (shouldUseClickEvent(topLevelTarget)) {
				      getTargetIDFunc = getTargetIDForClickEvent;
				    }

				    if (getTargetIDFunc) {
				      var targetID = getTargetIDFunc(
				        topLevelType,
				        topLevelTarget,
				        topLevelTargetID
				      );
				      if (targetID) {
				        var event = SyntheticEvent.getPooled(
				          eventTypes.change,
				          targetID,
				          nativeEvent
				        );
				        EventPropagators.accumulateTwoPhaseDispatches(event);
				        return event;
				      }
				    }

				    if (handleEventFunc) {
				      handleEventFunc(
				        topLevelType,
				        topLevelTarget,
				        topLevelTargetID
				      );
				    }
				  }

				};

				module.exports = ChangeEventPlugin;

				},{"./EventConstants":16,"./EventPluginHub":18,"./EventPropagators":21,"./ExecutionEnvironment":22,"./ReactUpdates":79,"./SyntheticEvent":87,"./isEventSupported":127,"./isTextInputElement":129,"./keyOf":133}],8:[function(_dereq_,module,exports){
				/**
				 * Copyright 2013-2014, Facebook, Inc.
				 * All rights reserved.
				 *
				 * This source code is licensed under the BSD-style license found in the
				 * LICENSE file in the root directory of this source tree. An additional grant
				 * of patent rights can be found in the PATENTS file in the same directory.
				 *
				 * @providesModule ClientReactRootIndex
				 * @typechecks
				 */

				"use strict";

				var nextReactRootIndex = 0;

				var ClientReactRootIndex = {
				  createReactRootIndex: function() {
				    return nextReactRootIndex++;
				  }
				};

				module.exports = ClientReactRootIndex;

				},{}],9:[function(_dereq_,module,exports){
				/**
				 * Copyright 2013-2014, Facebook, Inc.
				 * All rights reserved.
				 *
				 * This source code is licensed under the BSD-style license found in the
				 * LICENSE file in the root directory of this source tree. An additional grant
				 * of patent rights can be found in the PATENTS file in the same directory.
				 *
				 * @providesModule CompositionEventPlugin
				 * @typechecks static-only
				 */

				"use strict";

				var EventConstants = _dereq_("./EventConstants");
				var EventPropagators = _dereq_("./EventPropagators");
				var ExecutionEnvironment = _dereq_("./ExecutionEnvironment");
				var ReactInputSelection = _dereq_("./ReactInputSelection");
				var SyntheticCompositionEvent = _dereq_("./SyntheticCompositionEvent");

				var getTextContentAccessor = _dereq_("./getTextContentAccessor");
				var keyOf = _dereq_("./keyOf");

				var END_KEYCODES = [9, 13, 27, 32]; // Tab, Return, Esc, Space
				var START_KEYCODE = 229;

				var useCompositionEvent = (
				  ExecutionEnvironment.canUseDOM &&
				  'CompositionEvent' in window
				);

				// In IE9+, we have access to composition events, but the data supplied
				// by the native compositionend event may be incorrect. In Korean, for example,
				// the compositionend event contains only one character regardless of
				// how many characters have been composed since compositionstart.
				// We therefore use the fallback data while still using the native
				// events as triggers.
				var useFallbackData = (
				  !useCompositionEvent ||
				  (
				    'documentMode' in document &&
				    document.documentMode > 8 &&
				    document.documentMode <= 11
				  )
				);

				var topLevelTypes = EventConstants.topLevelTypes;
				var currentComposition = null;

				// Events and their corresponding property names.
				var eventTypes = {
				  compositionEnd: {
				    phasedRegistrationNames: {
				      bubbled: keyOf({onCompositionEnd: null}),
				      captured: keyOf({onCompositionEndCapture: null})
				    },
				    dependencies: [
				      topLevelTypes.topBlur,
				      topLevelTypes.topCompositionEnd,
				      topLevelTypes.topKeyDown,
				      topLevelTypes.topKeyPress,
				      topLevelTypes.topKeyUp,
				      topLevelTypes.topMouseDown
				    ]
				  },
				  compositionStart: {
				    phasedRegistrationNames: {
				      bubbled: keyOf({onCompositionStart: null}),
				      captured: keyOf({onCompositionStartCapture: null})
				    },
				    dependencies: [
				      topLevelTypes.topBlur,
				      topLevelTypes.topCompositionStart,
				      topLevelTypes.topKeyDown,
				      topLevelTypes.topKeyPress,
				      topLevelTypes.topKeyUp,
				      topLevelTypes.topMouseDown
				    ]
				  },
				  compositionUpdate: {
				    phasedRegistrationNames: {
				      bubbled: keyOf({onCompositionUpdate: null}),
				      captured: keyOf({onCompositionUpdateCapture: null})
				    },
				    dependencies: [
				      topLevelTypes.topBlur,
				      topLevelTypes.topCompositionUpdate,
				      topLevelTypes.topKeyDown,
				      topLevelTypes.topKeyPress,
				      topLevelTypes.topKeyUp,
				      topLevelTypes.topMouseDown
				    ]
				  }
				};

				/**
				 * Translate native top level events into event types.
				 *
				 * @param {string} topLevelType
				 * @return {object}
				 */
				function getCompositionEventType(topLevelType) {
				  switch (topLevelType) {
				    case topLevelTypes.topCompositionStart:
				      return eventTypes.compositionStart;
				    case topLevelTypes.topCompositionEnd:
				      return eventTypes.compositionEnd;
				    case topLevelTypes.topCompositionUpdate:
				      return eventTypes.compositionUpdate;
				  }
				}

				/**
				 * Does our fallback best-guess model think this event signifies that
				 * composition has begun?
				 *
				 * @param {string} topLevelType
				 * @param {object} nativeEvent
				 * @return {boolean}
				 */
				function isFallbackStart(topLevelType, nativeEvent) {
				  return (
				    topLevelType === topLevelTypes.topKeyDown &&
				    nativeEvent.keyCode === START_KEYCODE
				  );
				}

				/**
				 * Does our fallback mode think that this event is the end of composition?
				 *
				 * @param {string} topLevelType
				 * @param {object} nativeEvent
				 * @return {boolean}
				 */
				function isFallbackEnd(topLevelType, nativeEvent) {
				  switch (topLevelType) {
				    case topLevelTypes.topKeyUp:
				      // Command keys insert or clear IME input.
				      return (END_KEYCODES.indexOf(nativeEvent.keyCode) !== -1);
				    case topLevelTypes.topKeyDown:
				      // Expect IME keyCode on each keydown. If we get any other
				      // code we must have exited earlier.
				      return (nativeEvent.keyCode !== START_KEYCODE);
				    case topLevelTypes.topKeyPress:
				    case topLevelTypes.topMouseDown:
				    case topLevelTypes.topBlur:
				      // Events are not possible without cancelling IME.
				      return true;
				    default:
				      return false;
				  }
				}

				/**
				 * Helper class stores information about selection and document state
				 * so we can figure out what changed at a later date.
				 *
				 * @param {DOMEventTarget} root
				 */
				function FallbackCompositionState(root) {
				  this.root = root;
				  this.startSelection = ReactInputSelection.getSelection(root);
				  this.startValue = this.getText();
				}

				/**
				 * Get current text of input.
				 *
				 * @return {string}
				 */
				FallbackCompositionState.prototype.getText = function() {
				  return this.root.value || this.root[getTextContentAccessor()];
				};

				/**
				 * Text that has changed since the start of composition.
				 *
				 * @return {string}
				 */
				FallbackCompositionState.prototype.getData = function() {
				  var endValue = this.getText();
				  var prefixLength = this.startSelection.start;
				  var suffixLength = this.startValue.length - this.startSelection.end;

				  return endValue.substr(
				    prefixLength,
				    endValue.length - suffixLength - prefixLength
				  );
				};

				/**
				 * This plugin creates `onCompositionStart`, `onCompositionUpdate` and
				 * `onCompositionEnd` events on inputs, textareas and contentEditable
				 * nodes.
				 */
				var CompositionEventPlugin = {

				  eventTypes: eventTypes,

				  /**
				   * @param {string} topLevelType Record from `EventConstants`.
				   * @param {DOMEventTarget} topLevelTarget The listening component root node.
				   * @param {string} topLevelTargetID ID of `topLevelTarget`.
				   * @param {object} nativeEvent Native browser event.
				   * @return {*} An accumulation of synthetic events.
				   * @see {EventPluginHub.extractEvents}
				   */
				  extractEvents: function(
				      topLevelType,
				      topLevelTarget,
				      topLevelTargetID,
				      nativeEvent) {

				    var eventType;
				    var data;

				    if (useCompositionEvent) {
				      eventType = getCompositionEventType(topLevelType);
				    } else if (!currentComposition) {
				      if (isFallbackStart(topLevelType, nativeEvent)) {
				        eventType = eventTypes.compositionStart;
				      }
				    } else if (isFallbackEnd(topLevelType, nativeEvent)) {
				      eventType = eventTypes.compositionEnd;
				    }

				    if (useFallbackData) {
				      // The current composition is stored statically and must not be
				      // overwritten while composition continues.
				      if (!currentComposition && eventType === eventTypes.compositionStart) {
				        currentComposition = new FallbackCompositionState(topLevelTarget);
				      } else if (eventType === eventTypes.compositionEnd) {
				        if (currentComposition) {
				          data = currentComposition.getData();
				          currentComposition = null;
				        }
				      }
				    }

				    if (eventType) {
				      var event = SyntheticCompositionEvent.getPooled(
				        eventType,
				        topLevelTargetID,
				        nativeEvent
				      );
				      if (data) {
				        // Inject data generated from fallback path into the synthetic event.
				        // This matches the property of native CompositionEventInterface.
				        event.data = data;
				      }
				      EventPropagators.accumulateTwoPhaseDispatches(event);
				      return event;
				    }
				  }
				};

				module.exports = CompositionEventPlugin;

				},{"./EventConstants":16,"./EventPropagators":21,"./ExecutionEnvironment":22,"./ReactInputSelection":59,"./SyntheticCompositionEvent":85,"./getTextContentAccessor":121,"./keyOf":133}],10:[function(_dereq_,module,exports){
				/**
				 * Copyright 2013-2014, Facebook, Inc.
				 * All rights reserved.
				 *
				 * This source code is licensed under the BSD-style license found in the
				 * LICENSE file in the root directory of this source tree. An additional grant
				 * of patent rights can be found in the PATENTS file in the same directory.
				 *
				 * @providesModule DOMChildrenOperations
				 * @typechecks static-only
				 */

				"use strict";

				var Danger = _dereq_("./Danger");
				var ReactMultiChildUpdateTypes = _dereq_("./ReactMultiChildUpdateTypes");

				var getTextContentAccessor = _dereq_("./getTextContentAccessor");
				var invariant = _dereq_("./invariant");

				/**
				 * The DOM property to use when setting text content.
				 *
				 * @type {string}
				 * @private
				 */
				var textContentAccessor = getTextContentAccessor();

				/**
				 * Inserts `childNode` as a child of `parentNode` at the `index`.
				 *
				 * @param {DOMElement} parentNode Parent node in which to insert.
				 * @param {DOMElement} childNode Child node to insert.
				 * @param {number} index Index at which to insert the child.
				 * @internal
				 */
				function insertChildAt(parentNode, childNode, index) {
				  // By exploiting arrays returning `undefined` for an undefined index, we can
				  // rely exclusively on `insertBefore(node, null)` instead of also using
				  // `appendChild(node)`. However, using `undefined` is not allowed by all
				  // browsers so we must replace it with `null`.
				  parentNode.insertBefore(
				    childNode,
				    parentNode.childNodes[index] || null
				  );
				}

				var updateTextContent;
				if (textContentAccessor === 'textContent') {
				  /**
				   * Sets the text content of `node` to `text`.
				   *
				   * @param {DOMElement} node Node to change
				   * @param {string} text New text content
				   */
				  updateTextContent = function(node, text) {
				    node.textContent = text;
				  };
				} else {
				  /**
				   * Sets the text content of `node` to `text`.
				   *
				   * @param {DOMElement} node Node to change
				   * @param {string} text New text content
				   */
				  updateTextContent = function(node, text) {
				    // In order to preserve newlines correctly, we can't use .innerText to set
				    // the contents (see #1080), so we empty the element then append a text node
				    while (node.firstChild) {
				      node.removeChild(node.firstChild);
				    }
				    if (text) {
				      var doc = node.ownerDocument || document;
				      node.appendChild(doc.createTextNode(text));
				    }
				  };
				}

				/**
				 * Operations for updating with DOM children.
				 */
				var DOMChildrenOperations = {

				  dangerouslyReplaceNodeWithMarkup: Danger.dangerouslyReplaceNodeWithMarkup,

				  updateTextContent: updateTextContent,

				  /**
				   * Updates a component's children by processing a series of updates. The
				   * update configurations are each expected to have a `parentNode` property.
				   *
				   * @param {array<object>} updates List of update configurations.
				   * @param {array<string>} markupList List of markup strings.
				   * @internal
				   */
				  processUpdates: function(updates, markupList) {
				    var update;
				    // Mapping from parent IDs to initial child orderings.
				    var initialChildren = null;
				    // List of children that will be moved or removed.
				    var updatedChildren = null;

				    for (var i = 0; update = updates[i]; i++) {
				      if (update.type === ReactMultiChildUpdateTypes.MOVE_EXISTING ||
				          update.type === ReactMultiChildUpdateTypes.REMOVE_NODE) {
				        var updatedIndex = update.fromIndex;
				        var updatedChild = update.parentNode.childNodes[updatedIndex];
				        var parentID = update.parentID;

				        ("production" !== "development" ? invariant(
				          updatedChild,
				          'processUpdates(): Unable to find child %s of element. This ' +
				          'probably means the DOM was unexpectedly mutated (e.g., by the ' +
				          'browser), usually due to forgetting a <tbody> when using tables, ' +
				          'nesting tags like <form>, <p>, or <a>, or using non-SVG elements '+
				          'in an <svg> parent. Try inspecting the child nodes of the element ' +
				          'with React ID `%s`.',
				          updatedIndex,
				          parentID
				        ) : invariant(updatedChild));

				        initialChildren = initialChildren || {};
				        initialChildren[parentID] = initialChildren[parentID] || [];
				        initialChildren[parentID][updatedIndex] = updatedChild;

				        updatedChildren = updatedChildren || [];
				        updatedChildren.push(updatedChild);
				      }
				    }

				    var renderedMarkup = Danger.dangerouslyRenderMarkup(markupList);

				    // Remove updated children first so that `toIndex` is consistent.
				    if (updatedChildren) {
				      for (var j = 0; j < updatedChildren.length; j++) {
				        updatedChildren[j].parentNode.removeChild(updatedChildren[j]);
				      }
				    }

				    for (var k = 0; update = updates[k]; k++) {
				      switch (update.type) {
				        case ReactMultiChildUpdateTypes.INSERT_MARKUP:
				          insertChildAt(
				            update.parentNode,
				            renderedMarkup[update.markupIndex],
				            update.toIndex
				          );
				          break;
				        case ReactMultiChildUpdateTypes.MOVE_EXISTING:
				          insertChildAt(
				            update.parentNode,
				            initialChildren[update.parentID][update.fromIndex],
				            update.toIndex
				          );
				          break;
				        case ReactMultiChildUpdateTypes.TEXT_CONTENT:
				          updateTextContent(
				            update.parentNode,
				            update.textContent
				          );
				          break;
				        case ReactMultiChildUpdateTypes.REMOVE_NODE:
				          // Already removed by the for-loop above.
				          break;
				      }
				    }
				  }

				};

				module.exports = DOMChildrenOperations;

				},{"./Danger":13,"./ReactMultiChildUpdateTypes":65,"./getTextContentAccessor":121,"./invariant":126}],11:[function(_dereq_,module,exports){
				/**
				 * Copyright 2013-2014, Facebook, Inc.
				 * All rights reserved.
				 *
				 * This source code is licensed under the BSD-style license found in the
				 * LICENSE file in the root directory of this source tree. An additional grant
				 * of patent rights can be found in the PATENTS file in the same directory.
				 *
				 * @providesModule DOMProperty
				 * @typechecks static-only
				 */

				/*jslint bitwise: true */

				"use strict";

				var invariant = _dereq_("./invariant");

				function checkMask(value, bitmask) {
				  return (value & bitmask) === bitmask;
				}

				var DOMPropertyInjection = {
				  /**
				   * Mapping from normalized, camelcased property names to a configuration that
				   * specifies how the associated DOM property should be accessed or rendered.
				   */
				  MUST_USE_ATTRIBUTE: 0x1,
				  MUST_USE_PROPERTY: 0x2,
				  HAS_SIDE_EFFECTS: 0x4,
				  HAS_BOOLEAN_VALUE: 0x8,
				  HAS_NUMERIC_VALUE: 0x10,
				  HAS_POSITIVE_NUMERIC_VALUE: 0x20 | 0x10,
				  HAS_OVERLOADED_BOOLEAN_VALUE: 0x40,

				  /**
				   * Inject some specialized knowledge about the DOM. This takes a config object
				   * with the following properties:
				   *
				   * isCustomAttribute: function that given an attribute name will return true
				   * if it can be inserted into the DOM verbatim. Useful for data-* or aria-*
				   * attributes where it's impossible to enumerate all of the possible
				   * attribute names,
				   *
				   * Properties: object mapping DOM property name to one of the
				   * DOMPropertyInjection constants or null. If your attribute isn't in here,
				   * it won't get written to the DOM.
				   *
				   * DOMAttributeNames: object mapping React attribute name to the DOM
				   * attribute name. Attribute names not specified use the **lowercase**
				   * normalized name.
				   *
				   * DOMPropertyNames: similar to DOMAttributeNames but for DOM properties.
				   * Property names not specified use the normalized name.
				   *
				   * DOMMutationMethods: Properties that require special mutation methods. If
				   * `value` is undefined, the mutation method should unset the property.
				   *
				   * @param {object} domPropertyConfig the config as described above.
				   */
				  injectDOMPropertyConfig: function(domPropertyConfig) {
				    var Properties = domPropertyConfig.Properties || {};
				    var DOMAttributeNames = domPropertyConfig.DOMAttributeNames || {};
				    var DOMPropertyNames = domPropertyConfig.DOMPropertyNames || {};
				    var DOMMutationMethods = domPropertyConfig.DOMMutationMethods || {};

				    if (domPropertyConfig.isCustomAttribute) {
				      DOMProperty._isCustomAttributeFunctions.push(
				        domPropertyConfig.isCustomAttribute
				      );
				    }

				    for (var propName in Properties) {
				      ("production" !== "development" ? invariant(
				        !DOMProperty.isStandardName.hasOwnProperty(propName),
				        'injectDOMPropertyConfig(...): You\'re trying to inject DOM property ' +
				        '\'%s\' which has already been injected. You may be accidentally ' +
				        'injecting the same DOM property config twice, or you may be ' +
				        'injecting two configs that have conflicting property names.',
				        propName
				      ) : invariant(!DOMProperty.isStandardName.hasOwnProperty(propName)));

				      DOMProperty.isStandardName[propName] = true;

				      var lowerCased = propName.toLowerCase();
				      DOMProperty.getPossibleStandardName[lowerCased] = propName;

				      if (DOMAttributeNames.hasOwnProperty(propName)) {
				        var attributeName = DOMAttributeNames[propName];
				        DOMProperty.getPossibleStandardName[attributeName] = propName;
				        DOMProperty.getAttributeName[propName] = attributeName;
				      } else {
				        DOMProperty.getAttributeName[propName] = lowerCased;
				      }

				      DOMProperty.getPropertyName[propName] =
				        DOMPropertyNames.hasOwnProperty(propName) ?
				          DOMPropertyNames[propName] :
				          propName;

				      if (DOMMutationMethods.hasOwnProperty(propName)) {
				        DOMProperty.getMutationMethod[propName] = DOMMutationMethods[propName];
				      } else {
				        DOMProperty.getMutationMethod[propName] = null;
				      }

				      var propConfig = Properties[propName];
				      DOMProperty.mustUseAttribute[propName] =
				        checkMask(propConfig, DOMPropertyInjection.MUST_USE_ATTRIBUTE);
				      DOMProperty.mustUseProperty[propName] =
				        checkMask(propConfig, DOMPropertyInjection.MUST_USE_PROPERTY);
				      DOMProperty.hasSideEffects[propName] =
				        checkMask(propConfig, DOMPropertyInjection.HAS_SIDE_EFFECTS);
				      DOMProperty.hasBooleanValue[propName] =
				        checkMask(propConfig, DOMPropertyInjection.HAS_BOOLEAN_VALUE);
				      DOMProperty.hasNumericValue[propName] =
				        checkMask(propConfig, DOMPropertyInjection.HAS_NUMERIC_VALUE);
				      DOMProperty.hasPositiveNumericValue[propName] =
				        checkMask(propConfig, DOMPropertyInjection.HAS_POSITIVE_NUMERIC_VALUE);
				      DOMProperty.hasOverloadedBooleanValue[propName] =
				        checkMask(propConfig, DOMPropertyInjection.HAS_OVERLOADED_BOOLEAN_VALUE);

				      ("production" !== "development" ? invariant(
				        !DOMProperty.mustUseAttribute[propName] ||
				          !DOMProperty.mustUseProperty[propName],
				        'DOMProperty: Cannot require using both attribute and property: %s',
				        propName
				      ) : invariant(!DOMProperty.mustUseAttribute[propName] ||
				        !DOMProperty.mustUseProperty[propName]));
				      ("production" !== "development" ? invariant(
				        DOMProperty.mustUseProperty[propName] ||
				          !DOMProperty.hasSideEffects[propName],
				        'DOMProperty: Properties that have side effects must use property: %s',
				        propName
				      ) : invariant(DOMProperty.mustUseProperty[propName] ||
				        !DOMProperty.hasSideEffects[propName]));
				      ("production" !== "development" ? invariant(
				        !!DOMProperty.hasBooleanValue[propName] +
				          !!DOMProperty.hasNumericValue[propName] +
				          !!DOMProperty.hasOverloadedBooleanValue[propName] <= 1,
				        'DOMProperty: Value can be one of boolean, overloaded boolean, or ' +
				        'numeric value, but not a combination: %s',
				        propName
				      ) : invariant(!!DOMProperty.hasBooleanValue[propName] +
				        !!DOMProperty.hasNumericValue[propName] +
				        !!DOMProperty.hasOverloadedBooleanValue[propName] <= 1));
				    }
				  }
				};
				var defaultValueCache = {};

				/**
				 * DOMProperty exports lookup objects that can be used like functions:
				 *
				 *   > DOMProperty.isValid['id']
				 *   true
				 *   > DOMProperty.isValid['foobar']
				 *   undefined
				 *
				 * Although this may be confusing, it performs better in general.
				 *
				 * @see http://jsperf.com/key-exists
				 * @see http://jsperf.com/key-missing
				 */
				var DOMProperty = {

				  ID_ATTRIBUTE_NAME: 'data-reactid',

				  /**
				   * Checks whether a property name is a standard property.
				   * @type {Object}
				   */
				  isStandardName: {},

				  /**
				   * Mapping from lowercase property names to the properly cased version, used
				   * to warn in the case of missing properties.
				   * @type {Object}
				   */
				  getPossibleStandardName: {},

				  /**
				   * Mapping from normalized names to attribute names that differ. Attribute
				   * names are used when rendering markup or with `*Attribute()`.
				   * @type {Object}
				   */
				  getAttributeName: {},

				  /**
				   * Mapping from normalized names to properties on DOM node instances.
				   * (This includes properties that mutate due to external factors.)
				   * @type {Object}
				   */
				  getPropertyName: {},

				  /**
				   * Mapping from normalized names to mutation methods. This will only exist if
				   * mutation cannot be set simply by the property or `setAttribute()`.
				   * @type {Object}
				   */
				  getMutationMethod: {},

				  /**
				   * Whether the property must be accessed and mutated as an object property.
				   * @type {Object}
				   */
				  mustUseAttribute: {},

				  /**
				   * Whether the property must be accessed and mutated using `*Attribute()`.
				   * (This includes anything that fails `<propName> in <element>`.)
				   * @type {Object}
				   */
				  mustUseProperty: {},

				  /**
				   * Whether or not setting a value causes side effects such as triggering
				   * resources to be loaded or text selection changes. We must ensure that
				   * the value is only set if it has changed.
				   * @type {Object}
				   */
				  hasSideEffects: {},

				  /**
				   * Whether the property should be removed when set to a falsey value.
				   * @type {Object}
				   */
				  hasBooleanValue: {},

				  /**
				   * Whether the property must be numeric or parse as a
				   * numeric and should be removed when set to a falsey value.
				   * @type {Object}
				   */
				  hasNumericValue: {},

				  /**
				   * Whether the property must be positive numeric or parse as a positive
				   * numeric and should be removed when set to a falsey value.
				   * @type {Object}
				   */
				  hasPositiveNumericValue: {},

				  /**
				   * Whether the property can be used as a flag as well as with a value. Removed
				   * when strictly equal to false; present without a value when strictly equal
				   * to true; present with a value otherwise.
				   * @type {Object}
				   */
				  hasOverloadedBooleanValue: {},

				  /**
				   * All of the isCustomAttribute() functions that have been injected.
				   */
				  _isCustomAttributeFunctions: [],

				  /**
				   * Checks whether a property name is a custom attribute.
				   * @method
				   */
				  isCustomAttribute: function(attributeName) {
				    for (var i = 0; i < DOMProperty._isCustomAttributeFunctions.length; i++) {
				      var isCustomAttributeFn = DOMProperty._isCustomAttributeFunctions[i];
				      if (isCustomAttributeFn(attributeName)) {
				        return true;
				      }
				    }
				    return false;
				  },

				  /**
				   * Returns the default property value for a DOM property (i.e., not an
				   * attribute). Most default values are '' or false, but not all. Worse yet,
				   * some (in particular, `type`) vary depending on the type of element.
				   *
				   * TODO: Is it better to grab all the possible properties when creating an
				   * element to avoid having to create the same element twice?
				   */
				  getDefaultValueForProperty: function(nodeName, prop) {
				    var nodeDefaults = defaultValueCache[nodeName];
				    var testElement;
				    if (!nodeDefaults) {
				      defaultValueCache[nodeName] = nodeDefaults = {};
				    }
				    if (!(prop in nodeDefaults)) {
				      testElement = document.createElement(nodeName);
				      nodeDefaults[prop] = testElement[prop];
				    }
				    return nodeDefaults[prop];
				  },

				  injection: DOMPropertyInjection
				};

				module.exports = DOMProperty;

				},{"./invariant":126}],12:[function(_dereq_,module,exports){
				/**
				 * Copyright 2013-2014, Facebook, Inc.
				 * All rights reserved.
				 *
				 * This source code is licensed under the BSD-style license found in the
				 * LICENSE file in the root directory of this source tree. An additional grant
				 * of patent rights can be found in the PATENTS file in the same directory.
				 *
				 * @providesModule DOMPropertyOperations
				 * @typechecks static-only
				 */

				"use strict";

				var DOMProperty = _dereq_("./DOMProperty");

				var escapeTextForBrowser = _dereq_("./escapeTextForBrowser");
				var memoizeStringOnly = _dereq_("./memoizeStringOnly");
				var warning = _dereq_("./warning");

				function shouldIgnoreValue(name, value) {
				  return value == null ||
				    (DOMProperty.hasBooleanValue[name] && !value) ||
				    (DOMProperty.hasNumericValue[name] && isNaN(value)) ||
				    (DOMProperty.hasPositiveNumericValue[name] && (value < 1)) ||
				    (DOMProperty.hasOverloadedBooleanValue[name] && value === false);
				}

				var processAttributeNameAndPrefix = memoizeStringOnly(function(name) {
				  return escapeTextForBrowser(name) + '="';
				});

				if ("production" !== "development") {
				  var reactProps = {
				    children: true,
				    dangerouslySetInnerHTML: true,
				    key: true,
				    ref: true
				  };
				  var warnedProperties = {};

				  var warnUnknownProperty = function(name) {
				    if (reactProps.hasOwnProperty(name) && reactProps[name] ||
				        warnedProperties.hasOwnProperty(name) && warnedProperties[name]) {
				      return;
				    }

				    warnedProperties[name] = true;
				    var lowerCasedName = name.toLowerCase();

				    // data-* attributes should be lowercase; suggest the lowercase version
				    var standardName = (
				      DOMProperty.isCustomAttribute(lowerCasedName) ?
				        lowerCasedName :
				      DOMProperty.getPossibleStandardName.hasOwnProperty(lowerCasedName) ?
				        DOMProperty.getPossibleStandardName[lowerCasedName] :
				        null
				    );

				    // For now, only warn when we have a suggested correction. This prevents
				    // logging too much when using transferPropsTo.
				    ("production" !== "development" ? warning(
				      standardName == null,
				      'Unknown DOM property ' + name + '. Did you mean ' + standardName + '?'
				    ) : null);

				  };
				}

				/**
				 * Operations for dealing with DOM properties.
				 */
				var DOMPropertyOperations = {

				  /**
				   * Creates markup for the ID property.
				   *
				   * @param {string} id Unescaped ID.
				   * @return {string} Markup string.
				   */
				  createMarkupForID: function(id) {
				    return processAttributeNameAndPrefix(DOMProperty.ID_ATTRIBUTE_NAME) +
				      escapeTextForBrowser(id) + '"';
				  },

				  /**
				   * Creates markup for a property.
				   *
				   * @param {string} name
				   * @param {*} value
				   * @return {?string} Markup string, or null if the property was invalid.
				   */
				  createMarkupForProperty: function(name, value) {
				    if (DOMProperty.isStandardName.hasOwnProperty(name) &&
				        DOMProperty.isStandardName[name]) {
				      if (shouldIgnoreValue(name, value)) {
				        return '';
				      }
				      var attributeName = DOMProperty.getAttributeName[name];
				      if (DOMProperty.hasBooleanValue[name] ||
				          (DOMProperty.hasOverloadedBooleanValue[name] && value === true)) {
				        return escapeTextForBrowser(attributeName);
				      }
				      return processAttributeNameAndPrefix(attributeName) +
				        escapeTextForBrowser(value) + '"';
				    } else if (DOMProperty.isCustomAttribute(name)) {
				      if (value == null) {
				        return '';
				      }
				      return processAttributeNameAndPrefix(name) +
				        escapeTextForBrowser(value) + '"';
				    } else if ("production" !== "development") {
				      warnUnknownProperty(name);
				    }
				    return null;
				  },

				  /**
				   * Sets the value for a property on a node.
				   *
				   * @param {DOMElement} node
				   * @param {string} name
				   * @param {*} value
				   */
				  setValueForProperty: function(node, name, value) {
				    if (DOMProperty.isStandardName.hasOwnProperty(name) &&
				        DOMProperty.isStandardName[name]) {
				      var mutationMethod = DOMProperty.getMutationMethod[name];
				      if (mutationMethod) {
				        mutationMethod(node, value);
				      } else if (shouldIgnoreValue(name, value)) {
				        this.deleteValueForProperty(node, name);
				      } else if (DOMProperty.mustUseAttribute[name]) {
				        // `setAttribute` with objects becomes only `[object]` in IE8/9,
				        // ('' + value) makes it output the correct toString()-value.
				        node.setAttribute(DOMProperty.getAttributeName[name], '' + value);
				      } else {
				        var propName = DOMProperty.getPropertyName[name];
				        // Must explicitly cast values for HAS_SIDE_EFFECTS-properties to the
				        // property type before comparing; only `value` does and is string.
				        if (!DOMProperty.hasSideEffects[name] ||
				            ('' + node[propName]) !== ('' + value)) {
				          // Contrary to `setAttribute`, object properties are properly
				          // `toString`ed by IE8/9.
				          node[propName] = value;
				        }
				      }
				    } else if (DOMProperty.isCustomAttribute(name)) {
				      if (value == null) {
				        node.removeAttribute(name);
				      } else {
				        node.setAttribute(name, '' + value);
				      }
				    } else if ("production" !== "development") {
				      warnUnknownProperty(name);
				    }
				  },

				  /**
				   * Deletes the value for a property on a node.
				   *
				   * @param {DOMElement} node
				   * @param {string} name
				   */
				  deleteValueForProperty: function(node, name) {
				    if (DOMProperty.isStandardName.hasOwnProperty(name) &&
				        DOMProperty.isStandardName[name]) {
				      var mutationMethod = DOMProperty.getMutationMethod[name];
				      if (mutationMethod) {
				        mutationMethod(node, undefined);
				      } else if (DOMProperty.mustUseAttribute[name]) {
				        node.removeAttribute(DOMProperty.getAttributeName[name]);
				      } else {
				        var propName = DOMProperty.getPropertyName[name];
				        var defaultValue = DOMProperty.getDefaultValueForProperty(
				          node.nodeName,
				          propName
				        );
				        if (!DOMProperty.hasSideEffects[name] ||
				            ('' + node[propName]) !== defaultValue) {
				          node[propName] = defaultValue;
				        }
				      }
				    } else if (DOMProperty.isCustomAttribute(name)) {
				      node.removeAttribute(name);
				    } else if ("production" !== "development") {
				      warnUnknownProperty(name);
				    }
				  }

				};

				module.exports = DOMPropertyOperations;

				},{"./DOMProperty":11,"./escapeTextForBrowser":109,"./memoizeStringOnly":135,"./warning":145}],13:[function(_dereq_,module,exports){
				/**
				 * Copyright 2013-2014, Facebook, Inc.
				 * All rights reserved.
				 *
				 * This source code is licensed under the BSD-style license found in the
				 * LICENSE file in the root directory of this source tree. An additional grant
				 * of patent rights can be found in the PATENTS file in the same directory.
				 *
				 * @providesModule Danger
				 * @typechecks static-only
				 */

				/*jslint evil: true, sub: true */

				"use strict";

				var ExecutionEnvironment = _dereq_("./ExecutionEnvironment");

				var createNodesFromMarkup = _dereq_("./createNodesFromMarkup");
				var emptyFunction = _dereq_("./emptyFunction");
				var getMarkupWrap = _dereq_("./getMarkupWrap");
				var invariant = _dereq_("./invariant");

				var OPEN_TAG_NAME_EXP = /^(<[^ \/>]+)/;
				var RESULT_INDEX_ATTR = 'data-danger-index';

				/**
				 * Extracts the `nodeName` from a string of markup.
				 *
				 * NOTE: Extracting the `nodeName` does not require a regular expression match
				 * because we make assumptions about React-generated markup (i.e. there are no
				 * spaces surrounding the opening tag and there is at least one attribute).
				 *
				 * @param {string} markup String of markup.
				 * @return {string} Node name of the supplied markup.
				 * @see http://jsperf.com/extract-nodename
				 */
				function getNodeName(markup) {
				  return markup.substring(1, markup.indexOf(' '));
				}

				var Danger = {

				  /**
				   * Renders markup into an array of nodes. The markup is expected to render
				   * into a list of root nodes. Also, the length of `resultList` and
				   * `markupList` should be the same.
				   *
				   * @param {array<string>} markupList List of markup strings to render.
				   * @return {array<DOMElement>} List of rendered nodes.
				   * @internal
				   */
				  dangerouslyRenderMarkup: function(markupList) {
				    ("production" !== "development" ? invariant(
				      ExecutionEnvironment.canUseDOM,
				      'dangerouslyRenderMarkup(...): Cannot render markup in a worker ' +
				      'thread. Make sure `window` and `document` are available globally ' +
				      'before requiring React when unit testing or use ' +
				      'React.renderToString for server rendering.'
				    ) : invariant(ExecutionEnvironment.canUseDOM));
				    var nodeName;
				    var markupByNodeName = {};
				    // Group markup by `nodeName` if a wrap is necessary, else by '*'.
				    for (var i = 0; i < markupList.length; i++) {
				      ("production" !== "development" ? invariant(
				        markupList[i],
				        'dangerouslyRenderMarkup(...): Missing markup.'
				      ) : invariant(markupList[i]));
				      nodeName = getNodeName(markupList[i]);
				      nodeName = getMarkupWrap(nodeName) ? nodeName : '*';
				      markupByNodeName[nodeName] = markupByNodeName[nodeName] || [];
				      markupByNodeName[nodeName][i] = markupList[i];
				    }
				    var resultList = [];
				    var resultListAssignmentCount = 0;
				    for (nodeName in markupByNodeName) {
				      if (!markupByNodeName.hasOwnProperty(nodeName)) {
				        continue;
				      }
				      var markupListByNodeName = markupByNodeName[nodeName];

				      // This for-in loop skips the holes of the sparse array. The order of
				      // iteration should follow the order of assignment, which happens to match
				      // numerical index order, but we don't rely on that.
				      for (var resultIndex in markupListByNodeName) {
				        if (markupListByNodeName.hasOwnProperty(resultIndex)) {
				          var markup = markupListByNodeName[resultIndex];

				          // Push the requested markup with an additional RESULT_INDEX_ATTR
				          // attribute.  If the markup does not start with a < character, it
				          // will be discarded below (with an appropriate console.error).
				          markupListByNodeName[resultIndex] = markup.replace(
				            OPEN_TAG_NAME_EXP,
				            // This index will be parsed back out below.
				            '$1 ' + RESULT_INDEX_ATTR + '="' + resultIndex + '" '
				          );
				        }
				      }

				      // Render each group of markup with similar wrapping `nodeName`.
				      var renderNodes = createNodesFromMarkup(
				        markupListByNodeName.join(''),
				        emptyFunction // Do nothing special with <script> tags.
				      );

				      for (i = 0; i < renderNodes.length; ++i) {
				        var renderNode = renderNodes[i];
				        if (renderNode.hasAttribute &&
				            renderNode.hasAttribute(RESULT_INDEX_ATTR)) {

				          resultIndex = +renderNode.getAttribute(RESULT_INDEX_ATTR);
				          renderNode.removeAttribute(RESULT_INDEX_ATTR);

				          ("production" !== "development" ? invariant(
				            !resultList.hasOwnProperty(resultIndex),
				            'Danger: Assigning to an already-occupied result index.'
				          ) : invariant(!resultList.hasOwnProperty(resultIndex)));

				          resultList[resultIndex] = renderNode;

				          // This should match resultList.length and markupList.length when
				          // we're done.
				          resultListAssignmentCount += 1;

				        } else if ("production" !== "development") {
				          console.error(
				            "Danger: Discarding unexpected node:",
				            renderNode
				          );
				        }
				      }
				    }

				    // Although resultList was populated out of order, it should now be a dense
				    // array.
				    ("production" !== "development" ? invariant(
				      resultListAssignmentCount === resultList.length,
				      'Danger: Did not assign to every index of resultList.'
				    ) : invariant(resultListAssignmentCount === resultList.length));

				    ("production" !== "development" ? invariant(
				      resultList.length === markupList.length,
				      'Danger: Expected markup to render %s nodes, but rendered %s.',
				      markupList.length,
				      resultList.length
				    ) : invariant(resultList.length === markupList.length));

				    return resultList;
				  },

				  /**
				   * Replaces a node with a string of markup at its current position within its
				   * parent. The markup must render into a single root node.
				   *
				   * @param {DOMElement} oldChild Child node to replace.
				   * @param {string} markup Markup to render in place of the child node.
				   * @internal
				   */
				  dangerouslyReplaceNodeWithMarkup: function(oldChild, markup) {
				    ("production" !== "development" ? invariant(
				      ExecutionEnvironment.canUseDOM,
				      'dangerouslyReplaceNodeWithMarkup(...): Cannot render markup in a ' +
				      'worker thread. Make sure `window` and `document` are available ' +
				      'globally before requiring React when unit testing or use ' +
				      'React.renderToString for server rendering.'
				    ) : invariant(ExecutionEnvironment.canUseDOM));
				    ("production" !== "development" ? invariant(markup, 'dangerouslyReplaceNodeWithMarkup(...): Missing markup.') : invariant(markup));
				    ("production" !== "development" ? invariant(
				      oldChild.tagName.toLowerCase() !== 'html',
				      'dangerouslyReplaceNodeWithMarkup(...): Cannot replace markup of the ' +
				      '<html> node. This is because browser quirks make this unreliable ' +
				      'and/or slow. If you want to render to the root you must use ' +
				      'server rendering. See renderComponentToString().'
				    ) : invariant(oldChild.tagName.toLowerCase() !== 'html'));

				    var newChild = createNodesFromMarkup(markup, emptyFunction)[0];
				    oldChild.parentNode.replaceChild(newChild, oldChild);
				  }

				};

				module.exports = Danger;

				},{"./ExecutionEnvironment":22,"./createNodesFromMarkup":104,"./emptyFunction":107,"./getMarkupWrap":118,"./invariant":126}],14:[function(_dereq_,module,exports){
				/**
				 * Copyright 2013-2014, Facebook, Inc.
				 * All rights reserved.
				 *
				 * This source code is licensed under the BSD-style license found in the
				 * LICENSE file in the root directory of this source tree. An additional grant
				 * of patent rights can be found in the PATENTS file in the same directory.
				 *
				 * @providesModule DefaultEventPluginOrder
				 */

				"use strict";

				 var keyOf = _dereq_("./keyOf");

				/**
				 * Module that is injectable into `EventPluginHub`, that specifies a
				 * deterministic ordering of `EventPlugin`s. A convenient way to reason about
				 * plugins, without having to package every one of them. This is better than
				 * having plugins be ordered in the same order that they are injected because
				 * that ordering would be influenced by the packaging order.
				 * `ResponderEventPlugin` must occur before `SimpleEventPlugin` so that
				 * preventing default on events is convenient in `SimpleEventPlugin` handlers.
				 */
				var DefaultEventPluginOrder = [
				  keyOf({ResponderEventPlugin: null}),
				  keyOf({SimpleEventPlugin: null}),
				  keyOf({TapEventPlugin: null}),
				  keyOf({EnterLeaveEventPlugin: null}),
				  keyOf({ChangeEventPlugin: null}),
				  keyOf({SelectEventPlugin: null}),
				  keyOf({CompositionEventPlugin: null}),
				  keyOf({BeforeInputEventPlugin: null}),
				  keyOf({AnalyticsEventPlugin: null}),
				  keyOf({MobileSafariClickEventPlugin: null})
				];

				module.exports = DefaultEventPluginOrder;

				},{"./keyOf":133}],15:[function(_dereq_,module,exports){
				/**
				 * Copyright 2013-2014, Facebook, Inc.
				 * All rights reserved.
				 *
				 * This source code is licensed under the BSD-style license found in the
				 * LICENSE file in the root directory of this source tree. An additional grant
				 * of patent rights can be found in the PATENTS file in the same directory.
				 *
				 * @providesModule EnterLeaveEventPlugin
				 * @typechecks static-only
				 */

				"use strict";

				var EventConstants = _dereq_("./EventConstants");
				var EventPropagators = _dereq_("./EventPropagators");
				var SyntheticMouseEvent = _dereq_("./SyntheticMouseEvent");

				var ReactMount = _dereq_("./ReactMount");
				var keyOf = _dereq_("./keyOf");

				var topLevelTypes = EventConstants.topLevelTypes;
				var getFirstReactDOM = ReactMount.getFirstReactDOM;

				var eventTypes = {
				  mouseEnter: {
				    registrationName: keyOf({onMouseEnter: null}),
				    dependencies: [
				      topLevelTypes.topMouseOut,
				      topLevelTypes.topMouseOver
				    ]
				  },
				  mouseLeave: {
				    registrationName: keyOf({onMouseLeave: null}),
				    dependencies: [
				      topLevelTypes.topMouseOut,
				      topLevelTypes.topMouseOver
				    ]
				  }
				};

				var extractedEvents = [null, null];

				var EnterLeaveEventPlugin = {

				  eventTypes: eventTypes,

				  /**
				   * For almost every interaction we care about, there will be both a top-level
				   * `mouseover` and `mouseout` event that occurs. Only use `mouseout` so that
				   * we do not extract duplicate events. However, moving the mouse into the
				   * browser from outside will not fire a `mouseout` event. In this case, we use
				   * the `mouseover` top-level event.
				   *
				   * @param {string} topLevelType Record from `EventConstants`.
				   * @param {DOMEventTarget} topLevelTarget The listening component root node.
				   * @param {string} topLevelTargetID ID of `topLevelTarget`.
				   * @param {object} nativeEvent Native browser event.
				   * @return {*} An accumulation of synthetic events.
				   * @see {EventPluginHub.extractEvents}
				   */
				  extractEvents: function(
				      topLevelType,
				      topLevelTarget,
				      topLevelTargetID,
				      nativeEvent) {
				    if (topLevelType === topLevelTypes.topMouseOver &&
				        (nativeEvent.relatedTarget || nativeEvent.fromElement)) {
				      return null;
				    }
				    if (topLevelType !== topLevelTypes.topMouseOut &&
				        topLevelType !== topLevelTypes.topMouseOver) {
				      // Must not be a mouse in or mouse out - ignoring.
				      return null;
				    }

				    var win;
				    if (topLevelTarget.window === topLevelTarget) {
				      // `topLevelTarget` is probably a window object.
				      win = topLevelTarget;
				    } else {
				      // TODO: Figure out why `ownerDocument` is sometimes undefined in IE8.
				      var doc = topLevelTarget.ownerDocument;
				      if (doc) {
				        win = doc.defaultView || doc.parentWindow;
				      } else {
				        win = window;
				      }
				    }

				    var from, to;
				    if (topLevelType === topLevelTypes.topMouseOut) {
				      from = topLevelTarget;
				      to =
				        getFirstReactDOM(nativeEvent.relatedTarget || nativeEvent.toElement) ||
				        win;
				    } else {
				      from = win;
				      to = topLevelTarget;
				    }

				    if (from === to) {
				      // Nothing pertains to our managed components.
				      return null;
				    }

				    var fromID = from ? ReactMount.getID(from) : '';
				    var toID = to ? ReactMount.getID(to) : '';

				    var leave = SyntheticMouseEvent.getPooled(
				      eventTypes.mouseLeave,
				      fromID,
				      nativeEvent
				    );
				    leave.type = 'mouseleave';
				    leave.target = from;
				    leave.relatedTarget = to;

				    var enter = SyntheticMouseEvent.getPooled(
				      eventTypes.mouseEnter,
				      toID,
				      nativeEvent
				    );
				    enter.type = 'mouseenter';
				    enter.target = to;
				    enter.relatedTarget = from;

				    EventPropagators.accumulateEnterLeaveDispatches(leave, enter, fromID, toID);

				    extractedEvents[0] = leave;
				    extractedEvents[1] = enter;

				    return extractedEvents;
				  }

				};

				module.exports = EnterLeaveEventPlugin;

				},{"./EventConstants":16,"./EventPropagators":21,"./ReactMount":63,"./SyntheticMouseEvent":91,"./keyOf":133}],16:[function(_dereq_,module,exports){
				/**
				 * Copyright 2013-2014, Facebook, Inc.
				 * All rights reserved.
				 *
				 * This source code is licensed under the BSD-style license found in the
				 * LICENSE file in the root directory of this source tree. An additional grant
				 * of patent rights can be found in the PATENTS file in the same directory.
				 *
				 * @providesModule EventConstants
				 */

				"use strict";

				var keyMirror = _dereq_("./keyMirror");

				var PropagationPhases = keyMirror({bubbled: null, captured: null});

				/**
				 * Types of raw signals from the browser caught at the top level.
				 */
				var topLevelTypes = keyMirror({
				  topBlur: null,
				  topChange: null,
				  topClick: null,
				  topCompositionEnd: null,
				  topCompositionStart: null,
				  topCompositionUpdate: null,
				  topContextMenu: null,
				  topCopy: null,
				  topCut: null,
				  topDoubleClick: null,
				  topDrag: null,
				  topDragEnd: null,
				  topDragEnter: null,
				  topDragExit: null,
				  topDragLeave: null,
				  topDragOver: null,
				  topDragStart: null,
				  topDrop: null,
				  topError: null,
				  topFocus: null,
				  topInput: null,
				  topKeyDown: null,
				  topKeyPress: null,
				  topKeyUp: null,
				  topLoad: null,
				  topMouseDown: null,
				  topMouseMove: null,
				  topMouseOut: null,
				  topMouseOver: null,
				  topMouseUp: null,
				  topPaste: null,
				  topReset: null,
				  topScroll: null,
				  topSelectionChange: null,
				  topSubmit: null,
				  topTextInput: null,
				  topTouchCancel: null,
				  topTouchEnd: null,
				  topTouchMove: null,
				  topTouchStart: null,
				  topWheel: null
				});

				var EventConstants = {
				  topLevelTypes: topLevelTypes,
				  PropagationPhases: PropagationPhases
				};

				module.exports = EventConstants;

				},{"./keyMirror":132}],17:[function(_dereq_,module,exports){
				/**
				 * Copyright 2013-2014 Facebook, Inc.
				 *
				 * Licensed under the Apache License, Version 2.0 (the "License");
				 * you may not use this file except in compliance with the License.
				 * You may obtain a copy of the License at
				 *
				 * http://www.apache.org/licenses/LICENSE-2.0
				 *
				 * Unless required by applicable law or agreed to in writing, software
				 * distributed under the License is distributed on an "AS IS" BASIS,
				 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
				 * See the License for the specific language governing permissions and
				 * limitations under the License.
				 *
				 * @providesModule EventListener
				 * @typechecks
				 */

				var emptyFunction = _dereq_("./emptyFunction");

				/**
				 * Upstream version of event listener. Does not take into account specific
				 * nature of platform.
				 */
				var EventListener = {
				  /**
				   * Listen to DOM events during the bubble phase.
				   *
				   * @param {DOMEventTarget} target DOM element to register listener on.
				   * @param {string} eventType Event type, e.g. 'click' or 'mouseover'.
				   * @param {function} callback Callback function.
				   * @return {object} Object with a `remove` method.
				   */
				  listen: function(target, eventType, callback) {
				    if (target.addEventListener) {
				      target.addEventListener(eventType, callback, false);
				      return {
				        remove: function() {
				          target.removeEventListener(eventType, callback, false);
				        }
				      };
				    } else if (target.attachEvent) {
				      target.attachEvent('on' + eventType, callback);
				      return {
				        remove: function() {
				          target.detachEvent('on' + eventType, callback);
				        }
				      };
				    }
				  },

				  /**
				   * Listen to DOM events during the capture phase.
				   *
				   * @param {DOMEventTarget} target DOM element to register listener on.
				   * @param {string} eventType Event type, e.g. 'click' or 'mouseover'.
				   * @param {function} callback Callback function.
				   * @return {object} Object with a `remove` method.
				   */
				  capture: function(target, eventType, callback) {
				    if (!target.addEventListener) {
				      if ("production" !== "development") {
				        console.error(
				          'Attempted to listen to events during the capture phase on a ' +
				          'browser that does not support the capture phase. Your application ' +
				          'will not receive some events.'
				        );
				      }
				      return {
				        remove: emptyFunction
				      };
				    } else {
				      target.addEventListener(eventType, callback, true);
				      return {
				        remove: function() {
				          target.removeEventListener(eventType, callback, true);
				        }
				      };
				    }
				  },

				  registerDefault: function() {}
				};

				module.exports = EventListener;

				},{"./emptyFunction":107}],18:[function(_dereq_,module,exports){
				/**
				 * Copyright 2013-2014, Facebook, Inc.
				 * All rights reserved.
				 *
				 * This source code is licensed under the BSD-style license found in the
				 * LICENSE file in the root directory of this source tree. An additional grant
				 * of patent rights can be found in the PATENTS file in the same directory.
				 *
				 * @providesModule EventPluginHub
				 */

				"use strict";

				var EventPluginRegistry = _dereq_("./EventPluginRegistry");
				var EventPluginUtils = _dereq_("./EventPluginUtils");

				var accumulateInto = _dereq_("./accumulateInto");
				var forEachAccumulated = _dereq_("./forEachAccumulated");
				var invariant = _dereq_("./invariant");

				/**
				 * Internal store for event listeners
				 */
				var listenerBank = {};

				/**
				 * Internal queue of events that have accumulated their dispatches and are
				 * waiting to have their dispatches executed.
				 */
				var eventQueue = null;

				/**
				 * Dispatches an event and releases it back into the pool, unless persistent.
				 *
				 * @param {?object} event Synthetic event to be dispatched.
				 * @private
				 */
				var executeDispatchesAndRelease = function(event) {
				  if (event) {
				    var executeDispatch = EventPluginUtils.executeDispatch;
				    // Plugins can provide custom behavior when dispatching events.
				    var PluginModule = EventPluginRegistry.getPluginModuleForEvent(event);
				    if (PluginModule && PluginModule.executeDispatch) {
				      executeDispatch = PluginModule.executeDispatch;
				    }
				    EventPluginUtils.executeDispatchesInOrder(event, executeDispatch);

				    if (!event.isPersistent()) {
				      event.constructor.release(event);
				    }
				  }
				};

				/**
				 * - `InstanceHandle`: [required] Module that performs logical traversals of DOM
				 *   hierarchy given ids of the logical DOM elements involved.
				 */
				var InstanceHandle = null;

				function validateInstanceHandle() {
				  var invalid = !InstanceHandle||
				    !InstanceHandle.traverseTwoPhase ||
				    !InstanceHandle.traverseEnterLeave;
				  if (invalid) {
				    throw new Error('InstanceHandle not injected before use!');
				  }
				}

				/**
				 * This is a unified interface for event plugins to be installed and configured.
				 *
				 * Event plugins can implement the following properties:
				 *
				 *   `extractEvents` {function(string, DOMEventTarget, string, object): *}
				 *     Required. When a top-level event is fired, this method is expected to
				 *     extract synthetic events that will in turn be queued and dispatched.
				 *
				 *   `eventTypes` {object}
				 *     Optional, plugins that fire events must publish a mapping of registration
				 *     names that are used to register listeners. Values of this mapping must
				 *     be objects that contain `registrationName` or `phasedRegistrationNames`.
				 *
				 *   `executeDispatch` {function(object, function, string)}
				 *     Optional, allows plugins to override how an event gets dispatched. By
				 *     default, the listener is simply invoked.
				 *
				 * Each plugin that is injected into `EventsPluginHub` is immediately operable.
				 *
				 * @public
				 */
				var EventPluginHub = {

				  /**
				   * Methods for injecting dependencies.
				   */
				  injection: {

				    /**
				     * @param {object} InjectedMount
				     * @public
				     */
				    injectMount: EventPluginUtils.injection.injectMount,

				    /**
				     * @param {object} InjectedInstanceHandle
				     * @public
				     */
				    injectInstanceHandle: function(InjectedInstanceHandle) {
				      InstanceHandle = InjectedInstanceHandle;
				      if ("production" !== "development") {
				        validateInstanceHandle();
				      }
				    },

				    getInstanceHandle: function() {
				      if ("production" !== "development") {
				        validateInstanceHandle();
				      }
				      return InstanceHandle;
				    },

				    /**
				     * @param {array} InjectedEventPluginOrder
				     * @public
				     */
				    injectEventPluginOrder: EventPluginRegistry.injectEventPluginOrder,

				    /**
				     * @param {object} injectedNamesToPlugins Map from names to plugin modules.
				     */
				    injectEventPluginsByName: EventPluginRegistry.injectEventPluginsByName

				  },

				  eventNameDispatchConfigs: EventPluginRegistry.eventNameDispatchConfigs,

				  registrationNameModules: EventPluginRegistry.registrationNameModules,

				  /**
				   * Stores `listener` at `listenerBank[registrationName][id]`. Is idempotent.
				   *
				   * @param {string} id ID of the DOM element.
				   * @param {string} registrationName Name of listener (e.g. `onClick`).
				   * @param {?function} listener The callback to store.
				   */
				  putListener: function(id, registrationName, listener) {
				    ("production" !== "development" ? invariant(
				      !listener || typeof listener === 'function',
				      'Expected %s listener to be a function, instead got type %s',
				      registrationName, typeof listener
				    ) : invariant(!listener || typeof listener === 'function'));

				    var bankForRegistrationName =
				      listenerBank[registrationName] || (listenerBank[registrationName] = {});
				    bankForRegistrationName[id] = listener;
				  },

				  /**
				   * @param {string} id ID of the DOM element.
				   * @param {string} registrationName Name of listener (e.g. `onClick`).
				   * @return {?function} The stored callback.
				   */
				  getListener: function(id, registrationName) {
				    var bankForRegistrationName = listenerBank[registrationName];
				    return bankForRegistrationName && bankForRegistrationName[id];
				  },

				  /**
				   * Deletes a listener from the registration bank.
				   *
				   * @param {string} id ID of the DOM element.
				   * @param {string} registrationName Name of listener (e.g. `onClick`).
				   */
				  deleteListener: function(id, registrationName) {
				    var bankForRegistrationName = listenerBank[registrationName];
				    if (bankForRegistrationName) {
				      delete bankForRegistrationName[id];
				    }
				  },

				  /**
				   * Deletes all listeners for the DOM element with the supplied ID.
				   *
				   * @param {string} id ID of the DOM element.
				   */
				  deleteAllListeners: function(id) {
				    for (var registrationName in listenerBank) {
				      delete listenerBank[registrationName][id];
				    }
				  },

				  /**
				   * Allows registered plugins an opportunity to extract events from top-level
				   * native browser events.
				   *
				   * @param {string} topLevelType Record from `EventConstants`.
				   * @param {DOMEventTarget} topLevelTarget The listening component root node.
				   * @param {string} topLevelTargetID ID of `topLevelTarget`.
				   * @param {object} nativeEvent Native browser event.
				   * @return {*} An accumulation of synthetic events.
				   * @internal
				   */
				  extractEvents: function(
				      topLevelType,
				      topLevelTarget,
				      topLevelTargetID,
				      nativeEvent) {
				    var events;
				    var plugins = EventPluginRegistry.plugins;
				    for (var i = 0, l = plugins.length; i < l; i++) {
				      // Not every plugin in the ordering may be loaded at runtime.
				      var possiblePlugin = plugins[i];
				      if (possiblePlugin) {
				        var extractedEvents = possiblePlugin.extractEvents(
				          topLevelType,
				          topLevelTarget,
				          topLevelTargetID,
				          nativeEvent
				        );
				        if (extractedEvents) {
				          events = accumulateInto(events, extractedEvents);
				        }
				      }
				    }
				    return events;
				  },

				  /**
				   * Enqueues a synthetic event that should be dispatched when
				   * `processEventQueue` is invoked.
				   *
				   * @param {*} events An accumulation of synthetic events.
				   * @internal
				   */
				  enqueueEvents: function(events) {
				    if (events) {
				      eventQueue = accumulateInto(eventQueue, events);
				    }
				  },

				  /**
				   * Dispatches all synthetic events on the event queue.
				   *
				   * @internal
				   */
				  processEventQueue: function() {
				    // Set `eventQueue` to null before processing it so that we can tell if more
				    // events get enqueued while processing.
				    var processingEventQueue = eventQueue;
				    eventQueue = null;
				    forEachAccumulated(processingEventQueue, executeDispatchesAndRelease);
				    ("production" !== "development" ? invariant(
				      !eventQueue,
				      'processEventQueue(): Additional events were enqueued while processing ' +
				      'an event queue. Support for this has not yet been implemented.'
				    ) : invariant(!eventQueue));
				  },

				  /**
				   * These are needed for tests only. Do not use!
				   */
				  __purge: function() {
				    listenerBank = {};
				  },

				  __getListenerBank: function() {
				    return listenerBank;
				  }

				};

				module.exports = EventPluginHub;

				},{"./EventPluginRegistry":19,"./EventPluginUtils":20,"./accumulateInto":97,"./forEachAccumulated":112,"./invariant":126}],19:[function(_dereq_,module,exports){
				/**
				 * Copyright 2013-2014, Facebook, Inc.
				 * All rights reserved.
				 *
				 * This source code is licensed under the BSD-style license found in the
				 * LICENSE file in the root directory of this source tree. An additional grant
				 * of patent rights can be found in the PATENTS file in the same directory.
				 *
				 * @providesModule EventPluginRegistry
				 * @typechecks static-only
				 */

				"use strict";

				var invariant = _dereq_("./invariant");

				/**
				 * Injectable ordering of event plugins.
				 */
				var EventPluginOrder = null;

				/**
				 * Injectable mapping from names to event plugin modules.
				 */
				var namesToPlugins = {};

				/**
				 * Recomputes the plugin list using the injected plugins and plugin ordering.
				 *
				 * @private
				 */
				function recomputePluginOrdering() {
				  if (!EventPluginOrder) {
				    // Wait until an `EventPluginOrder` is injected.
				    return;
				  }
				  for (var pluginName in namesToPlugins) {
				    var PluginModule = namesToPlugins[pluginName];
				    var pluginIndex = EventPluginOrder.indexOf(pluginName);
				    ("production" !== "development" ? invariant(
				      pluginIndex > -1,
				      'EventPluginRegistry: Cannot inject event plugins that do not exist in ' +
				      'the plugin ordering, `%s`.',
				      pluginName
				    ) : invariant(pluginIndex > -1));
				    if (EventPluginRegistry.plugins[pluginIndex]) {
				      continue;
				    }
				    ("production" !== "development" ? invariant(
				      PluginModule.extractEvents,
				      'EventPluginRegistry: Event plugins must implement an `extractEvents` ' +
				      'method, but `%s` does not.',
				      pluginName
				    ) : invariant(PluginModule.extractEvents));
				    EventPluginRegistry.plugins[pluginIndex] = PluginModule;
				    var publishedEvents = PluginModule.eventTypes;
				    for (var eventName in publishedEvents) {
				      ("production" !== "development" ? invariant(
				        publishEventForPlugin(
				          publishedEvents[eventName],
				          PluginModule,
				          eventName
				        ),
				        'EventPluginRegistry: Failed to publish event `%s` for plugin `%s`.',
				        eventName,
				        pluginName
				      ) : invariant(publishEventForPlugin(
				        publishedEvents[eventName],
				        PluginModule,
				        eventName
				      )));
				    }
				  }
				}

				/**
				 * Publishes an event so that it can be dispatched by the supplied plugin.
				 *
				 * @param {object} dispatchConfig Dispatch configuration for the event.
				 * @param {object} PluginModule Plugin publishing the event.
				 * @return {boolean} True if the event was successfully published.
				 * @private
				 */
				function publishEventForPlugin(dispatchConfig, PluginModule, eventName) {
				  ("production" !== "development" ? invariant(
				    !EventPluginRegistry.eventNameDispatchConfigs.hasOwnProperty(eventName),
				    'EventPluginHub: More than one plugin attempted to publish the same ' +
				    'event name, `%s`.',
				    eventName
				  ) : invariant(!EventPluginRegistry.eventNameDispatchConfigs.hasOwnProperty(eventName)));
				  EventPluginRegistry.eventNameDispatchConfigs[eventName] = dispatchConfig;

				  var phasedRegistrationNames = dispatchConfig.phasedRegistrationNames;
				  if (phasedRegistrationNames) {
				    for (var phaseName in phasedRegistrationNames) {
				      if (phasedRegistrationNames.hasOwnProperty(phaseName)) {
				        var phasedRegistrationName = phasedRegistrationNames[phaseName];
				        publishRegistrationName(
				          phasedRegistrationName,
				          PluginModule,
				          eventName
				        );
				      }
				    }
				    return true;
				  } else if (dispatchConfig.registrationName) {
				    publishRegistrationName(
				      dispatchConfig.registrationName,
				      PluginModule,
				      eventName
				    );
				    return true;
				  }
				  return false;
				}

				/**
				 * Publishes a registration name that is used to identify dispatched events and
				 * can be used with `EventPluginHub.putListener` to register listeners.
				 *
				 * @param {string} registrationName Registration name to add.
				 * @param {object} PluginModule Plugin publishing the event.
				 * @private
				 */
				function publishRegistrationName(registrationName, PluginModule, eventName) {
				  ("production" !== "development" ? invariant(
				    !EventPluginRegistry.registrationNameModules[registrationName],
				    'EventPluginHub: More than one plugin attempted to publish the same ' +
				    'registration name, `%s`.',
				    registrationName
				  ) : invariant(!EventPluginRegistry.registrationNameModules[registrationName]));
				  EventPluginRegistry.registrationNameModules[registrationName] = PluginModule;
				  EventPluginRegistry.registrationNameDependencies[registrationName] =
				    PluginModule.eventTypes[eventName].dependencies;
				}

				/**
				 * Registers plugins so that they can extract and dispatch events.
				 *
				 * @see {EventPluginHub}
				 */
				var EventPluginRegistry = {

				  /**
				   * Ordered list of injected plugins.
				   */
				  plugins: [],

				  /**
				   * Mapping from event name to dispatch config
				   */
				  eventNameDispatchConfigs: {},

				  /**
				   * Mapping from registration name to plugin module
				   */
				  registrationNameModules: {},

				  /**
				   * Mapping from registration name to event name
				   */
				  registrationNameDependencies: {},

				  /**
				   * Injects an ordering of plugins (by plugin name). This allows the ordering
				   * to be decoupled from injection of the actual plugins so that ordering is
				   * always deterministic regardless of packaging, on-the-fly injection, etc.
				   *
				   * @param {array} InjectedEventPluginOrder
				   * @internal
				   * @see {EventPluginHub.injection.injectEventPluginOrder}
				   */
				  injectEventPluginOrder: function(InjectedEventPluginOrder) {
				    ("production" !== "development" ? invariant(
				      !EventPluginOrder,
				      'EventPluginRegistry: Cannot inject event plugin ordering more than ' +
				      'once. You are likely trying to load more than one copy of React.'
				    ) : invariant(!EventPluginOrder));
				    // Clone the ordering so it cannot be dynamically mutated.
				    EventPluginOrder = Array.prototype.slice.call(InjectedEventPluginOrder);
				    recomputePluginOrdering();
				  },

				  /**
				   * Injects plugins to be used by `EventPluginHub`. The plugin names must be
				   * in the ordering injected by `injectEventPluginOrder`.
				   *
				   * Plugins can be injected as part of page initialization or on-the-fly.
				   *
				   * @param {object} injectedNamesToPlugins Map from names to plugin modules.
				   * @internal
				   * @see {EventPluginHub.injection.injectEventPluginsByName}
				   */
				  injectEventPluginsByName: function(injectedNamesToPlugins) {
				    var isOrderingDirty = false;
				    for (var pluginName in injectedNamesToPlugins) {
				      if (!injectedNamesToPlugins.hasOwnProperty(pluginName)) {
				        continue;
				      }
				      var PluginModule = injectedNamesToPlugins[pluginName];
				      if (!namesToPlugins.hasOwnProperty(pluginName) ||
				          namesToPlugins[pluginName] !== PluginModule) {
				        ("production" !== "development" ? invariant(
				          !namesToPlugins[pluginName],
				          'EventPluginRegistry: Cannot inject two different event plugins ' +
				          'using the same name, `%s`.',
				          pluginName
				        ) : invariant(!namesToPlugins[pluginName]));
				        namesToPlugins[pluginName] = PluginModule;
				        isOrderingDirty = true;
				      }
				    }
				    if (isOrderingDirty) {
				      recomputePluginOrdering();
				    }
				  },

				  /**
				   * Looks up the plugin for the supplied event.
				   *
				   * @param {object} event A synthetic event.
				   * @return {?object} The plugin that created the supplied event.
				   * @internal
				   */
				  getPluginModuleForEvent: function(event) {
				    var dispatchConfig = event.dispatchConfig;
				    if (dispatchConfig.registrationName) {
				      return EventPluginRegistry.registrationNameModules[
				        dispatchConfig.registrationName
				      ] || null;
				    }
				    for (var phase in dispatchConfig.phasedRegistrationNames) {
				      if (!dispatchConfig.phasedRegistrationNames.hasOwnProperty(phase)) {
				        continue;
				      }
				      var PluginModule = EventPluginRegistry.registrationNameModules[
				        dispatchConfig.phasedRegistrationNames[phase]
				      ];
				      if (PluginModule) {
				        return PluginModule;
				      }
				    }
				    return null;
				  },

				  /**
				   * Exposed for unit testing.
				   * @private
				   */
				  _resetEventPlugins: function() {
				    EventPluginOrder = null;
				    for (var pluginName in namesToPlugins) {
				      if (namesToPlugins.hasOwnProperty(pluginName)) {
				        delete namesToPlugins[pluginName];
				      }
				    }
				    EventPluginRegistry.plugins.length = 0;

				    var eventNameDispatchConfigs = EventPluginRegistry.eventNameDispatchConfigs;
				    for (var eventName in eventNameDispatchConfigs) {
				      if (eventNameDispatchConfigs.hasOwnProperty(eventName)) {
				        delete eventNameDispatchConfigs[eventName];
				      }
				    }

				    var registrationNameModules = EventPluginRegistry.registrationNameModules;
				    for (var registrationName in registrationNameModules) {
				      if (registrationNameModules.hasOwnProperty(registrationName)) {
				        delete registrationNameModules[registrationName];
				      }
				    }
				  }

				};

				module.exports = EventPluginRegistry;

				},{"./invariant":126}],20:[function(_dereq_,module,exports){
				/**
				 * Copyright 2013-2014, Facebook, Inc.
				 * All rights reserved.
				 *
				 * This source code is licensed under the BSD-style license found in the
				 * LICENSE file in the root directory of this source tree. An additional grant
				 * of patent rights can be found in the PATENTS file in the same directory.
				 *
				 * @providesModule EventPluginUtils
				 */

				"use strict";

				var EventConstants = _dereq_("./EventConstants");

				var invariant = _dereq_("./invariant");

				/**
				 * Injected dependencies:
				 */

				/**
				 * - `Mount`: [required] Module that can convert between React dom IDs and
				 *   actual node references.
				 */
				var injection = {
				  Mount: null,
				  injectMount: function(InjectedMount) {
				    injection.Mount = InjectedMount;
				    if ("production" !== "development") {
				      ("production" !== "development" ? invariant(
				        InjectedMount && InjectedMount.getNode,
				        'EventPluginUtils.injection.injectMount(...): Injected Mount module ' +
				        'is missing getNode.'
				      ) : invariant(InjectedMount && InjectedMount.getNode));
				    }
				  }
				};

				var topLevelTypes = EventConstants.topLevelTypes;

				function isEndish(topLevelType) {
				  return topLevelType === topLevelTypes.topMouseUp ||
				         topLevelType === topLevelTypes.topTouchEnd ||
				         topLevelType === topLevelTypes.topTouchCancel;
				}

				function isMoveish(topLevelType) {
				  return topLevelType === topLevelTypes.topMouseMove ||
				         topLevelType === topLevelTypes.topTouchMove;
				}
				function isStartish(topLevelType) {
				  return topLevelType === topLevelTypes.topMouseDown ||
				         topLevelType === topLevelTypes.topTouchStart;
				}


				var validateEventDispatches;
				if ("production" !== "development") {
				  validateEventDispatches = function(event) {
				    var dispatchListeners = event._dispatchListeners;
				    var dispatchIDs = event._dispatchIDs;

				    var listenersIsArr = Array.isArray(dispatchListeners);
				    var idsIsArr = Array.isArray(dispatchIDs);
				    var IDsLen = idsIsArr ? dispatchIDs.length : dispatchIDs ? 1 : 0;
				    var listenersLen = listenersIsArr ?
				      dispatchListeners.length :
				      dispatchListeners ? 1 : 0;

				    ("production" !== "development" ? invariant(
				      idsIsArr === listenersIsArr && IDsLen === listenersLen,
				      'EventPluginUtils: Invalid `event`.'
				    ) : invariant(idsIsArr === listenersIsArr && IDsLen === listenersLen));
				  };
				}

				/**
				 * Invokes `cb(event, listener, id)`. Avoids using call if no scope is
				 * provided. The `(listener,id)` pair effectively forms the "dispatch" but are
				 * kept separate to conserve memory.
				 */
				function forEachEventDispatch(event, cb) {
				  var dispatchListeners = event._dispatchListeners;
				  var dispatchIDs = event._dispatchIDs;
				  if ("production" !== "development") {
				    validateEventDispatches(event);
				  }
				  if (Array.isArray(dispatchListeners)) {
				    for (var i = 0; i < dispatchListeners.length; i++) {
				      if (event.isPropagationStopped()) {
				        break;
				      }
				      // Listeners and IDs are two parallel arrays that are always in sync.
				      cb(event, dispatchListeners[i], dispatchIDs[i]);
				    }
				  } else if (dispatchListeners) {
				    cb(event, dispatchListeners, dispatchIDs);
				  }
				}

				/**
				 * Default implementation of PluginModule.executeDispatch().
				 * @param {SyntheticEvent} SyntheticEvent to handle
				 * @param {function} Application-level callback
				 * @param {string} domID DOM id to pass to the callback.
				 */
				function executeDispatch(event, listener, domID) {
				  event.currentTarget = injection.Mount.getNode(domID);
				  var returnValue = listener(event, domID);
				  event.currentTarget = null;
				  return returnValue;
				}

				/**
				 * Standard/simple iteration through an event's collected dispatches.
				 */
				function executeDispatchesInOrder(event, executeDispatch) {
				  forEachEventDispatch(event, executeDispatch);
				  event._dispatchListeners = null;
				  event._dispatchIDs = null;
				}

				/**
				 * Standard/simple iteration through an event's collected dispatches, but stops
				 * at the first dispatch execution returning true, and returns that id.
				 *
				 * @return id of the first dispatch execution who's listener returns true, or
				 * null if no listener returned true.
				 */
				function executeDispatchesInOrderStopAtTrueImpl(event) {
				  var dispatchListeners = event._dispatchListeners;
				  var dispatchIDs = event._dispatchIDs;
				  if ("production" !== "development") {
				    validateEventDispatches(event);
				  }
				  if (Array.isArray(dispatchListeners)) {
				    for (var i = 0; i < dispatchListeners.length; i++) {
				      if (event.isPropagationStopped()) {
				        break;
				      }
				      // Listeners and IDs are two parallel arrays that are always in sync.
				      if (dispatchListeners[i](event, dispatchIDs[i])) {
				        return dispatchIDs[i];
				      }
				    }
				  } else if (dispatchListeners) {
				    if (dispatchListeners(event, dispatchIDs)) {
				      return dispatchIDs;
				    }
				  }
				  return null;
				}

				/**
				 * @see executeDispatchesInOrderStopAtTrueImpl
				 */
				function executeDispatchesInOrderStopAtTrue(event) {
				  var ret = executeDispatchesInOrderStopAtTrueImpl(event);
				  event._dispatchIDs = null;
				  event._dispatchListeners = null;
				  return ret;
				}

				/**
				 * Execution of a "direct" dispatch - there must be at most one dispatch
				 * accumulated on the event or it is considered an error. It doesn't really make
				 * sense for an event with multiple dispatches (bubbled) to keep track of the
				 * return values at each dispatch execution, but it does tend to make sense when
				 * dealing with "direct" dispatches.
				 *
				 * @return The return value of executing the single dispatch.
				 */
				function executeDirectDispatch(event) {
				  if ("production" !== "development") {
				    validateEventDispatches(event);
				  }
				  var dispatchListener = event._dispatchListeners;
				  var dispatchID = event._dispatchIDs;
				  ("production" !== "development" ? invariant(
				    !Array.isArray(dispatchListener),
				    'executeDirectDispatch(...): Invalid `event`.'
				  ) : invariant(!Array.isArray(dispatchListener)));
				  var res = dispatchListener ?
				    dispatchListener(event, dispatchID) :
				    null;
				  event._dispatchListeners = null;
				  event._dispatchIDs = null;
				  return res;
				}

				/**
				 * @param {SyntheticEvent} event
				 * @return {bool} True iff number of dispatches accumulated is greater than 0.
				 */
				function hasDispatches(event) {
				  return !!event._dispatchListeners;
				}

				/**
				 * General utilities that are useful in creating custom Event Plugins.
				 */
				var EventPluginUtils = {
				  isEndish: isEndish,
				  isMoveish: isMoveish,
				  isStartish: isStartish,

				  executeDirectDispatch: executeDirectDispatch,
				  executeDispatch: executeDispatch,
				  executeDispatchesInOrder: executeDispatchesInOrder,
				  executeDispatchesInOrderStopAtTrue: executeDispatchesInOrderStopAtTrue,
				  hasDispatches: hasDispatches,
				  injection: injection,
				  useTouchEvents: false
				};

				module.exports = EventPluginUtils;

				},{"./EventConstants":16,"./invariant":126}],21:[function(_dereq_,module,exports){
				/**
				 * Copyright 2013-2014, Facebook, Inc.
				 * All rights reserved.
				 *
				 * This source code is licensed under the BSD-style license found in the
				 * LICENSE file in the root directory of this source tree. An additional grant
				 * of patent rights can be found in the PATENTS file in the same directory.
				 *
				 * @providesModule EventPropagators
				 */

				"use strict";

				var EventConstants = _dereq_("./EventConstants");
				var EventPluginHub = _dereq_("./EventPluginHub");

				var accumulateInto = _dereq_("./accumulateInto");
				var forEachAccumulated = _dereq_("./forEachAccumulated");

				var PropagationPhases = EventConstants.PropagationPhases;
				var getListener = EventPluginHub.getListener;

				/**
				 * Some event types have a notion of different registration names for different
				 * "phases" of propagation. This finds listeners by a given phase.
				 */
				function listenerAtPhase(id, event, propagationPhase) {
				  var registrationName =
				    event.dispatchConfig.phasedRegistrationNames[propagationPhase];
				  return getListener(id, registrationName);
				}

				/**
				 * Tags a `SyntheticEvent` with dispatched listeners. Creating this function
				 * here, allows us to not have to bind or create functions for each event.
				 * Mutating the event's members allows us to not have to create a wrapping
				 * "dispatch" object that pairs the event with the listener.
				 */
				function accumulateDirectionalDispatches(domID, upwards, event) {
				  if ("production" !== "development") {
				    if (!domID) {
				      throw new Error('Dispatching id must not be null');
				    }
				  }
				  var phase = upwards ? PropagationPhases.bubbled : PropagationPhases.captured;
				  var listener = listenerAtPhase(domID, event, phase);
				  if (listener) {
				    event._dispatchListeners =
				      accumulateInto(event._dispatchListeners, listener);
				    event._dispatchIDs = accumulateInto(event._dispatchIDs, domID);
				  }
				}

				/**
				 * Collect dispatches (must be entirely collected before dispatching - see unit
				 * tests). Lazily allocate the array to conserve memory.  We must loop through
				 * each event and perform the traversal for each one. We can not perform a
				 * single traversal for the entire collection of events because each event may
				 * have a different target.
				 */
				function accumulateTwoPhaseDispatchesSingle(event) {
				  if (event && event.dispatchConfig.phasedRegistrationNames) {
				    EventPluginHub.injection.getInstanceHandle().traverseTwoPhase(
				      event.dispatchMarker,
				      accumulateDirectionalDispatches,
				      event
				    );
				  }
				}


				/**
				 * Accumulates without regard to direction, does not look for phased
				 * registration names. Same as `accumulateDirectDispatchesSingle` but without
				 * requiring that the `dispatchMarker` be the same as the dispatched ID.
				 */
				function accumulateDispatches(id, ignoredDirection, event) {
				  if (event && event.dispatchConfig.registrationName) {
				    var registrationName = event.dispatchConfig.registrationName;
				    var listener = getListener(id, registrationName);
				    if (listener) {
				      event._dispatchListeners =
				        accumulateInto(event._dispatchListeners, listener);
				      event._dispatchIDs = accumulateInto(event._dispatchIDs, id);
				    }
				  }
				}

				/**
				 * Accumulates dispatches on an `SyntheticEvent`, but only for the
				 * `dispatchMarker`.
				 * @param {SyntheticEvent} event
				 */
				function accumulateDirectDispatchesSingle(event) {
				  if (event && event.dispatchConfig.registrationName) {
				    accumulateDispatches(event.dispatchMarker, null, event);
				  }
				}

				function accumulateTwoPhaseDispatches(events) {
				  forEachAccumulated(events, accumulateTwoPhaseDispatchesSingle);
				}

				function accumulateEnterLeaveDispatches(leave, enter, fromID, toID) {
				  EventPluginHub.injection.getInstanceHandle().traverseEnterLeave(
				    fromID,
				    toID,
				    accumulateDispatches,
				    leave,
				    enter
				  );
				}


				function accumulateDirectDispatches(events) {
				  forEachAccumulated(events, accumulateDirectDispatchesSingle);
				}



				/**
				 * A small set of propagation patterns, each of which will accept a small amount
				 * of information, and generate a set of "dispatch ready event objects" - which
				 * are sets of events that have already been annotated with a set of dispatched
				 * listener functions/ids. The API is designed this way to discourage these
				 * propagation strategies from actually executing the dispatches, since we
				 * always want to collect the entire set of dispatches before executing event a
				 * single one.
				 *
				 * @constructor EventPropagators
				 */
				var EventPropagators = {
				  accumulateTwoPhaseDispatches: accumulateTwoPhaseDispatches,
				  accumulateDirectDispatches: accumulateDirectDispatches,
				  accumulateEnterLeaveDispatches: accumulateEnterLeaveDispatches
				};

				module.exports = EventPropagators;

				},{"./EventConstants":16,"./EventPluginHub":18,"./accumulateInto":97,"./forEachAccumulated":112}],22:[function(_dereq_,module,exports){
				/**
				 * Copyright 2013-2014, Facebook, Inc.
				 * All rights reserved.
				 *
				 * This source code is licensed under the BSD-style license found in the
				 * LICENSE file in the root directory of this source tree. An additional grant
				 * of patent rights can be found in the PATENTS file in the same directory.
				 *
				 * @providesModule ExecutionEnvironment
				 */

				/*jslint evil: true */

				"use strict";

				var canUseDOM = !!(
				  typeof window !== 'undefined' &&
				  window.document &&
				  window.document.createElement
				);

				/**
				 * Simple, lightweight module assisting with the detection and context of
				 * Worker. Helps avoid circular dependencies and allows code to reason about
				 * whether or not they are in a Worker, even if they never include the main
				 * `ReactWorker` dependency.
				 */
				var ExecutionEnvironment = {

				  canUseDOM: canUseDOM,

				  canUseWorkers: typeof Worker !== 'undefined',

				  canUseEventListeners:
				    canUseDOM && !!(window.addEventListener || window.attachEvent),

				  canUseViewport: canUseDOM && !!window.screen,

				  isInWorker: !canUseDOM // For now, this is true - might change in the future.

				};

				module.exports = ExecutionEnvironment;

				},{}],23:[function(_dereq_,module,exports){
				/**
				 * Copyright 2013-2014, Facebook, Inc.
				 * All rights reserved.
				 *
				 * This source code is licensed under the BSD-style license found in the
				 * LICENSE file in the root directory of this source tree. An additional grant
				 * of patent rights can be found in the PATENTS file in the same directory.
				 *
				 * @providesModule HTMLDOMPropertyConfig
				 */

				/*jslint bitwise: true*/

				"use strict";

				var DOMProperty = _dereq_("./DOMProperty");
				var ExecutionEnvironment = _dereq_("./ExecutionEnvironment");

				var MUST_USE_ATTRIBUTE = DOMProperty.injection.MUST_USE_ATTRIBUTE;
				var MUST_USE_PROPERTY = DOMProperty.injection.MUST_USE_PROPERTY;
				var HAS_BOOLEAN_VALUE = DOMProperty.injection.HAS_BOOLEAN_VALUE;
				var HAS_SIDE_EFFECTS = DOMProperty.injection.HAS_SIDE_EFFECTS;
				var HAS_NUMERIC_VALUE = DOMProperty.injection.HAS_NUMERIC_VALUE;
				var HAS_POSITIVE_NUMERIC_VALUE =
				  DOMProperty.injection.HAS_POSITIVE_NUMERIC_VALUE;
				var HAS_OVERLOADED_BOOLEAN_VALUE =
				  DOMProperty.injection.HAS_OVERLOADED_BOOLEAN_VALUE;

				var hasSVG;
				if (ExecutionEnvironment.canUseDOM) {
				  var implementation = document.implementation;
				  hasSVG = (
				    implementation &&
				    implementation.hasFeature &&
				    implementation.hasFeature(
				      'http://www.w3.org/TR/SVG11/feature#BasicStructure',
				      '1.1'
				    )
				  );
				}


				var HTMLDOMPropertyConfig = {
				  isCustomAttribute: RegExp.prototype.test.bind(
				    /^(data|aria)-[a-z_][a-z\d_.\-]*$/
				  ),
				  Properties: {
				    /**
				     * Standard Properties
				     */
				    accept: null,
				    acceptCharset: null,
				    accessKey: null,
				    action: null,
				    allowFullScreen: MUST_USE_ATTRIBUTE | HAS_BOOLEAN_VALUE,
				    allowTransparency: MUST_USE_ATTRIBUTE,
				    alt: null,
				    async: HAS_BOOLEAN_VALUE,
				    autoComplete: null,
				    // autoFocus is polyfilled/normalized by AutoFocusMixin
				    // autoFocus: HAS_BOOLEAN_VALUE,
				    autoPlay: HAS_BOOLEAN_VALUE,
				    cellPadding: null,
				    cellSpacing: null,
				    charSet: MUST_USE_ATTRIBUTE,
				    checked: MUST_USE_PROPERTY | HAS_BOOLEAN_VALUE,
				    classID: MUST_USE_ATTRIBUTE,
				    // To set className on SVG elements, it's necessary to use .setAttribute;
				    // this works on HTML elements too in all browsers except IE8. Conveniently,
				    // IE8 doesn't support SVG and so we can simply use the attribute in
				    // browsers that support SVG and the property in browsers that don't,
				    // regardless of whether the element is HTML or SVG.
				    className: hasSVG ? MUST_USE_ATTRIBUTE : MUST_USE_PROPERTY,
				    cols: MUST_USE_ATTRIBUTE | HAS_POSITIVE_NUMERIC_VALUE,
				    colSpan: null,
				    content: null,
				    contentEditable: null,
				    contextMenu: MUST_USE_ATTRIBUTE,
				    controls: MUST_USE_PROPERTY | HAS_BOOLEAN_VALUE,
				    coords: null,
				    crossOrigin: null,
				    data: null, // For `<object />` acts as `src`.
				    dateTime: MUST_USE_ATTRIBUTE,
				    defer: HAS_BOOLEAN_VALUE,
				    dir: null,
				    disabled: MUST_USE_ATTRIBUTE | HAS_BOOLEAN_VALUE,
				    download: HAS_OVERLOADED_BOOLEAN_VALUE,
				    draggable: null,
				    encType: null,
				    form: MUST_USE_ATTRIBUTE,
				    formAction: MUST_USE_ATTRIBUTE,
				    formEncType: MUST_USE_ATTRIBUTE,
				    formMethod: MUST_USE_ATTRIBUTE,
				    formNoValidate: HAS_BOOLEAN_VALUE,
				    formTarget: MUST_USE_ATTRIBUTE,
				    frameBorder: MUST_USE_ATTRIBUTE,
				    height: MUST_USE_ATTRIBUTE,
				    hidden: MUST_USE_ATTRIBUTE | HAS_BOOLEAN_VALUE,
				    href: null,
				    hrefLang: null,
				    htmlFor: null,
				    httpEquiv: null,
				    icon: null,
				    id: MUST_USE_PROPERTY,
				    label: null,
				    lang: null,
				    list: MUST_USE_ATTRIBUTE,
				    loop: MUST_USE_PROPERTY | HAS_BOOLEAN_VALUE,
				    manifest: MUST_USE_ATTRIBUTE,
				    marginHeight: null,
				    marginWidth: null,
				    max: null,
				    maxLength: MUST_USE_ATTRIBUTE,
				    media: MUST_USE_ATTRIBUTE,
				    mediaGroup: null,
				    method: null,
				    min: null,
				    multiple: MUST_USE_PROPERTY | HAS_BOOLEAN_VALUE,
				    muted: MUST_USE_PROPERTY | HAS_BOOLEAN_VALUE,
				    name: null,
				    noValidate: HAS_BOOLEAN_VALUE,
				    open: null,
				    pattern: null,
				    placeholder: null,
				    poster: null,
				    preload: null,
				    radioGroup: null,
				    readOnly: MUST_USE_PROPERTY | HAS_BOOLEAN_VALUE,
				    rel: null,
				    required: HAS_BOOLEAN_VALUE,
				    role: MUST_USE_ATTRIBUTE,
				    rows: MUST_USE_ATTRIBUTE | HAS_POSITIVE_NUMERIC_VALUE,
				    rowSpan: null,
				    sandbox: null,
				    scope: null,
				    scrolling: null,
				    seamless: MUST_USE_ATTRIBUTE | HAS_BOOLEAN_VALUE,
				    selected: MUST_USE_PROPERTY | HAS_BOOLEAN_VALUE,
				    shape: null,
				    size: MUST_USE_ATTRIBUTE | HAS_POSITIVE_NUMERIC_VALUE,
				    sizes: MUST_USE_ATTRIBUTE,
				    span: HAS_POSITIVE_NUMERIC_VALUE,
				    spellCheck: null,
				    src: null,
				    srcDoc: MUST_USE_PROPERTY,
				    srcSet: MUST_USE_ATTRIBUTE,
				    start: HAS_NUMERIC_VALUE,
				    step: null,
				    style: null,
				    tabIndex: null,
				    target: null,
				    title: null,
				    type: null,
				    useMap: null,
				    value: MUST_USE_PROPERTY | HAS_SIDE_EFFECTS,
				    width: MUST_USE_ATTRIBUTE,
				    wmode: MUST_USE_ATTRIBUTE,

				    /**
				     * Non-standard Properties
				     */
				    autoCapitalize: null, // Supported in Mobile Safari for keyboard hints
				    autoCorrect: null, // Supported in Mobile Safari for keyboard hints
				    itemProp: MUST_USE_ATTRIBUTE, // Microdata: http://schema.org/docs/gs.html
				    itemScope: MUST_USE_ATTRIBUTE | HAS_BOOLEAN_VALUE, // Microdata: http://schema.org/docs/gs.html
				    itemType: MUST_USE_ATTRIBUTE, // Microdata: http://schema.org/docs/gs.html
				    property: null // Supports OG in meta tags
				  },
				  DOMAttributeNames: {
				    acceptCharset: 'accept-charset',
				    className: 'class',
				    htmlFor: 'for',
				    httpEquiv: 'http-equiv'
				  },
				  DOMPropertyNames: {
				    autoCapitalize: 'autocapitalize',
				    autoComplete: 'autocomplete',
				    autoCorrect: 'autocorrect',
				    autoFocus: 'autofocus',
				    autoPlay: 'autoplay',
				    encType: 'enctype',
				    hrefLang: 'hreflang',
				    radioGroup: 'radiogroup',
				    spellCheck: 'spellcheck',
				    srcDoc: 'srcdoc',
				    srcSet: 'srcset'
				  }
				};

				module.exports = HTMLDOMPropertyConfig;

				},{"./DOMProperty":11,"./ExecutionEnvironment":22}],24:[function(_dereq_,module,exports){
				/**
				 * Copyright 2013-2014, Facebook, Inc.
				 * All rights reserved.
				 *
				 * This source code is licensed under the BSD-style license found in the
				 * LICENSE file in the root directory of this source tree. An additional grant
				 * of patent rights can be found in the PATENTS file in the same directory.
				 *
				 * @providesModule LinkedValueUtils
				 * @typechecks static-only
				 */

				"use strict";

				var ReactPropTypes = _dereq_("./ReactPropTypes");

				var invariant = _dereq_("./invariant");

				var hasReadOnlyValue = {
				  'button': true,
				  'checkbox': true,
				  'image': true,
				  'hidden': true,
				  'radio': true,
				  'reset': true,
				  'submit': true
				};

				function _assertSingleLink(input) {
				  ("production" !== "development" ? invariant(
				    input.props.checkedLink == null || input.props.valueLink == null,
				    'Cannot provide a checkedLink and a valueLink. If you want to use ' +
				    'checkedLink, you probably don\'t want to use valueLink and vice versa.'
				  ) : invariant(input.props.checkedLink == null || input.props.valueLink == null));
				}
				function _assertValueLink(input) {
				  _assertSingleLink(input);
				  ("production" !== "development" ? invariant(
				    input.props.value == null && input.props.onChange == null,
				    'Cannot provide a valueLink and a value or onChange event. If you want ' +
				    'to use value or onChange, you probably don\'t want to use valueLink.'
				  ) : invariant(input.props.value == null && input.props.onChange == null));
				}

				function _assertCheckedLink(input) {
				  _assertSingleLink(input);
				  ("production" !== "development" ? invariant(
				    input.props.checked == null && input.props.onChange == null,
				    'Cannot provide a checkedLink and a checked property or onChange event. ' +
				    'If you want to use checked or onChange, you probably don\'t want to ' +
				    'use checkedLink'
				  ) : invariant(input.props.checked == null && input.props.onChange == null));
				}

				/**
				 * @param {SyntheticEvent} e change event to handle
				 */
				function _handleLinkedValueChange(e) {
				  /*jshint validthis:true */
				  this.props.valueLink.requestChange(e.target.value);
				}

				/**
				  * @param {SyntheticEvent} e change event to handle
				  */
				function _handleLinkedCheckChange(e) {
				  /*jshint validthis:true */
				  this.props.checkedLink.requestChange(e.target.checked);
				}

				/**
				 * Provide a linked `value` attribute for controlled forms. You should not use
				 * this outside of the ReactDOM controlled form components.
				 */
				var LinkedValueUtils = {
				  Mixin: {
				    propTypes: {
				      value: function(props, propName, componentName) {
				        if (!props[propName] ||
				            hasReadOnlyValue[props.type] ||
				            props.onChange ||
				            props.readOnly ||
				            props.disabled) {
				          return;
				        }
				        return new Error(
				          'You provided a `value` prop to a form field without an ' +
				          '`onChange` handler. This will render a read-only field. If ' +
				          'the field should be mutable use `defaultValue`. Otherwise, ' +
				          'set either `onChange` or `readOnly`.'
				        );
				      },
				      checked: function(props, propName, componentName) {
				        if (!props[propName] ||
				            props.onChange ||
				            props.readOnly ||
				            props.disabled) {
				          return;
				        }
				        return new Error(
				          'You provided a `checked` prop to a form field without an ' +
				          '`onChange` handler. This will render a read-only field. If ' +
				          'the field should be mutable use `defaultChecked`. Otherwise, ' +
				          'set either `onChange` or `readOnly`.'
				        );
				      },
				      onChange: ReactPropTypes.func
				    }
				  },

				  /**
				   * @param {ReactComponent} input Form component
				   * @return {*} current value of the input either from value prop or link.
				   */
				  getValue: function(input) {
				    if (input.props.valueLink) {
				      _assertValueLink(input);
				      return input.props.valueLink.value;
				    }
				    return input.props.value;
				  },

				  /**
				   * @param {ReactComponent} input Form component
				   * @return {*} current checked status of the input either from checked prop
				   *             or link.
				   */
				  getChecked: function(input) {
				    if (input.props.checkedLink) {
				      _assertCheckedLink(input);
				      return input.props.checkedLink.value;
				    }
				    return input.props.checked;
				  },

				  /**
				   * @param {ReactComponent} input Form component
				   * @return {function} change callback either from onChange prop or link.
				   */
				  getOnChange: function(input) {
				    if (input.props.valueLink) {
				      _assertValueLink(input);
				      return _handleLinkedValueChange;
				    } else if (input.props.checkedLink) {
				      _assertCheckedLink(input);
				      return _handleLinkedCheckChange;
				    }
				    return input.props.onChange;
				  }
				};

				module.exports = LinkedValueUtils;

				},{"./ReactPropTypes":72,"./invariant":126}],25:[function(_dereq_,module,exports){
				/**
				 * Copyright 2014, Facebook, Inc.
				 * All rights reserved.
				 *
				 * This source code is licensed under the BSD-style license found in the
				 * LICENSE file in the root directory of this source tree. An additional grant
				 * of patent rights can be found in the PATENTS file in the same directory.
				 *
				 * @providesModule LocalEventTrapMixin
				 */

				"use strict";

				var ReactBrowserEventEmitter = _dereq_("./ReactBrowserEventEmitter");

				var accumulateInto = _dereq_("./accumulateInto");
				var forEachAccumulated = _dereq_("./forEachAccumulated");
				var invariant = _dereq_("./invariant");

				function remove(event) {
				  event.remove();
				}

				var LocalEventTrapMixin = {
				  trapBubbledEvent:function(topLevelType, handlerBaseName) {
				    ("production" !== "development" ? invariant(this.isMounted(), 'Must be mounted to trap events') : invariant(this.isMounted()));
				    var listener = ReactBrowserEventEmitter.trapBubbledEvent(
				      topLevelType,
				      handlerBaseName,
				      this.getDOMNode()
				    );
				    this._localEventListeners =
				      accumulateInto(this._localEventListeners, listener);
				  },

				  // trapCapturedEvent would look nearly identical. We don't implement that
				  // method because it isn't currently needed.

				  componentWillUnmount:function() {
				    if (this._localEventListeners) {
				      forEachAccumulated(this._localEventListeners, remove);
				    }
				  }
				};

				module.exports = LocalEventTrapMixin;

				},{"./ReactBrowserEventEmitter":30,"./accumulateInto":97,"./forEachAccumulated":112,"./invariant":126}],26:[function(_dereq_,module,exports){
				/**
				 * Copyright 2013-2014, Facebook, Inc.
				 * All rights reserved.
				 *
				 * This source code is licensed under the BSD-style license found in the
				 * LICENSE file in the root directory of this source tree. An additional grant
				 * of patent rights can be found in the PATENTS file in the same directory.
				 *
				 * @providesModule MobileSafariClickEventPlugin
				 * @typechecks static-only
				 */

				"use strict";

				var EventConstants = _dereq_("./EventConstants");

				var emptyFunction = _dereq_("./emptyFunction");

				var topLevelTypes = EventConstants.topLevelTypes;

				/**
				 * Mobile Safari does not fire properly bubble click events on non-interactive
				 * elements, which means delegated click listeners do not fire. The workaround
				 * for this bug involves attaching an empty click listener on the target node.
				 *
				 * This particular plugin works around the bug by attaching an empty click
				 * listener on `touchstart` (which does fire on every element).
				 */
				var MobileSafariClickEventPlugin = {

				  eventTypes: null,

				  /**
				   * @param {string} topLevelType Record from `EventConstants`.
				   * @param {DOMEventTarget} topLevelTarget The listening component root node.
				   * @param {string} topLevelTargetID ID of `topLevelTarget`.
				   * @param {object} nativeEvent Native browser event.
				   * @return {*} An accumulation of synthetic events.
				   * @see {EventPluginHub.extractEvents}
				   */
				  extractEvents: function(
				      topLevelType,
				      topLevelTarget,
				      topLevelTargetID,
				      nativeEvent) {
				    if (topLevelType === topLevelTypes.topTouchStart) {
				      var target = nativeEvent.target;
				      if (target && !target.onclick) {
				        target.onclick = emptyFunction;
				      }
				    }
				  }

				};

				module.exports = MobileSafariClickEventPlugin;

				},{"./EventConstants":16,"./emptyFunction":107}],27:[function(_dereq_,module,exports){
				/**
				 * Copyright 2014, Facebook, Inc.
				 * All rights reserved.
				 *
				 * This source code is licensed under the BSD-style license found in the
				 * LICENSE file in the root directory of this source tree. An additional grant
				 * of patent rights can be found in the PATENTS file in the same directory.
				 *
				 * @providesModule Object.assign
				 */

				// https://people.mozilla.org/~jorendorff/es6-draft.html#sec-object.assign

				function assign(target, sources) {
				  if (target == null) {
				    throw new TypeError('Object.assign target cannot be null or undefined');
				  }

				  var to = Object(target);
				  var hasOwnProperty = Object.prototype.hasOwnProperty;

				  for (var nextIndex = 1; nextIndex < arguments.length; nextIndex++) {
				    var nextSource = arguments[nextIndex];
				    if (nextSource == null) {
				      continue;
				    }

				    var from = Object(nextSource);

				    // We don't currently support accessors nor proxies. Therefore this
				    // copy cannot throw. If we ever supported this then we must handle
				    // exceptions and side-effects. We don't support symbols so they won't
				    // be transferred.

				    for (var key in from) {
				      if (hasOwnProperty.call(from, key)) {
				        to[key] = from[key];
				      }
				    }
				  }

				  return to;
				};

				module.exports = assign;

				},{}],28:[function(_dereq_,module,exports){
				/**
				 * Copyright 2013-2014, Facebook, Inc.
				 * All rights reserved.
				 *
				 * This source code is licensed under the BSD-style license found in the
				 * LICENSE file in the root directory of this source tree. An additional grant
				 * of patent rights can be found in the PATENTS file in the same directory.
				 *
				 * @providesModule PooledClass
				 */

				"use strict";

				var invariant = _dereq_("./invariant");

				/**
				 * Static poolers. Several custom versions for each potential number of
				 * arguments. A completely generic pooler is easy to implement, but would
				 * require accessing the `arguments` object. In each of these, `this` refers to
				 * the Class itself, not an instance. If any others are needed, simply add them
				 * here, or in their own files.
				 */
				var oneArgumentPooler = function(copyFieldsFrom) {
				  var Klass = this;
				  if (Klass.instancePool.length) {
				    var instance = Klass.instancePool.pop();
				    Klass.call(instance, copyFieldsFrom);
				    return instance;
				  } else {
				    return new Klass(copyFieldsFrom);
				  }
				};

				var twoArgumentPooler = function(a1, a2) {
				  var Klass = this;
				  if (Klass.instancePool.length) {
				    var instance = Klass.instancePool.pop();
				    Klass.call(instance, a1, a2);
				    return instance;
				  } else {
				    return new Klass(a1, a2);
				  }
				};

				var threeArgumentPooler = function(a1, a2, a3) {
				  var Klass = this;
				  if (Klass.instancePool.length) {
				    var instance = Klass.instancePool.pop();
				    Klass.call(instance, a1, a2, a3);
				    return instance;
				  } else {
				    return new Klass(a1, a2, a3);
				  }
				};

				var fiveArgumentPooler = function(a1, a2, a3, a4, a5) {
				  var Klass = this;
				  if (Klass.instancePool.length) {
				    var instance = Klass.instancePool.pop();
				    Klass.call(instance, a1, a2, a3, a4, a5);
				    return instance;
				  } else {
				    return new Klass(a1, a2, a3, a4, a5);
				  }
				};

				var standardReleaser = function(instance) {
				  var Klass = this;
				  ("production" !== "development" ? invariant(
				    instance instanceof Klass,
				    'Trying to release an instance into a pool of a different type.'
				  ) : invariant(instance instanceof Klass));
				  if (instance.destructor) {
				    instance.destructor();
				  }
				  if (Klass.instancePool.length < Klass.poolSize) {
				    Klass.instancePool.push(instance);
				  }
				};

				var DEFAULT_POOL_SIZE = 10;
				var DEFAULT_POOLER = oneArgumentPooler;

				/**
				 * Augments `CopyConstructor` to be a poolable class, augmenting only the class
				 * itself (statically) not adding any prototypical fields. Any CopyConstructor
				 * you give this may have a `poolSize` property, and will look for a
				 * prototypical `destructor` on instances (optional).
				 *
				 * @param {Function} CopyConstructor Constructor that can be used to reset.
				 * @param {Function} pooler Customizable pooler.
				 */
				var addPoolingTo = function(CopyConstructor, pooler) {
				  var NewKlass = CopyConstructor;
				  NewKlass.instancePool = [];
				  NewKlass.getPooled = pooler || DEFAULT_POOLER;
				  if (!NewKlass.poolSize) {
				    NewKlass.poolSize = DEFAULT_POOL_SIZE;
				  }
				  NewKlass.release = standardReleaser;
				  return NewKlass;
				};

				var PooledClass = {
				  addPoolingTo: addPoolingTo,
				  oneArgumentPooler: oneArgumentPooler,
				  twoArgumentPooler: twoArgumentPooler,
				  threeArgumentPooler: threeArgumentPooler,
				  fiveArgumentPooler: fiveArgumentPooler
				};

				module.exports = PooledClass;

				},{"./invariant":126}],29:[function(_dereq_,module,exports){
				/**
				 * Copyright 2013-2014, Facebook, Inc.
				 * All rights reserved.
				 *
				 * This source code is licensed under the BSD-style license found in the
				 * LICENSE file in the root directory of this source tree. An additional grant
				 * of patent rights can be found in the PATENTS file in the same directory.
				 *
				 * @providesModule ReactBrowserComponentMixin
				 */

				"use strict";

				var ReactEmptyComponent = _dereq_("./ReactEmptyComponent");
				var ReactMount = _dereq_("./ReactMount");

				var invariant = _dereq_("./invariant");

				var ReactBrowserComponentMixin = {
				  /**
				   * Returns the DOM node rendered by this component.
				   *
				   * @return {DOMElement} The root node of this component.
				   * @final
				   * @protected
				   */
				  getDOMNode: function() {
				    ("production" !== "development" ? invariant(
				      this.isMounted(),
				      'getDOMNode(): A component must be mounted to have a DOM node.'
				    ) : invariant(this.isMounted()));
				    if (ReactEmptyComponent.isNullComponentID(this._rootNodeID)) {
				      return null;
				    }
				    return ReactMount.getNode(this._rootNodeID);
				  }
				};

				module.exports = ReactBrowserComponentMixin;

				},{"./ReactEmptyComponent":54,"./ReactMount":63,"./invariant":126}],30:[function(_dereq_,module,exports){
				/**
				 * Copyright 2013-2014, Facebook, Inc.
				 * All rights reserved.
				 *
				 * This source code is licensed under the BSD-style license found in the
				 * LICENSE file in the root directory of this source tree. An additional grant
				 * of patent rights can be found in the PATENTS file in the same directory.
				 *
				 * @providesModule ReactBrowserEventEmitter
				 * @typechecks static-only
				 */

				"use strict";

				var EventConstants = _dereq_("./EventConstants");
				var EventPluginHub = _dereq_("./EventPluginHub");
				var EventPluginRegistry = _dereq_("./EventPluginRegistry");
				var ReactEventEmitterMixin = _dereq_("./ReactEventEmitterMixin");
				var ViewportMetrics = _dereq_("./ViewportMetrics");

				var assign = _dereq_("./Object.assign");
				var isEventSupported = _dereq_("./isEventSupported");

				/**
				 * Summary of `ReactBrowserEventEmitter` event handling:
				 *
				 *  - Top-level delegation is used to trap most native browser events. This
				 *    may only occur in the main thread and is the responsibility of
				 *    ReactEventListener, which is injected and can therefore support pluggable
				 *    event sources. This is the only work that occurs in the main thread.
				 *
				 *  - We normalize and de-duplicate events to account for browser quirks. This
				 *    may be done in the worker thread.
				 *
				 *  - Forward these native events (with the associated top-level type used to
				 *    trap it) to `EventPluginHub`, which in turn will ask plugins if they want
				 *    to extract any synthetic events.
				 *
				 *  - The `EventPluginHub` will then process each event by annotating them with
				 *    "dispatches", a sequence of listeners and IDs that care about that event.
				 *
				 *  - The `EventPluginHub` then dispatches the events.
				 *
				 * Overview of React and the event system:
				 *
				 * +------------+    .
				 * |    DOM     |    .
				 * +------------+    .
				 *       |           .
				 *       v           .
				 * +------------+    .
				 * | ReactEvent |    .
				 * |  Listener  |    .
				 * +------------+    .                         +-----------+
				 *       |           .               +--------+|SimpleEvent|
				 *       |           .               |         |Plugin     |
				 * +-----|------+    .               v         +-----------+
				 * |     |      |    .    +--------------+                    +------------+
				 * |     +-----------.--->|EventPluginHub|                    |    Event   |
				 * |            |    .    |              |     +-----------+  | Propagators|
				 * | ReactEvent |    .    |              |     |TapEvent   |  |------------|
				 * |  Emitter   |    .    |              |<---+|Plugin     |  |other plugin|
				 * |            |    .    |              |     +-----------+  |  utilities |
				 * |     +-----------.--->|              |                    +------------+
				 * |     |      |    .    +--------------+
				 * +-----|------+    .                ^        +-----------+
				 *       |           .                |        |Enter/Leave|
				 *       +           .                +-------+|Plugin     |
				 * +-------------+   .                         +-----------+
				 * | application |   .
				 * |-------------|   .
				 * |             |   .
				 * |             |   .
				 * +-------------+   .
				 *                   .
				 *    React Core     .  General Purpose Event Plugin System
				 */

				var alreadyListeningTo = {};
				var isMonitoringScrollValue = false;
				var reactTopListenersCounter = 0;

				// For events like 'submit' which don't consistently bubble (which we trap at a
				// lower node than `document`), binding at `document` would cause duplicate
				// events so we don't include them here
				var topEventMapping = {
				  topBlur: 'blur',
				  topChange: 'change',
				  topClick: 'click',
				  topCompositionEnd: 'compositionend',
				  topCompositionStart: 'compositionstart',
				  topCompositionUpdate: 'compositionupdate',
				  topContextMenu: 'contextmenu',
				  topCopy: 'copy',
				  topCut: 'cut',
				  topDoubleClick: 'dblclick',
				  topDrag: 'drag',
				  topDragEnd: 'dragend',
				  topDragEnter: 'dragenter',
				  topDragExit: 'dragexit',
				  topDragLeave: 'dragleave',
				  topDragOver: 'dragover',
				  topDragStart: 'dragstart',
				  topDrop: 'drop',
				  topFocus: 'focus',
				  topInput: 'input',
				  topKeyDown: 'keydown',
				  topKeyPress: 'keypress',
				  topKeyUp: 'keyup',
				  topMouseDown: 'mousedown',
				  topMouseMove: 'mousemove',
				  topMouseOut: 'mouseout',
				  topMouseOver: 'mouseover',
				  topMouseUp: 'mouseup',
				  topPaste: 'paste',
				  topScroll: 'scroll',
				  topSelectionChange: 'selectionchange',
				  topTextInput: 'textInput',
				  topTouchCancel: 'touchcancel',
				  topTouchEnd: 'touchend',
				  topTouchMove: 'touchmove',
				  topTouchStart: 'touchstart',
				  topWheel: 'wheel'
				};

				/**
				 * To ensure no conflicts with other potential React instances on the page
				 */
				var topListenersIDKey = "_reactListenersID" + String(Math.random()).slice(2);

				function getListeningForDocument(mountAt) {
				  // In IE8, `mountAt` is a host object and doesn't have `hasOwnProperty`
				  // directly.
				  if (!Object.prototype.hasOwnProperty.call(mountAt, topListenersIDKey)) {
				    mountAt[topListenersIDKey] = reactTopListenersCounter++;
				    alreadyListeningTo[mountAt[topListenersIDKey]] = {};
				  }
				  return alreadyListeningTo[mountAt[topListenersIDKey]];
				}

				/**
				 * `ReactBrowserEventEmitter` is used to attach top-level event listeners. For
				 * example:
				 *
				 *   ReactBrowserEventEmitter.putListener('myID', 'onClick', myFunction);
				 *
				 * This would allocate a "registration" of `('onClick', myFunction)` on 'myID'.
				 *
				 * @internal
				 */
				var ReactBrowserEventEmitter = assign({}, ReactEventEmitterMixin, {

				  /**
				   * Injectable event backend
				   */
				  ReactEventListener: null,

				  injection: {
				    /**
				     * @param {object} ReactEventListener
				     */
				    injectReactEventListener: function(ReactEventListener) {
				      ReactEventListener.setHandleTopLevel(
				        ReactBrowserEventEmitter.handleTopLevel
				      );
				      ReactBrowserEventEmitter.ReactEventListener = ReactEventListener;
				    }
				  },

				  /**
				   * Sets whether or not any created callbacks should be enabled.
				   *
				   * @param {boolean} enabled True if callbacks should be enabled.
				   */
				  setEnabled: function(enabled) {
				    if (ReactBrowserEventEmitter.ReactEventListener) {
				      ReactBrowserEventEmitter.ReactEventListener.setEnabled(enabled);
				    }
				  },

				  /**
				   * @return {boolean} True if callbacks are enabled.
				   */
				  isEnabled: function() {
				    return !!(
				      ReactBrowserEventEmitter.ReactEventListener &&
				      ReactBrowserEventEmitter.ReactEventListener.isEnabled()
				    );
				  },

				  /**
				   * We listen for bubbled touch events on the document object.
				   *
				   * Firefox v8.01 (and possibly others) exhibited strange behavior when
				   * mounting `onmousemove` events at some node that was not the document
				   * element. The symptoms were that if your mouse is not moving over something
				   * contained within that mount point (for example on the background) the
				   * top-level listeners for `onmousemove` won't be called. However, if you
				   * register the `mousemove` on the document object, then it will of course
				   * catch all `mousemove`s. This along with iOS quirks, justifies restricting
				   * top-level listeners to the document object only, at least for these
				   * movement types of events and possibly all events.
				   *
				   * @see http://www.quirksmode.org/blog/archives/2010/09/click_event_del.html
				   *
				   * Also, `keyup`/`keypress`/`keydown` do not bubble to the window on IE, but
				   * they bubble to document.
				   *
				   * @param {string} registrationName Name of listener (e.g. `onClick`).
				   * @param {object} contentDocumentHandle Document which owns the container
				   */
				  listenTo: function(registrationName, contentDocumentHandle) {
				    var mountAt = contentDocumentHandle;
				    var isListening = getListeningForDocument(mountAt);
				    var dependencies = EventPluginRegistry.
				      registrationNameDependencies[registrationName];

				    var topLevelTypes = EventConstants.topLevelTypes;
				    for (var i = 0, l = dependencies.length; i < l; i++) {
				      var dependency = dependencies[i];
				      if (!(
				            isListening.hasOwnProperty(dependency) &&
				            isListening[dependency]
				          )) {
				        if (dependency === topLevelTypes.topWheel) {
				          if (isEventSupported('wheel')) {
				            ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent(
				              topLevelTypes.topWheel,
				              'wheel',
				              mountAt
				            );
				          } else if (isEventSupported('mousewheel')) {
				            ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent(
				              topLevelTypes.topWheel,
				              'mousewheel',
				              mountAt
				            );
				          } else {
				            // Firefox needs to capture a different mouse scroll event.
				            // @see http://www.quirksmode.org/dom/events/tests/scroll.html
				            ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent(
				              topLevelTypes.topWheel,
				              'DOMMouseScroll',
				              mountAt
				            );
				          }
				        } else if (dependency === topLevelTypes.topScroll) {

				          if (isEventSupported('scroll', true)) {
				            ReactBrowserEventEmitter.ReactEventListener.trapCapturedEvent(
				              topLevelTypes.topScroll,
				              'scroll',
				              mountAt
				            );
				          } else {
				            ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent(
				              topLevelTypes.topScroll,
				              'scroll',
				              ReactBrowserEventEmitter.ReactEventListener.WINDOW_HANDLE
				            );
				          }
				        } else if (dependency === topLevelTypes.topFocus ||
				            dependency === topLevelTypes.topBlur) {

				          if (isEventSupported('focus', true)) {
				            ReactBrowserEventEmitter.ReactEventListener.trapCapturedEvent(
				              topLevelTypes.topFocus,
				              'focus',
				              mountAt
				            );
				            ReactBrowserEventEmitter.ReactEventListener.trapCapturedEvent(
				              topLevelTypes.topBlur,
				              'blur',
				              mountAt
				            );
				          } else if (isEventSupported('focusin')) {
				            // IE has `focusin` and `focusout` events which bubble.
				            // @see http://www.quirksmode.org/blog/archives/2008/04/delegating_the.html
				            ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent(
				              topLevelTypes.topFocus,
				              'focusin',
				              mountAt
				            );
				            ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent(
				              topLevelTypes.topBlur,
				              'focusout',
				              mountAt
				            );
				          }

				          // to make sure blur and focus event listeners are only attached once
				          isListening[topLevelTypes.topBlur] = true;
				          isListening[topLevelTypes.topFocus] = true;
				        } else if (topEventMapping.hasOwnProperty(dependency)) {
				          ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent(
				            dependency,
				            topEventMapping[dependency],
				            mountAt
				          );
				        }

				        isListening[dependency] = true;
				      }
				    }
				  },

				  trapBubbledEvent: function(topLevelType, handlerBaseName, handle) {
				    return ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent(
				      topLevelType,
				      handlerBaseName,
				      handle
				    );
				  },

				  trapCapturedEvent: function(topLevelType, handlerBaseName, handle) {
				    return ReactBrowserEventEmitter.ReactEventListener.trapCapturedEvent(
				      topLevelType,
				      handlerBaseName,
				      handle
				    );
				  },

				  /**
				   * Listens to window scroll and resize events. We cache scroll values so that
				   * application code can access them without triggering reflows.
				   *
				   * NOTE: Scroll events do not bubble.
				   *
				   * @see http://www.quirksmode.org/dom/events/scroll.html
				   */
				  ensureScrollValueMonitoring: function(){
				    if (!isMonitoringScrollValue) {
				      var refresh = ViewportMetrics.refreshScrollValues;
				      ReactBrowserEventEmitter.ReactEventListener.monitorScrollValue(refresh);
				      isMonitoringScrollValue = true;
				    }
				  },

				  eventNameDispatchConfigs: EventPluginHub.eventNameDispatchConfigs,

				  registrationNameModules: EventPluginHub.registrationNameModules,

				  putListener: EventPluginHub.putListener,

				  getListener: EventPluginHub.getListener,

				  deleteListener: EventPluginHub.deleteListener,

				  deleteAllListeners: EventPluginHub.deleteAllListeners

				});

				module.exports = ReactBrowserEventEmitter;

				},{"./EventConstants":16,"./EventPluginHub":18,"./EventPluginRegistry":19,"./Object.assign":27,"./ReactEventEmitterMixin":56,"./ViewportMetrics":96,"./isEventSupported":127}],31:[function(_dereq_,module,exports){
				/**
				 * Copyright 2013-2014, Facebook, Inc.
				 * All rights reserved.
				 *
				 * This source code is licensed under the BSD-style license found in the
				 * LICENSE file in the root directory of this source tree. An additional grant
				 * of patent rights can be found in the PATENTS file in the same directory.
				 *
				 * @providesModule ReactChildren
				 */

				"use strict";

				var PooledClass = _dereq_("./PooledClass");

				var traverseAllChildren = _dereq_("./traverseAllChildren");
				var warning = _dereq_("./warning");

				var twoArgumentPooler = PooledClass.twoArgumentPooler;
				var threeArgumentPooler = PooledClass.threeArgumentPooler;

				/**
				 * PooledClass representing the bookkeeping associated with performing a child
				 * traversal. Allows avoiding binding callbacks.
				 *
				 * @constructor ForEachBookKeeping
				 * @param {!function} forEachFunction Function to perform traversal with.
				 * @param {?*} forEachContext Context to perform context with.
				 */
				function ForEachBookKeeping(forEachFunction, forEachContext) {
				  this.forEachFunction = forEachFunction;
				  this.forEachContext = forEachContext;
				}
				PooledClass.addPoolingTo(ForEachBookKeeping, twoArgumentPooler);

				function forEachSingleChild(traverseContext, child, name, i) {
				  var forEachBookKeeping = traverseContext;
				  forEachBookKeeping.forEachFunction.call(
				    forEachBookKeeping.forEachContext, child, i);
				}

				/**
				 * Iterates through children that are typically specified as `props.children`.
				 *
				 * The provided forEachFunc(child, index) will be called for each
				 * leaf child.
				 *
				 * @param {?*} children Children tree container.
				 * @param {function(*, int)} forEachFunc.
				 * @param {*} forEachContext Context for forEachContext.
				 */
				function forEachChildren(children, forEachFunc, forEachContext) {
				  if (children == null) {
				    return children;
				  }

				  var traverseContext =
				    ForEachBookKeeping.getPooled(forEachFunc, forEachContext);
				  traverseAllChildren(children, forEachSingleChild, traverseContext);
				  ForEachBookKeeping.release(traverseContext);
				}

				/**
				 * PooledClass representing the bookkeeping associated with performing a child
				 * mapping. Allows avoiding binding callbacks.
				 *
				 * @constructor MapBookKeeping
				 * @param {!*} mapResult Object containing the ordered map of results.
				 * @param {!function} mapFunction Function to perform mapping with.
				 * @param {?*} mapContext Context to perform mapping with.
				 */
				function MapBookKeeping(mapResult, mapFunction, mapContext) {
				  this.mapResult = mapResult;
				  this.mapFunction = mapFunction;
				  this.mapContext = mapContext;
				}
				PooledClass.addPoolingTo(MapBookKeeping, threeArgumentPooler);

				function mapSingleChildIntoContext(traverseContext, child, name, i) {
				  var mapBookKeeping = traverseContext;
				  var mapResult = mapBookKeeping.mapResult;

				  var keyUnique = !mapResult.hasOwnProperty(name);
				  ("production" !== "development" ? warning(
				    keyUnique,
				    'ReactChildren.map(...): Encountered two children with the same key, ' +
				    '`%s`. Child keys must be unique; when two children share a key, only ' +
				    'the first child will be used.',
				    name
				  ) : null);

				  if (keyUnique) {
				    var mappedChild =
				      mapBookKeeping.mapFunction.call(mapBookKeeping.mapContext, child, i);
				    mapResult[name] = mappedChild;
				  }
				}

				/**
				 * Maps children that are typically specified as `props.children`.
				 *
				 * The provided mapFunction(child, key, index) will be called for each
				 * leaf child.
				 *
				 * TODO: This may likely break any calls to `ReactChildren.map` that were
				 * previously relying on the fact that we guarded against null children.
				 *
				 * @param {?*} children Children tree container.
				 * @param {function(*, int)} mapFunction.
				 * @param {*} mapContext Context for mapFunction.
				 * @return {object} Object containing the ordered map of results.
				 */
				function mapChildren(children, func, context) {
				  if (children == null) {
				    return children;
				  }

				  var mapResult = {};
				  var traverseContext = MapBookKeeping.getPooled(mapResult, func, context);
				  traverseAllChildren(children, mapSingleChildIntoContext, traverseContext);
				  MapBookKeeping.release(traverseContext);
				  return mapResult;
				}

				function forEachSingleChildDummy(traverseContext, child, name, i) {
				  return null;
				}

				/**
				 * Count the number of children that are typically specified as
				 * `props.children`.
				 *
				 * @param {?*} children Children tree container.
				 * @return {number} The number of children.
				 */
				function countChildren(children, context) {
				  return traverseAllChildren(children, forEachSingleChildDummy, null);
				}

				var ReactChildren = {
				  forEach: forEachChildren,
				  map: mapChildren,
				  count: countChildren
				};

				module.exports = ReactChildren;

				},{"./PooledClass":28,"./traverseAllChildren":144,"./warning":145}],32:[function(_dereq_,module,exports){
				/**
				 * Copyright 2013-2014, Facebook, Inc.
				 * All rights reserved.
				 *
				 * This source code is licensed under the BSD-style license found in the
				 * LICENSE file in the root directory of this source tree. An additional grant
				 * of patent rights can be found in the PATENTS file in the same directory.
				 *
				 * @providesModule ReactComponent
				 */

				"use strict";

				var ReactElement = _dereq_("./ReactElement");
				var ReactOwner = _dereq_("./ReactOwner");
				var ReactUpdates = _dereq_("./ReactUpdates");

				var assign = _dereq_("./Object.assign");
				var invariant = _dereq_("./invariant");
				var keyMirror = _dereq_("./keyMirror");

				/**
				 * Every React component is in one of these life cycles.
				 */
				var ComponentLifeCycle = keyMirror({
				  /**
				   * Mounted components have a DOM node representation and are capable of
				   * receiving new props.
				   */
				  MOUNTED: null,
				  /**
				   * Unmounted components are inactive and cannot receive new props.
				   */
				  UNMOUNTED: null
				});

				var injected = false;

				/**
				 * Optionally injectable environment dependent cleanup hook. (server vs.
				 * browser etc). Example: A browser system caches DOM nodes based on component
				 * ID and must remove that cache entry when this instance is unmounted.
				 *
				 * @private
				 */
				var unmountIDFromEnvironment = null;

				/**
				 * The "image" of a component tree, is the platform specific (typically
				 * serialized) data that represents a tree of lower level UI building blocks.
				 * On the web, this "image" is HTML markup which describes a construction of
				 * low level `div` and `span` nodes. Other platforms may have different
				 * encoding of this "image". This must be injected.
				 *
				 * @private
				 */
				var mountImageIntoNode = null;

				/**
				 * Components are the basic units of composition in React.
				 *
				 * Every component accepts a set of keyed input parameters known as "props" that
				 * are initialized by the constructor. Once a component is mounted, the props
				 * can be mutated using `setProps` or `replaceProps`.
				 *
				 * Every component is capable of the following operations:
				 *
				 *   `mountComponent`
				 *     Initializes the component, renders markup, and registers event listeners.
				 *
				 *   `receiveComponent`
				 *     Updates the rendered DOM nodes to match the given component.
				 *
				 *   `unmountComponent`
				 *     Releases any resources allocated by this component.
				 *
				 * Components can also be "owned" by other components. Being owned by another
				 * component means being constructed by that component. This is different from
				 * being the child of a component, which means having a DOM representation that
				 * is a child of the DOM representation of that component.
				 *
				 * @class ReactComponent
				 */
				var ReactComponent = {

				  injection: {
				    injectEnvironment: function(ReactComponentEnvironment) {
				      ("production" !== "development" ? invariant(
				        !injected,
				        'ReactComponent: injectEnvironment() can only be called once.'
				      ) : invariant(!injected));
				      mountImageIntoNode = ReactComponentEnvironment.mountImageIntoNode;
				      unmountIDFromEnvironment =
				        ReactComponentEnvironment.unmountIDFromEnvironment;
				      ReactComponent.BackendIDOperations =
				        ReactComponentEnvironment.BackendIDOperations;
				      injected = true;
				    }
				  },

				  /**
				   * @internal
				   */
				  LifeCycle: ComponentLifeCycle,

				  /**
				   * Injected module that provides ability to mutate individual properties.
				   * Injected into the base class because many different subclasses need access
				   * to this.
				   *
				   * @internal
				   */
				  BackendIDOperations: null,

				  /**
				   * Base functionality for every ReactComponent constructor. Mixed into the
				   * `ReactComponent` prototype, but exposed statically for easy access.
				   *
				   * @lends {ReactComponent.prototype}
				   */
				  Mixin: {

				    /**
				     * Checks whether or not this component is mounted.
				     *
				     * @return {boolean} True if mounted, false otherwise.
				     * @final
				     * @protected
				     */
				    isMounted: function() {
				      return this._lifeCycleState === ComponentLifeCycle.MOUNTED;
				    },

				    /**
				     * Sets a subset of the props.
				     *
				     * @param {object} partialProps Subset of the next props.
				     * @param {?function} callback Called after props are updated.
				     * @final
				     * @public
				     */
				    setProps: function(partialProps, callback) {
				      // Merge with the pending element if it exists, otherwise with existing
				      // element props.
				      var element = this._pendingElement || this._currentElement;
				      this.replaceProps(
				        assign({}, element.props, partialProps),
				        callback
				      );
				    },

				    /**
				     * Replaces all of the props.
				     *
				     * @param {object} props New props.
				     * @param {?function} callback Called after props are updated.
				     * @final
				     * @public
				     */
				    replaceProps: function(props, callback) {
				      ("production" !== "development" ? invariant(
				        this.isMounted(),
				        'replaceProps(...): Can only update a mounted component.'
				      ) : invariant(this.isMounted()));
				      ("production" !== "development" ? invariant(
				        this._mountDepth === 0,
				        'replaceProps(...): You called `setProps` or `replaceProps` on a ' +
				        'component with a parent. This is an anti-pattern since props will ' +
				        'get reactively updated when rendered. Instead, change the owner\'s ' +
				        '`render` method to pass the correct value as props to the component ' +
				        'where it is created.'
				      ) : invariant(this._mountDepth === 0));
				      // This is a deoptimized path. We optimize for always having a element.
				      // This creates an extra internal element.
				      this._pendingElement = ReactElement.cloneAndReplaceProps(
				        this._pendingElement || this._currentElement,
				        props
				      );
				      ReactUpdates.enqueueUpdate(this, callback);
				    },

				    /**
				     * Schedule a partial update to the props. Only used for internal testing.
				     *
				     * @param {object} partialProps Subset of the next props.
				     * @param {?function} callback Called after props are updated.
				     * @final
				     * @internal
				     */
				    _setPropsInternal: function(partialProps, callback) {
				      // This is a deoptimized path. We optimize for always having a element.
				      // This creates an extra internal element.
				      var element = this._pendingElement || this._currentElement;
				      this._pendingElement = ReactElement.cloneAndReplaceProps(
				        element,
				        assign({}, element.props, partialProps)
				      );
				      ReactUpdates.enqueueUpdate(this, callback);
				    },

				    /**
				     * Base constructor for all React components.
				     *
				     * Subclasses that override this method should make sure to invoke
				     * `ReactComponent.Mixin.construct.call(this, ...)`.
				     *
				     * @param {ReactElement} element
				     * @internal
				     */
				    construct: function(element) {
				      // This is the public exposed props object after it has been processed
				      // with default props. The element's props represents the true internal
				      // state of the props.
				      this.props = element.props;
				      // Record the component responsible for creating this component.
				      // This is accessible through the element but we maintain an extra
				      // field for compatibility with devtools and as a way to make an
				      // incremental update. TODO: Consider deprecating this field.
				      this._owner = element._owner;

				      // All components start unmounted.
				      this._lifeCycleState = ComponentLifeCycle.UNMOUNTED;

				      // See ReactUpdates.
				      this._pendingCallbacks = null;

				      // We keep the old element and a reference to the pending element
				      // to track updates.
				      this._currentElement = element;
				      this._pendingElement = null;
				    },

				    /**
				     * Initializes the component, renders markup, and registers event listeners.
				     *
				     * NOTE: This does not insert any nodes into the DOM.
				     *
				     * Subclasses that override this method should make sure to invoke
				     * `ReactComponent.Mixin.mountComponent.call(this, ...)`.
				     *
				     * @param {string} rootID DOM ID of the root node.
				     * @param {ReactReconcileTransaction|ReactServerRenderingTransaction} transaction
				     * @param {number} mountDepth number of components in the owner hierarchy.
				     * @return {?string} Rendered markup to be inserted into the DOM.
				     * @internal
				     */
				    mountComponent: function(rootID, transaction, mountDepth) {
				      ("production" !== "development" ? invariant(
				        !this.isMounted(),
				        'mountComponent(%s, ...): Can only mount an unmounted component. ' +
				        'Make sure to avoid storing components between renders or reusing a ' +
				        'single component instance in multiple places.',
				        rootID
				      ) : invariant(!this.isMounted()));
				      var ref = this._currentElement.ref;
				      if (ref != null) {
				        var owner = this._currentElement._owner;
				        ReactOwner.addComponentAsRefTo(this, ref, owner);
				      }
				      this._rootNodeID = rootID;
				      this._lifeCycleState = ComponentLifeCycle.MOUNTED;
				      this._mountDepth = mountDepth;
				      // Effectively: return '';
				    },

				    /**
				     * Releases any resources allocated by `mountComponent`.
				     *
				     * NOTE: This does not remove any nodes from the DOM.
				     *
				     * Subclasses that override this method should make sure to invoke
				     * `ReactComponent.Mixin.unmountComponent.call(this)`.
				     *
				     * @internal
				     */
				    unmountComponent: function() {
				      ("production" !== "development" ? invariant(
				        this.isMounted(),
				        'unmountComponent(): Can only unmount a mounted component.'
				      ) : invariant(this.isMounted()));
				      var ref = this._currentElement.ref;
				      if (ref != null) {
				        ReactOwner.removeComponentAsRefFrom(this, ref, this._owner);
				      }
				      unmountIDFromEnvironment(this._rootNodeID);
				      this._rootNodeID = null;
				      this._lifeCycleState = ComponentLifeCycle.UNMOUNTED;
				    },

				    /**
				     * Given a new instance of this component, updates the rendered DOM nodes
				     * as if that instance was rendered instead.
				     *
				     * Subclasses that override this method should make sure to invoke
				     * `ReactComponent.Mixin.receiveComponent.call(this, ...)`.
				     *
				     * @param {object} nextComponent Next set of properties.
				     * @param {ReactReconcileTransaction} transaction
				     * @internal
				     */
				    receiveComponent: function(nextElement, transaction) {
				      ("production" !== "development" ? invariant(
				        this.isMounted(),
				        'receiveComponent(...): Can only update a mounted component.'
				      ) : invariant(this.isMounted()));
				      this._pendingElement = nextElement;
				      this.performUpdateIfNecessary(transaction);
				    },

				    /**
				     * If `_pendingElement` is set, update the component.
				     *
				     * @param {ReactReconcileTransaction} transaction
				     * @internal
				     */
				    performUpdateIfNecessary: function(transaction) {
				      if (this._pendingElement == null) {
				        return;
				      }
				      var prevElement = this._currentElement;
				      var nextElement = this._pendingElement;
				      this._currentElement = nextElement;
				      this.props = nextElement.props;
				      this._owner = nextElement._owner;
				      this._pendingElement = null;
				      this.updateComponent(transaction, prevElement);
				    },

				    /**
				     * Updates the component's currently mounted representation.
				     *
				     * @param {ReactReconcileTransaction} transaction
				     * @param {object} prevElement
				     * @internal
				     */
				    updateComponent: function(transaction, prevElement) {
				      var nextElement = this._currentElement;

				      // If either the owner or a `ref` has changed, make sure the newest owner
				      // has stored a reference to `this`, and the previous owner (if different)
				      // has forgotten the reference to `this`. We use the element instead
				      // of the public this.props because the post processing cannot determine
				      // a ref. The ref conceptually lives on the element.

				      // TODO: Should this even be possible? The owner cannot change because
				      // it's forbidden by shouldUpdateReactComponent. The ref can change
				      // if you swap the keys of but not the refs. Reconsider where this check
				      // is made. It probably belongs where the key checking and
				      // instantiateReactComponent is done.

				      if (nextElement._owner !== prevElement._owner ||
				          nextElement.ref !== prevElement.ref) {
				        if (prevElement.ref != null) {
				          ReactOwner.removeComponentAsRefFrom(
				            this, prevElement.ref, prevElement._owner
				          );
				        }
				        // Correct, even if the owner is the same, and only the ref has changed.
				        if (nextElement.ref != null) {
				          ReactOwner.addComponentAsRefTo(
				            this,
				            nextElement.ref,
				            nextElement._owner
				          );
				        }
				      }
				    },

				    /**
				     * Mounts this component and inserts it into the DOM.
				     *
				     * @param {string} rootID DOM ID of the root node.
				     * @param {DOMElement} container DOM element to mount into.
				     * @param {boolean} shouldReuseMarkup If true, do not insert markup
				     * @final
				     * @internal
				     * @see {ReactMount.render}
				     */
				    mountComponentIntoNode: function(rootID, container, shouldReuseMarkup) {
				      var transaction = ReactUpdates.ReactReconcileTransaction.getPooled();
				      transaction.perform(
				        this._mountComponentIntoNode,
				        this,
				        rootID,
				        container,
				        transaction,
				        shouldReuseMarkup
				      );
				      ReactUpdates.ReactReconcileTransaction.release(transaction);
				    },

				    /**
				     * @param {string} rootID DOM ID of the root node.
				     * @param {DOMElement} container DOM element to mount into.
				     * @param {ReactReconcileTransaction} transaction
				     * @param {boolean} shouldReuseMarkup If true, do not insert markup
				     * @final
				     * @private
				     */
				    _mountComponentIntoNode: function(
				        rootID,
				        container,
				        transaction,
				        shouldReuseMarkup) {
				      var markup = this.mountComponent(rootID, transaction, 0);
				      mountImageIntoNode(markup, container, shouldReuseMarkup);
				    },

				    /**
				     * Checks if this component is owned by the supplied `owner` component.
				     *
				     * @param {ReactComponent} owner Component to check.
				     * @return {boolean} True if `owners` owns this component.
				     * @final
				     * @internal
				     */
				    isOwnedBy: function(owner) {
				      return this._owner === owner;
				    },

				    /**
				     * Gets another component, that shares the same owner as this one, by ref.
				     *
				     * @param {string} ref of a sibling Component.
				     * @return {?ReactComponent} the actual sibling Component.
				     * @final
				     * @internal
				     */
				    getSiblingByRef: function(ref) {
				      var owner = this._owner;
				      if (!owner || !owner.refs) {
				        return null;
				      }
				      return owner.refs[ref];
				    }
				  }
				};

				module.exports = ReactComponent;

				},{"./Object.assign":27,"./ReactElement":52,"./ReactOwner":67,"./ReactUpdates":79,"./invariant":126,"./keyMirror":132}],33:[function(_dereq_,module,exports){
				/**
				 * Copyright 2013-2014, Facebook, Inc.
				 * All rights reserved.
				 *
				 * This source code is licensed under the BSD-style license found in the
				 * LICENSE file in the root directory of this source tree. An additional grant
				 * of patent rights can be found in the PATENTS file in the same directory.
				 *
				 * @providesModule ReactComponentBrowserEnvironment
				 */

				/*jslint evil: true */

				"use strict";

				var ReactDOMIDOperations = _dereq_("./ReactDOMIDOperations");
				var ReactMarkupChecksum = _dereq_("./ReactMarkupChecksum");
				var ReactMount = _dereq_("./ReactMount");
				var ReactPerf = _dereq_("./ReactPerf");
				var ReactReconcileTransaction = _dereq_("./ReactReconcileTransaction");

				var getReactRootElementInContainer = _dereq_("./getReactRootElementInContainer");
				var invariant = _dereq_("./invariant");
				var setInnerHTML = _dereq_("./setInnerHTML");


				var ELEMENT_NODE_TYPE = 1;
				var DOC_NODE_TYPE = 9;


				/**
				 * Abstracts away all functionality of `ReactComponent` requires knowledge of
				 * the browser context.
				 */
				var ReactComponentBrowserEnvironment = {
				  ReactReconcileTransaction: ReactReconcileTransaction,

				  BackendIDOperations: ReactDOMIDOperations,

				  /**
				   * If a particular environment requires that some resources be cleaned up,
				   * specify this in the injected Mixin. In the DOM, we would likely want to
				   * purge any cached node ID lookups.
				   *
				   * @private
				   */
				  unmountIDFromEnvironment: function(rootNodeID) {
				    ReactMount.purgeID(rootNodeID);
				  },

				  /**
				   * @param {string} markup Markup string to place into the DOM Element.
				   * @param {DOMElement} container DOM Element to insert markup into.
				   * @param {boolean} shouldReuseMarkup Should reuse the existing markup in the
				   * container if possible.
				   */
				  mountImageIntoNode: ReactPerf.measure(
				    'ReactComponentBrowserEnvironment',
				    'mountImageIntoNode',
				    function(markup, container, shouldReuseMarkup) {
				      ("production" !== "development" ? invariant(
				        container && (
				          container.nodeType === ELEMENT_NODE_TYPE ||
				            container.nodeType === DOC_NODE_TYPE
				        ),
				        'mountComponentIntoNode(...): Target container is not valid.'
				      ) : invariant(container && (
				        container.nodeType === ELEMENT_NODE_TYPE ||
				          container.nodeType === DOC_NODE_TYPE
				      )));

				      if (shouldReuseMarkup) {
				        if (ReactMarkupChecksum.canReuseMarkup(
				          markup,
				          getReactRootElementInContainer(container))) {
				          return;
				        } else {
				          ("production" !== "development" ? invariant(
				            container.nodeType !== DOC_NODE_TYPE,
				            'You\'re trying to render a component to the document using ' +
				            'server rendering but the checksum was invalid. This usually ' +
				            'means you rendered a different component type or props on ' +
				            'the client from the one on the server, or your render() ' +
				            'methods are impure. React cannot handle this case due to ' +
				            'cross-browser quirks by rendering at the document root. You ' +
				            'should look for environment dependent code in your components ' +
				            'and ensure the props are the same client and server side.'
				          ) : invariant(container.nodeType !== DOC_NODE_TYPE));

				          if ("production" !== "development") {
				            console.warn(
				              'React attempted to use reuse markup in a container but the ' +
				              'checksum was invalid. This generally means that you are ' +
				              'using server rendering and the markup generated on the ' +
				              'server was not what the client was expecting. React injected ' +
				              'new markup to compensate which works but you have lost many ' +
				              'of the benefits of server rendering. Instead, figure out ' +
				              'why the markup being generated is different on the client ' +
				              'or server.'
				            );
				          }
				        }
				      }

				      ("production" !== "development" ? invariant(
				        container.nodeType !== DOC_NODE_TYPE,
				        'You\'re trying to render a component to the document but ' +
				          'you didn\'t use server rendering. We can\'t do this ' +
				          'without using server rendering due to cross-browser quirks. ' +
				          'See renderComponentToString() for server rendering.'
				      ) : invariant(container.nodeType !== DOC_NODE_TYPE));

				      setInnerHTML(container, markup);
				    }
				  )
				};

				module.exports = ReactComponentBrowserEnvironment;

				},{"./ReactDOMIDOperations":41,"./ReactMarkupChecksum":62,"./ReactMount":63,"./ReactPerf":68,"./ReactReconcileTransaction":74,"./getReactRootElementInContainer":120,"./invariant":126,"./setInnerHTML":140}],34:[function(_dereq_,module,exports){
				/**
				 * Copyright 2013-2014, Facebook, Inc.
				 * All rights reserved.
				 *
				 * This source code is licensed under the BSD-style license found in the
				 * LICENSE file in the root directory of this source tree. An additional grant
				 * of patent rights can be found in the PATENTS file in the same directory.
				 *
				 * @providesModule ReactCompositeComponent
				 */

				"use strict";

				var ReactComponent = _dereq_("./ReactComponent");
				var ReactContext = _dereq_("./ReactContext");
				var ReactCurrentOwner = _dereq_("./ReactCurrentOwner");
				var ReactElement = _dereq_("./ReactElement");
				var ReactElementValidator = _dereq_("./ReactElementValidator");
				var ReactEmptyComponent = _dereq_("./ReactEmptyComponent");
				var ReactErrorUtils = _dereq_("./ReactErrorUtils");
				var ReactLegacyElement = _dereq_("./ReactLegacyElement");
				var ReactOwner = _dereq_("./ReactOwner");
				var ReactPerf = _dereq_("./ReactPerf");
				var ReactPropTransferer = _dereq_("./ReactPropTransferer");
				var ReactPropTypeLocations = _dereq_("./ReactPropTypeLocations");
				var ReactPropTypeLocationNames = _dereq_("./ReactPropTypeLocationNames");
				var ReactUpdates = _dereq_("./ReactUpdates");

				var assign = _dereq_("./Object.assign");
				var instantiateReactComponent = _dereq_("./instantiateReactComponent");
				var invariant = _dereq_("./invariant");
				var keyMirror = _dereq_("./keyMirror");
				var keyOf = _dereq_("./keyOf");
				var monitorCodeUse = _dereq_("./monitorCodeUse");
				var mapObject = _dereq_("./mapObject");
				var shouldUpdateReactComponent = _dereq_("./shouldUpdateReactComponent");
				var warning = _dereq_("./warning");

				var MIXINS_KEY = keyOf({mixins: null});

				/**
				 * Policies that describe methods in `ReactCompositeComponentInterface`.
				 */
				var SpecPolicy = keyMirror({
				  /**
				   * These methods may be defined only once by the class specification or mixin.
				   */
				  DEFINE_ONCE: null,
				  /**
				   * These methods may be defined by both the class specification and mixins.
				   * Subsequent definitions will be chained. These methods must return void.
				   */
				  DEFINE_MANY: null,
				  /**
				   * These methods are overriding the base ReactCompositeComponent class.
				   */
				  OVERRIDE_BASE: null,
				  /**
				   * These methods are similar to DEFINE_MANY, except we assume they return
				   * objects. We try to merge the keys of the return values of all the mixed in
				   * functions. If there is a key conflict we throw.
				   */
				  DEFINE_MANY_MERGED: null
				});


				var injectedMixins = [];

				/**
				 * Composite components are higher-level components that compose other composite
				 * or native components.
				 *
				 * To create a new type of `ReactCompositeComponent`, pass a specification of
				 * your new class to `React.createClass`. The only requirement of your class
				 * specification is that you implement a `render` method.
				 *
				 *   var MyComponent = React.createClass({
				 *     render: function() {
				 *       return <div>Hello World</div>;
				 *     }
				 *   });
				 *
				 * The class specification supports a specific protocol of methods that have
				 * special meaning (e.g. `render`). See `ReactCompositeComponentInterface` for
				 * more the comprehensive protocol. Any other properties and methods in the
				 * class specification will available on the prototype.
				 *
				 * @interface ReactCompositeComponentInterface
				 * @internal
				 */
				var ReactCompositeComponentInterface = {

				  /**
				   * An array of Mixin objects to include when defining your component.
				   *
				   * @type {array}
				   * @optional
				   */
				  mixins: SpecPolicy.DEFINE_MANY,

				  /**
				   * An object containing properties and methods that should be defined on
				   * the component's constructor instead of its prototype (static methods).
				   *
				   * @type {object}
				   * @optional
				   */
				  statics: SpecPolicy.DEFINE_MANY,

				  /**
				   * Definition of prop types for this component.
				   *
				   * @type {object}
				   * @optional
				   */
				  propTypes: SpecPolicy.DEFINE_MANY,

				  /**
				   * Definition of context types for this component.
				   *
				   * @type {object}
				   * @optional
				   */
				  contextTypes: SpecPolicy.DEFINE_MANY,

				  /**
				   * Definition of context types this component sets for its children.
				   *
				   * @type {object}
				   * @optional
				   */
				  childContextTypes: SpecPolicy.DEFINE_MANY,

				  // ==== Definition methods ====

				  /**
				   * Invoked when the component is mounted. Values in the mapping will be set on
				   * `this.props` if that prop is not specified (i.e. using an `in` check).
				   *
				   * This method is invoked before `getInitialState` and therefore cannot rely
				   * on `this.state` or use `this.setState`.
				   *
				   * @return {object}
				   * @optional
				   */
				  getDefaultProps: SpecPolicy.DEFINE_MANY_MERGED,

				  /**
				   * Invoked once before the component is mounted. The return value will be used
				   * as the initial value of `this.state`.
				   *
				   *   getInitialState: function() {
				   *     return {
				   *       isOn: false,
				   *       fooBaz: new BazFoo()
				   *     }
				   *   }
				   *
				   * @return {object}
				   * @optional
				   */
				  getInitialState: SpecPolicy.DEFINE_MANY_MERGED,

				  /**
				   * @return {object}
				   * @optional
				   */
				  getChildContext: SpecPolicy.DEFINE_MANY_MERGED,

				  /**
				   * Uses props from `this.props` and state from `this.state` to render the
				   * structure of the component.
				   *
				   * No guarantees are made about when or how often this method is invoked, so
				   * it must not have side effects.
				   *
				   *   render: function() {
				   *     var name = this.props.name;
				   *     return <div>Hello, {name}!</div>;
				   *   }
				   *
				   * @return {ReactComponent}
				   * @nosideeffects
				   * @required
				   */
				  render: SpecPolicy.DEFINE_ONCE,



				  // ==== Delegate methods ====

				  /**
				   * Invoked when the component is initially created and about to be mounted.
				   * This may have side effects, but any external subscriptions or data created
				   * by this method must be cleaned up in `componentWillUnmount`.
				   *
				   * @optional
				   */
				  componentWillMount: SpecPolicy.DEFINE_MANY,

				  /**
				   * Invoked when the component has been mounted and has a DOM representation.
				   * However, there is no guarantee that the DOM node is in the document.
				   *
				   * Use this as an opportunity to operate on the DOM when the component has
				   * been mounted (initialized and rendered) for the first time.
				   *
				   * @param {DOMElement} rootNode DOM element representing the component.
				   * @optional
				   */
				  componentDidMount: SpecPolicy.DEFINE_MANY,

				  /**
				   * Invoked before the component receives new props.
				   *
				   * Use this as an opportunity to react to a prop transition by updating the
				   * state using `this.setState`. Current props are accessed via `this.props`.
				   *
				   *   componentWillReceiveProps: function(nextProps, nextContext) {
				   *     this.setState({
				   *       likesIncreasing: nextProps.likeCount > this.props.likeCount
				   *     });
				   *   }
				   *
				   * NOTE: There is no equivalent `componentWillReceiveState`. An incoming prop
				   * transition may cause a state change, but the opposite is not true. If you
				   * need it, you are probably looking for `componentWillUpdate`.
				   *
				   * @param {object} nextProps
				   * @optional
				   */
				  componentWillReceiveProps: SpecPolicy.DEFINE_MANY,

				  /**
				   * Invoked while deciding if the component should be updated as a result of
				   * receiving new props, state and/or context.
				   *
				   * Use this as an opportunity to `return false` when you're certain that the
				   * transition to the new props/state/context will not require a component
				   * update.
				   *
				   *   shouldComponentUpdate: function(nextProps, nextState, nextContext) {
				   *     return !equal(nextProps, this.props) ||
				   *       !equal(nextState, this.state) ||
				   *       !equal(nextContext, this.context);
				   *   }
				   *
				   * @param {object} nextProps
				   * @param {?object} nextState
				   * @param {?object} nextContext
				   * @return {boolean} True if the component should update.
				   * @optional
				   */
				  shouldComponentUpdate: SpecPolicy.DEFINE_ONCE,

				  /**
				   * Invoked when the component is about to update due to a transition from
				   * `this.props`, `this.state` and `this.context` to `nextProps`, `nextState`
				   * and `nextContext`.
				   *
				   * Use this as an opportunity to perform preparation before an update occurs.
				   *
				   * NOTE: You **cannot** use `this.setState()` in this method.
				   *
				   * @param {object} nextProps
				   * @param {?object} nextState
				   * @param {?object} nextContext
				   * @param {ReactReconcileTransaction} transaction
				   * @optional
				   */
				  componentWillUpdate: SpecPolicy.DEFINE_MANY,

				  /**
				   * Invoked when the component's DOM representation has been updated.
				   *
				   * Use this as an opportunity to operate on the DOM when the component has
				   * been updated.
				   *
				   * @param {object} prevProps
				   * @param {?object} prevState
				   * @param {?object} prevContext
				   * @param {DOMElement} rootNode DOM element representing the component.
				   * @optional
				   */
				  componentDidUpdate: SpecPolicy.DEFINE_MANY,

				  /**
				   * Invoked when the component is about to be removed from its parent and have
				   * its DOM representation destroyed.
				   *
				   * Use this as an opportunity to deallocate any external resources.
				   *
				   * NOTE: There is no `componentDidUnmount` since your component will have been
				   * destroyed by that point.
				   *
				   * @optional
				   */
				  componentWillUnmount: SpecPolicy.DEFINE_MANY,



				  // ==== Advanced methods ====

				  /**
				   * Updates the component's currently mounted DOM representation.
				   *
				   * By default, this implements React's rendering and reconciliation algorithm.
				   * Sophisticated clients may wish to override this.
				   *
				   * @param {ReactReconcileTransaction} transaction
				   * @internal
				   * @overridable
				   */
				  updateComponent: SpecPolicy.OVERRIDE_BASE

				};

				/**
				 * Mapping from class specification keys to special processing functions.
				 *
				 * Although these are declared like instance properties in the specification
				 * when defining classes using `React.createClass`, they are actually static
				 * and are accessible on the constructor instead of the prototype. Despite
				 * being static, they must be defined outside of the "statics" key under
				 * which all other static methods are defined.
				 */
				var RESERVED_SPEC_KEYS = {
				  displayName: function(Constructor, displayName) {
				    Constructor.displayName = displayName;
				  },
				  mixins: function(Constructor, mixins) {
				    if (mixins) {
				      for (var i = 0; i < mixins.length; i++) {
				        mixSpecIntoComponent(Constructor, mixins[i]);
				      }
				    }
				  },
				  childContextTypes: function(Constructor, childContextTypes) {
				    validateTypeDef(
				      Constructor,
				      childContextTypes,
				      ReactPropTypeLocations.childContext
				    );
				    Constructor.childContextTypes = assign(
				      {},
				      Constructor.childContextTypes,
				      childContextTypes
				    );
				  },
				  contextTypes: function(Constructor, contextTypes) {
				    validateTypeDef(
				      Constructor,
				      contextTypes,
				      ReactPropTypeLocations.context
				    );
				    Constructor.contextTypes = assign(
				      {},
				      Constructor.contextTypes,
				      contextTypes
				    );
				  },
				  /**
				   * Special case getDefaultProps which should move into statics but requires
				   * automatic merging.
				   */
				  getDefaultProps: function(Constructor, getDefaultProps) {
				    if (Constructor.getDefaultProps) {
				      Constructor.getDefaultProps = createMergedResultFunction(
				        Constructor.getDefaultProps,
				        getDefaultProps
				      );
				    } else {
				      Constructor.getDefaultProps = getDefaultProps;
				    }
				  },
				  propTypes: function(Constructor, propTypes) {
				    validateTypeDef(
				      Constructor,
				      propTypes,
				      ReactPropTypeLocations.prop
				    );
				    Constructor.propTypes = assign(
				      {},
				      Constructor.propTypes,
				      propTypes
				    );
				  },
				  statics: function(Constructor, statics) {
				    mixStaticSpecIntoComponent(Constructor, statics);
				  }
				};

				function getDeclarationErrorAddendum(component) {
				  var owner = component._owner || null;
				  if (owner && owner.constructor && owner.constructor.displayName) {
				    return ' Check the render method of `' + owner.constructor.displayName +
				      '`.';
				  }
				  return '';
				}

				function validateTypeDef(Constructor, typeDef, location) {
				  for (var propName in typeDef) {
				    if (typeDef.hasOwnProperty(propName)) {
				      ("production" !== "development" ? invariant(
				        typeof typeDef[propName] == 'function',
				        '%s: %s type `%s` is invalid; it must be a function, usually from ' +
				        'React.PropTypes.',
				        Constructor.displayName || 'ReactCompositeComponent',
				        ReactPropTypeLocationNames[location],
				        propName
				      ) : invariant(typeof typeDef[propName] == 'function'));
				    }
				  }
				}

				function validateMethodOverride(proto, name) {
				  var specPolicy = ReactCompositeComponentInterface.hasOwnProperty(name) ?
				    ReactCompositeComponentInterface[name] :
				    null;

				  // Disallow overriding of base class methods unless explicitly allowed.
				  if (ReactCompositeComponentMixin.hasOwnProperty(name)) {
				    ("production" !== "development" ? invariant(
				      specPolicy === SpecPolicy.OVERRIDE_BASE,
				      'ReactCompositeComponentInterface: You are attempting to override ' +
				      '`%s` from your class specification. Ensure that your method names ' +
				      'do not overlap with React methods.',
				      name
				    ) : invariant(specPolicy === SpecPolicy.OVERRIDE_BASE));
				  }

				  // Disallow defining methods more than once unless explicitly allowed.
				  if (proto.hasOwnProperty(name)) {
				    ("production" !== "development" ? invariant(
				      specPolicy === SpecPolicy.DEFINE_MANY ||
				      specPolicy === SpecPolicy.DEFINE_MANY_MERGED,
				      'ReactCompositeComponentInterface: You are attempting to define ' +
				      '`%s` on your component more than once. This conflict may be due ' +
				      'to a mixin.',
				      name
				    ) : invariant(specPolicy === SpecPolicy.DEFINE_MANY ||
				    specPolicy === SpecPolicy.DEFINE_MANY_MERGED));
				  }
				}

				function validateLifeCycleOnReplaceState(instance) {
				  var compositeLifeCycleState = instance._compositeLifeCycleState;
				  ("production" !== "development" ? invariant(
				    instance.isMounted() ||
				      compositeLifeCycleState === CompositeLifeCycle.MOUNTING,
				    'replaceState(...): Can only update a mounted or mounting component.'
				  ) : invariant(instance.isMounted() ||
				    compositeLifeCycleState === CompositeLifeCycle.MOUNTING));
				  ("production" !== "development" ? invariant(
				    ReactCurrentOwner.current == null,
				    'replaceState(...): Cannot update during an existing state transition ' +
				    '(such as within `render`). Render methods should be a pure function ' +
				    'of props and state.'
				  ) : invariant(ReactCurrentOwner.current == null));
				  ("production" !== "development" ? invariant(compositeLifeCycleState !== CompositeLifeCycle.UNMOUNTING,
				    'replaceState(...): Cannot update while unmounting component. This ' +
				    'usually means you called setState() on an unmounted component.'
				  ) : invariant(compositeLifeCycleState !== CompositeLifeCycle.UNMOUNTING));
				}

				/**
				 * Mixin helper which handles policy validation and reserved
				 * specification keys when building `ReactCompositeComponent` classses.
				 */
				function mixSpecIntoComponent(Constructor, spec) {
				  if (!spec) {
				    return;
				  }

				  ("production" !== "development" ? invariant(
				    !ReactLegacyElement.isValidFactory(spec),
				    'ReactCompositeComponent: You\'re attempting to ' +
				    'use a component class as a mixin. Instead, just use a regular object.'
				  ) : invariant(!ReactLegacyElement.isValidFactory(spec)));
				  ("production" !== "development" ? invariant(
				    !ReactElement.isValidElement(spec),
				    'ReactCompositeComponent: You\'re attempting to ' +
				    'use a component as a mixin. Instead, just use a regular object.'
				  ) : invariant(!ReactElement.isValidElement(spec)));

				  var proto = Constructor.prototype;

				  // By handling mixins before any other properties, we ensure the same
				  // chaining order is applied to methods with DEFINE_MANY policy, whether
				  // mixins are listed before or after these methods in the spec.
				  if (spec.hasOwnProperty(MIXINS_KEY)) {
				    RESERVED_SPEC_KEYS.mixins(Constructor, spec.mixins);
				  }

				  for (var name in spec) {
				    if (!spec.hasOwnProperty(name)) {
				      continue;
				    }

				    if (name === MIXINS_KEY) {
				      // We have already handled mixins in a special case above
				      continue;
				    }

				    var property = spec[name];
				    validateMethodOverride(proto, name);

				    if (RESERVED_SPEC_KEYS.hasOwnProperty(name)) {
				      RESERVED_SPEC_KEYS[name](Constructor, property);
				    } else {
				      // Setup methods on prototype:
				      // The following member methods should not be automatically bound:
				      // 1. Expected ReactCompositeComponent methods (in the "interface").
				      // 2. Overridden methods (that were mixed in).
				      var isCompositeComponentMethod =
				        ReactCompositeComponentInterface.hasOwnProperty(name);
				      var isAlreadyDefined = proto.hasOwnProperty(name);
				      var markedDontBind = property && property.__reactDontBind;
				      var isFunction = typeof property === 'function';
				      var shouldAutoBind =
				        isFunction &&
				        !isCompositeComponentMethod &&
				        !isAlreadyDefined &&
				        !markedDontBind;

				      if (shouldAutoBind) {
				        if (!proto.__reactAutoBindMap) {
				          proto.__reactAutoBindMap = {};
				        }
				        proto.__reactAutoBindMap[name] = property;
				        proto[name] = property;
				      } else {
				        if (isAlreadyDefined) {
				          var specPolicy = ReactCompositeComponentInterface[name];

				          // These cases should already be caught by validateMethodOverride
				          ("production" !== "development" ? invariant(
				            isCompositeComponentMethod && (
				              specPolicy === SpecPolicy.DEFINE_MANY_MERGED ||
				              specPolicy === SpecPolicy.DEFINE_MANY
				            ),
				            'ReactCompositeComponent: Unexpected spec policy %s for key %s ' +
				            'when mixing in component specs.',
				            specPolicy,
				            name
				          ) : invariant(isCompositeComponentMethod && (
				            specPolicy === SpecPolicy.DEFINE_MANY_MERGED ||
				            specPolicy === SpecPolicy.DEFINE_MANY
				          )));

				          // For methods which are defined more than once, call the existing
				          // methods before calling the new property, merging if appropriate.
				          if (specPolicy === SpecPolicy.DEFINE_MANY_MERGED) {
				            proto[name] = createMergedResultFunction(proto[name], property);
				          } else if (specPolicy === SpecPolicy.DEFINE_MANY) {
				            proto[name] = createChainedFunction(proto[name], property);
				          }
				        } else {
				          proto[name] = property;
				          if ("production" !== "development") {
				            // Add verbose displayName to the function, which helps when looking
				            // at profiling tools.
				            if (typeof property === 'function' && spec.displayName) {
				              proto[name].displayName = spec.displayName + '_' + name;
				            }
				          }
				        }
				      }
				    }
				  }
				}

				function mixStaticSpecIntoComponent(Constructor, statics) {
				  if (!statics) {
				    return;
				  }
				  for (var name in statics) {
				    var property = statics[name];
				    if (!statics.hasOwnProperty(name)) {
				      continue;
				    }

				    var isReserved = name in RESERVED_SPEC_KEYS;
				    ("production" !== "development" ? invariant(
				      !isReserved,
				      'ReactCompositeComponent: You are attempting to define a reserved ' +
				      'property, `%s`, that shouldn\'t be on the "statics" key. Define it ' +
				      'as an instance property instead; it will still be accessible on the ' +
				      'constructor.',
				      name
				    ) : invariant(!isReserved));

				    var isInherited = name in Constructor;
				    ("production" !== "development" ? invariant(
				      !isInherited,
				      'ReactCompositeComponent: You are attempting to define ' +
				      '`%s` on your component more than once. This conflict may be ' +
				      'due to a mixin.',
				      name
				    ) : invariant(!isInherited));
				    Constructor[name] = property;
				  }
				}

				/**
				 * Merge two objects, but throw if both contain the same key.
				 *
				 * @param {object} one The first object, which is mutated.
				 * @param {object} two The second object
				 * @return {object} one after it has been mutated to contain everything in two.
				 */
				function mergeObjectsWithNoDuplicateKeys(one, two) {
				  ("production" !== "development" ? invariant(
				    one && two && typeof one === 'object' && typeof two === 'object',
				    'mergeObjectsWithNoDuplicateKeys(): Cannot merge non-objects'
				  ) : invariant(one && two && typeof one === 'object' && typeof two === 'object'));

				  mapObject(two, function(value, key) {
				    ("production" !== "development" ? invariant(
				      one[key] === undefined,
				      'mergeObjectsWithNoDuplicateKeys(): ' +
				      'Tried to merge two objects with the same key: `%s`. This conflict ' +
				      'may be due to a mixin; in particular, this may be caused by two ' +
				      'getInitialState() or getDefaultProps() methods returning objects ' +
				      'with clashing keys.',
				      key
				    ) : invariant(one[key] === undefined));
				    one[key] = value;
				  });
				  return one;
				}

				/**
				 * Creates a function that invokes two functions and merges their return values.
				 *
				 * @param {function} one Function to invoke first.
				 * @param {function} two Function to invoke second.
				 * @return {function} Function that invokes the two argument functions.
				 * @private
				 */
				function createMergedResultFunction(one, two) {
				  return function mergedResult() {
				    var a = one.apply(this, arguments);
				    var b = two.apply(this, arguments);
				    if (a == null) {
				      return b;
				    } else if (b == null) {
				      return a;
				    }
				    return mergeObjectsWithNoDuplicateKeys(a, b);
				  };
				}

				/**
				 * Creates a function that invokes two functions and ignores their return vales.
				 *
				 * @param {function} one Function to invoke first.
				 * @param {function} two Function to invoke second.
				 * @return {function} Function that invokes the two argument functions.
				 * @private
				 */
				function createChainedFunction(one, two) {
				  return function chainedFunction() {
				    one.apply(this, arguments);
				    two.apply(this, arguments);
				  };
				}

				/**
				 * `ReactCompositeComponent` maintains an auxiliary life cycle state in
				 * `this._compositeLifeCycleState` (which can be null).
				 *
				 * This is different from the life cycle state maintained by `ReactComponent` in
				 * `this._lifeCycleState`. The following diagram shows how the states overlap in
				 * time. There are times when the CompositeLifeCycle is null - at those times it
				 * is only meaningful to look at ComponentLifeCycle alone.
				 *
				 * Top Row: ReactComponent.ComponentLifeCycle
				 * Low Row: ReactComponent.CompositeLifeCycle
				 *
				 * +-------+---------------------------------+--------+
				 * |  UN   |             MOUNTED             |   UN   |
				 * |MOUNTED|                                 | MOUNTED|
				 * +-------+---------------------------------+--------+
				 * |       ^--------+   +-------+   +--------^        |
				 * |       |        |   |       |   |        |        |
				 * |    0--|MOUNTING|-0-|RECEIVE|-0-|   UN   |--->0   |
				 * |       |        |   |PROPS  |   |MOUNTING|        |
				 * |       |        |   |       |   |        |        |
				 * |       |        |   |       |   |        |        |
				 * |       +--------+   +-------+   +--------+        |
				 * |       |                                 |        |
				 * +-------+---------------------------------+--------+
				 */
				var CompositeLifeCycle = keyMirror({
				  /**
				   * Components in the process of being mounted respond to state changes
				   * differently.
				   */
				  MOUNTING: null,
				  /**
				   * Components in the process of being unmounted are guarded against state
				   * changes.
				   */
				  UNMOUNTING: null,
				  /**
				   * Components that are mounted and receiving new props respond to state
				   * changes differently.
				   */
				  RECEIVING_PROPS: null
				});

				/**
				 * @lends {ReactCompositeComponent.prototype}
				 */
				var ReactCompositeComponentMixin = {

				  /**
				   * Base constructor for all composite component.
				   *
				   * @param {ReactElement} element
				   * @final
				   * @internal
				   */
				  construct: function(element) {
				    // Children can be either an array or more than one argument
				    ReactComponent.Mixin.construct.apply(this, arguments);
				    ReactOwner.Mixin.construct.apply(this, arguments);

				    this.state = null;
				    this._pendingState = null;

				    // This is the public post-processed context. The real context and pending
				    // context lives on the element.
				    this.context = null;

				    this._compositeLifeCycleState = null;
				  },

				  /**
				   * Checks whether or not this composite component is mounted.
				   * @return {boolean} True if mounted, false otherwise.
				   * @protected
				   * @final
				   */
				  isMounted: function() {
				    return ReactComponent.Mixin.isMounted.call(this) &&
				      this._compositeLifeCycleState !== CompositeLifeCycle.MOUNTING;
				  },

				  /**
				   * Initializes the component, renders markup, and registers event listeners.
				   *
				   * @param {string} rootID DOM ID of the root node.
				   * @param {ReactReconcileTransaction|ReactServerRenderingTransaction} transaction
				   * @param {number} mountDepth number of components in the owner hierarchy
				   * @return {?string} Rendered markup to be inserted into the DOM.
				   * @final
				   * @internal
				   */
				  mountComponent: ReactPerf.measure(
				    'ReactCompositeComponent',
				    'mountComponent',
				    function(rootID, transaction, mountDepth) {
				      ReactComponent.Mixin.mountComponent.call(
				        this,
				        rootID,
				        transaction,
				        mountDepth
				      );
				      this._compositeLifeCycleState = CompositeLifeCycle.MOUNTING;

				      if (this.__reactAutoBindMap) {
				        this._bindAutoBindMethods();
				      }

				      this.context = this._processContext(this._currentElement._context);
				      this.props = this._processProps(this.props);

				      this.state = this.getInitialState ? this.getInitialState() : null;
				      ("production" !== "development" ? invariant(
				        typeof this.state === 'object' && !Array.isArray(this.state),
				        '%s.getInitialState(): must return an object or null',
				        this.constructor.displayName || 'ReactCompositeComponent'
				      ) : invariant(typeof this.state === 'object' && !Array.isArray(this.state)));

				      this._pendingState = null;
				      this._pendingForceUpdate = false;

				      if (this.componentWillMount) {
				        this.componentWillMount();
				        // When mounting, calls to `setState` by `componentWillMount` will set
				        // `this._pendingState` without triggering a re-render.
				        if (this._pendingState) {
				          this.state = this._pendingState;
				          this._pendingState = null;
				        }
				      }

				      this._renderedComponent = instantiateReactComponent(
				        this._renderValidatedComponent(),
				        this._currentElement.type // The wrapping type
				      );

				      // Done with mounting, `setState` will now trigger UI changes.
				      this._compositeLifeCycleState = null;
				      var markup = this._renderedComponent.mountComponent(
				        rootID,
				        transaction,
				        mountDepth + 1
				      );
				      if (this.componentDidMount) {
				        transaction.getReactMountReady().enqueue(this.componentDidMount, this);
				      }
				      return markup;
				    }
				  ),

				  /**
				   * Releases any resources allocated by `mountComponent`.
				   *
				   * @final
				   * @internal
				   */
				  unmountComponent: function() {
				    this._compositeLifeCycleState = CompositeLifeCycle.UNMOUNTING;
				    if (this.componentWillUnmount) {
				      this.componentWillUnmount();
				    }
				    this._compositeLifeCycleState = null;

				    this._renderedComponent.unmountComponent();
				    this._renderedComponent = null;

				    ReactComponent.Mixin.unmountComponent.call(this);

				    // Some existing components rely on this.props even after they've been
				    // destroyed (in event handlers).
				    // TODO: this.props = null;
				    // TODO: this.state = null;
				  },

				  /**
				   * Sets a subset of the state. Always use this or `replaceState` to mutate
				   * state. You should treat `this.state` as immutable.
				   *
				   * There is no guarantee that `this.state` will be immediately updated, so
				   * accessing `this.state` after calling this method may return the old value.
				   *
				   * There is no guarantee that calls to `setState` will run synchronously,
				   * as they may eventually be batched together.  You can provide an optional
				   * callback that will be executed when the call to setState is actually
				   * completed.
				   *
				   * @param {object} partialState Next partial state to be merged with state.
				   * @param {?function} callback Called after state is updated.
				   * @final
				   * @protected
				   */
				  setState: function(partialState, callback) {
				    ("production" !== "development" ? invariant(
				      typeof partialState === 'object' || partialState == null,
				      'setState(...): takes an object of state variables to update.'
				    ) : invariant(typeof partialState === 'object' || partialState == null));
				    if ("production" !== "development"){
				      ("production" !== "development" ? warning(
				        partialState != null,
				        'setState(...): You passed an undefined or null state object; ' +
				        'instead, use forceUpdate().'
				      ) : null);
				    }
				    // Merge with `_pendingState` if it exists, otherwise with existing state.
				    this.replaceState(
				      assign({}, this._pendingState || this.state, partialState),
				      callback
				    );
				  },

				  /**
				   * Replaces all of the state. Always use this or `setState` to mutate state.
				   * You should treat `this.state` as immutable.
				   *
				   * There is no guarantee that `this.state` will be immediately updated, so
				   * accessing `this.state` after calling this method may return the old value.
				   *
				   * @param {object} completeState Next state.
				   * @param {?function} callback Called after state is updated.
				   * @final
				   * @protected
				   */
				  replaceState: function(completeState, callback) {
				    validateLifeCycleOnReplaceState(this);
				    this._pendingState = completeState;
				    if (this._compositeLifeCycleState !== CompositeLifeCycle.MOUNTING) {
				      // If we're in a componentWillMount handler, don't enqueue a rerender
				      // because ReactUpdates assumes we're in a browser context (which is wrong
				      // for server rendering) and we're about to do a render anyway.
				      // TODO: The callback here is ignored when setState is called from
				      // componentWillMount. Either fix it or disallow doing so completely in
				      // favor of getInitialState.
				      ReactUpdates.enqueueUpdate(this, callback);
				    }
				  },

				  /**
				   * Filters the context object to only contain keys specified in
				   * `contextTypes`, and asserts that they are valid.
				   *
				   * @param {object} context
				   * @return {?object}
				   * @private
				   */
				  _processContext: function(context) {
				    var maskedContext = null;
				    var contextTypes = this.constructor.contextTypes;
				    if (contextTypes) {
				      maskedContext = {};
				      for (var contextName in contextTypes) {
				        maskedContext[contextName] = context[contextName];
				      }
				      if ("production" !== "development") {
				        this._checkPropTypes(
				          contextTypes,
				          maskedContext,
				          ReactPropTypeLocations.context
				        );
				      }
				    }
				    return maskedContext;
				  },

				  /**
				   * @param {object} currentContext
				   * @return {object}
				   * @private
				   */
				  _processChildContext: function(currentContext) {
				    var childContext = this.getChildContext && this.getChildContext();
				    var displayName = this.constructor.displayName || 'ReactCompositeComponent';
				    if (childContext) {
				      ("production" !== "development" ? invariant(
				        typeof this.constructor.childContextTypes === 'object',
				        '%s.getChildContext(): childContextTypes must be defined in order to ' +
				        'use getChildContext().',
				        displayName
				      ) : invariant(typeof this.constructor.childContextTypes === 'object'));
				      if ("production" !== "development") {
				        this._checkPropTypes(
				          this.constructor.childContextTypes,
				          childContext,
				          ReactPropTypeLocations.childContext
				        );
				      }
				      for (var name in childContext) {
				        ("production" !== "development" ? invariant(
				          name in this.constructor.childContextTypes,
				          '%s.getChildContext(): key "%s" is not defined in childContextTypes.',
				          displayName,
				          name
				        ) : invariant(name in this.constructor.childContextTypes));
				      }
				      return assign({}, currentContext, childContext);
				    }
				    return currentContext;
				  },

				  /**
				   * Processes props by setting default values for unspecified props and
				   * asserting that the props are valid. Does not mutate its argument; returns
				   * a new props object with defaults merged in.
				   *
				   * @param {object} newProps
				   * @return {object}
				   * @private
				   */
				  _processProps: function(newProps) {
				    if ("production" !== "development") {
				      var propTypes = this.constructor.propTypes;
				      if (propTypes) {
				        this._checkPropTypes(propTypes, newProps, ReactPropTypeLocations.prop);
				      }
				    }
				    return newProps;
				  },

				  /**
				   * Assert that the props are valid
				   *
				   * @param {object} propTypes Map of prop name to a ReactPropType
				   * @param {object} props
				   * @param {string} location e.g. "prop", "context", "child context"
				   * @private
				   */
				  _checkPropTypes: function(propTypes, props, location) {
				    // TODO: Stop validating prop types here and only use the element
				    // validation.
				    var componentName = this.constructor.displayName;
				    for (var propName in propTypes) {
				      if (propTypes.hasOwnProperty(propName)) {
				        var error =
				          propTypes[propName](props, propName, componentName, location);
				        if (error instanceof Error) {
				          // We may want to extend this logic for similar errors in
				          // renderComponent calls, so I'm abstracting it away into
				          // a function to minimize refactoring in the future
				          var addendum = getDeclarationErrorAddendum(this);
				          ("production" !== "development" ? warning(false, error.message + addendum) : null);
				        }
				      }
				    }
				  },

				  /**
				   * If any of `_pendingElement`, `_pendingState`, or `_pendingForceUpdate`
				   * is set, update the component.
				   *
				   * @param {ReactReconcileTransaction} transaction
				   * @internal
				   */
				  performUpdateIfNecessary: function(transaction) {
				    var compositeLifeCycleState = this._compositeLifeCycleState;
				    // Do not trigger a state transition if we are in the middle of mounting or
				    // receiving props because both of those will already be doing this.
				    if (compositeLifeCycleState === CompositeLifeCycle.MOUNTING ||
				        compositeLifeCycleState === CompositeLifeCycle.RECEIVING_PROPS) {
				      return;
				    }

				    if (this._pendingElement == null &&
				        this._pendingState == null &&
				        !this._pendingForceUpdate) {
				      return;
				    }

				    var nextContext = this.context;
				    var nextProps = this.props;
				    var nextElement = this._currentElement;
				    if (this._pendingElement != null) {
				      nextElement = this._pendingElement;
				      nextContext = this._processContext(nextElement._context);
				      nextProps = this._processProps(nextElement.props);
				      this._pendingElement = null;

				      this._compositeLifeCycleState = CompositeLifeCycle.RECEIVING_PROPS;
				      if (this.componentWillReceiveProps) {
				        this.componentWillReceiveProps(nextProps, nextContext);
				      }
				    }

				    this._compositeLifeCycleState = null;

				    var nextState = this._pendingState || this.state;
				    this._pendingState = null;

				    var shouldUpdate =
				      this._pendingForceUpdate ||
				      !this.shouldComponentUpdate ||
				      this.shouldComponentUpdate(nextProps, nextState, nextContext);

				    if ("production" !== "development") {
				      if (typeof shouldUpdate === "undefined") {
				        console.warn(
				          (this.constructor.displayName || 'ReactCompositeComponent') +
				          '.shouldComponentUpdate(): Returned undefined instead of a ' +
				          'boolean value. Make sure to return true or false.'
				        );
				      }
				    }

				    if (shouldUpdate) {
				      this._pendingForceUpdate = false;
				      // Will set `this.props`, `this.state` and `this.context`.
				      this._performComponentUpdate(
				        nextElement,
				        nextProps,
				        nextState,
				        nextContext,
				        transaction
				      );
				    } else {
				      // If it's determined that a component should not update, we still want
				      // to set props and state.
				      this._currentElement = nextElement;
				      this.props = nextProps;
				      this.state = nextState;
				      this.context = nextContext;

				      // Owner cannot change because shouldUpdateReactComponent doesn't allow
				      // it. TODO: Remove this._owner completely.
				      this._owner = nextElement._owner;
				    }
				  },

				  /**
				   * Merges new props and state, notifies delegate methods of update and
				   * performs update.
				   *
				   * @param {ReactElement} nextElement Next element
				   * @param {object} nextProps Next public object to set as properties.
				   * @param {?object} nextState Next object to set as state.
				   * @param {?object} nextContext Next public object to set as context.
				   * @param {ReactReconcileTransaction} transaction
				   * @private
				   */
				  _performComponentUpdate: function(
				    nextElement,
				    nextProps,
				    nextState,
				    nextContext,
				    transaction
				  ) {
				    var prevElement = this._currentElement;
				    var prevProps = this.props;
				    var prevState = this.state;
				    var prevContext = this.context;

				    if (this.componentWillUpdate) {
				      this.componentWillUpdate(nextProps, nextState, nextContext);
				    }

				    this._currentElement = nextElement;
				    this.props = nextProps;
				    this.state = nextState;
				    this.context = nextContext;

				    // Owner cannot change because shouldUpdateReactComponent doesn't allow
				    // it. TODO: Remove this._owner completely.
				    this._owner = nextElement._owner;

				    this.updateComponent(
				      transaction,
				      prevElement
				    );

				    if (this.componentDidUpdate) {
				      transaction.getReactMountReady().enqueue(
				        this.componentDidUpdate.bind(this, prevProps, prevState, prevContext),
				        this
				      );
				    }
				  },

				  receiveComponent: function(nextElement, transaction) {
				    if (nextElement === this._currentElement &&
				        nextElement._owner != null) {
				      // Since elements are immutable after the owner is rendered,
				      // we can do a cheap identity compare here to determine if this is a
				      // superfluous reconcile. It's possible for state to be mutable but such
				      // change should trigger an update of the owner which would recreate
				      // the element. We explicitly check for the existence of an owner since
				      // it's possible for a element created outside a composite to be
				      // deeply mutated and reused.
				      return;
				    }

				    ReactComponent.Mixin.receiveComponent.call(
				      this,
				      nextElement,
				      transaction
				    );
				  },

				  /**
				   * Updates the component's currently mounted DOM representation.
				   *
				   * By default, this implements React's rendering and reconciliation algorithm.
				   * Sophisticated clients may wish to override this.
				   *
				   * @param {ReactReconcileTransaction} transaction
				   * @param {ReactElement} prevElement
				   * @internal
				   * @overridable
				   */
				  updateComponent: ReactPerf.measure(
				    'ReactCompositeComponent',
				    'updateComponent',
				    function(transaction, prevParentElement) {
				      ReactComponent.Mixin.updateComponent.call(
				        this,
				        transaction,
				        prevParentElement
				      );

				      var prevComponentInstance = this._renderedComponent;
				      var prevElement = prevComponentInstance._currentElement;
				      var nextElement = this._renderValidatedComponent();
				      if (shouldUpdateReactComponent(prevElement, nextElement)) {
				        prevComponentInstance.receiveComponent(nextElement, transaction);
				      } else {
				        // These two IDs are actually the same! But nothing should rely on that.
				        var thisID = this._rootNodeID;
				        var prevComponentID = prevComponentInstance._rootNodeID;
				        prevComponentInstance.unmountComponent();
				        this._renderedComponent = instantiateReactComponent(
				          nextElement,
				          this._currentElement.type
				        );
				        var nextMarkup = this._renderedComponent.mountComponent(
				          thisID,
				          transaction,
				          this._mountDepth + 1
				        );
				        ReactComponent.BackendIDOperations.dangerouslyReplaceNodeWithMarkupByID(
				          prevComponentID,
				          nextMarkup
				        );
				      }
				    }
				  ),

				  /**
				   * Forces an update. This should only be invoked when it is known with
				   * certainty that we are **not** in a DOM transaction.
				   *
				   * You may want to call this when you know that some deeper aspect of the
				   * component's state has changed but `setState` was not called.
				   *
				   * This will not invoke `shouldUpdateComponent`, but it will invoke
				   * `componentWillUpdate` and `componentDidUpdate`.
				   *
				   * @param {?function} callback Called after update is complete.
				   * @final
				   * @protected
				   */
				  forceUpdate: function(callback) {
				    var compositeLifeCycleState = this._compositeLifeCycleState;
				    ("production" !== "development" ? invariant(
				      this.isMounted() ||
				        compositeLifeCycleState === CompositeLifeCycle.MOUNTING,
				      'forceUpdate(...): Can only force an update on mounted or mounting ' +
				        'components.'
				    ) : invariant(this.isMounted() ||
				      compositeLifeCycleState === CompositeLifeCycle.MOUNTING));
				    ("production" !== "development" ? invariant(
				      compositeLifeCycleState !== CompositeLifeCycle.UNMOUNTING &&
				      ReactCurrentOwner.current == null,
				      'forceUpdate(...): Cannot force an update while unmounting component ' +
				      'or within a `render` function.'
				    ) : invariant(compositeLifeCycleState !== CompositeLifeCycle.UNMOUNTING &&
				    ReactCurrentOwner.current == null));
				    this._pendingForceUpdate = true;
				    ReactUpdates.enqueueUpdate(this, callback);
				  },

				  /**
				   * @private
				   */
				  _renderValidatedComponent: ReactPerf.measure(
				    'ReactCompositeComponent',
				    '_renderValidatedComponent',
				    function() {
				      var renderedComponent;
				      var previousContext = ReactContext.current;
				      ReactContext.current = this._processChildContext(
				        this._currentElement._context
				      );
				      ReactCurrentOwner.current = this;
				      try {
				        renderedComponent = this.render();
				        if (renderedComponent === null || renderedComponent === false) {
				          renderedComponent = ReactEmptyComponent.getEmptyComponent();
				          ReactEmptyComponent.registerNullComponentID(this._rootNodeID);
				        } else {
				          ReactEmptyComponent.deregisterNullComponentID(this._rootNodeID);
				        }
				      } finally {
				        ReactContext.current = previousContext;
				        ReactCurrentOwner.current = null;
				      }
				      ("production" !== "development" ? invariant(
				        ReactElement.isValidElement(renderedComponent),
				        '%s.render(): A valid ReactComponent must be returned. You may have ' +
				          'returned undefined, an array or some other invalid object.',
				        this.constructor.displayName || 'ReactCompositeComponent'
				      ) : invariant(ReactElement.isValidElement(renderedComponent)));
				      return renderedComponent;
				    }
				  ),

				  /**
				   * @private
				   */
				  _bindAutoBindMethods: function() {
				    for (var autoBindKey in this.__reactAutoBindMap) {
				      if (!this.__reactAutoBindMap.hasOwnProperty(autoBindKey)) {
				        continue;
				      }
				      var method = this.__reactAutoBindMap[autoBindKey];
				      this[autoBindKey] = this._bindAutoBindMethod(ReactErrorUtils.guard(
				        method,
				        this.constructor.displayName + '.' + autoBindKey
				      ));
				    }
				  },

				  /**
				   * Binds a method to the component.
				   *
				   * @param {function} method Method to be bound.
				   * @private
				   */
				  _bindAutoBindMethod: function(method) {
				    var component = this;
				    var boundMethod = method.bind(component);
				    if ("production" !== "development") {
				      boundMethod.__reactBoundContext = component;
				      boundMethod.__reactBoundMethod = method;
				      boundMethod.__reactBoundArguments = null;
				      var componentName = component.constructor.displayName;
				      var _bind = boundMethod.bind;
				      boundMethod.bind = function(newThis ) {for (var args=[],$__0=1,$__1=arguments.length;$__0<$__1;$__0++) args.push(arguments[$__0]);
				        // User is trying to bind() an autobound method; we effectively will
				        // ignore the value of "this" that the user is trying to use, so
				        // let's warn.
				        if (newThis !== component && newThis !== null) {
				          monitorCodeUse('react_bind_warning', { component: componentName });
				          console.warn(
				            'bind(): React component methods may only be bound to the ' +
				            'component instance. See ' + componentName
				          );
				        } else if (!args.length) {
				          monitorCodeUse('react_bind_warning', { component: componentName });
				          console.warn(
				            'bind(): You are binding a component method to the component. ' +
				            'React does this for you automatically in a high-performance ' +
				            'way, so you can safely remove this call. See ' + componentName
				          );
				          return boundMethod;
				        }
				        var reboundMethod = _bind.apply(boundMethod, arguments);
				        reboundMethod.__reactBoundContext = component;
				        reboundMethod.__reactBoundMethod = method;
				        reboundMethod.__reactBoundArguments = args;
				        return reboundMethod;
				      };
				    }
				    return boundMethod;
				  }
				};

				var ReactCompositeComponentBase = function() {};
				assign(
				  ReactCompositeComponentBase.prototype,
				  ReactComponent.Mixin,
				  ReactOwner.Mixin,
				  ReactPropTransferer.Mixin,
				  ReactCompositeComponentMixin
				);

				/**
				 * Module for creating composite components.
				 *
				 * @class ReactCompositeComponent
				 * @extends ReactComponent
				 * @extends ReactOwner
				 * @extends ReactPropTransferer
				 */
				var ReactCompositeComponent = {

				  LifeCycle: CompositeLifeCycle,

				  Base: ReactCompositeComponentBase,

				  /**
				   * Creates a composite component class given a class specification.
				   *
				   * @param {object} spec Class specification (which must define `render`).
				   * @return {function} Component constructor function.
				   * @public
				   */
				  createClass: function(spec) {
				    var Constructor = function(props) {
				      // This constructor is overridden by mocks. The argument is used
				      // by mocks to assert on what gets mounted. This will later be used
				      // by the stand-alone class implementation.
				    };
				    Constructor.prototype = new ReactCompositeComponentBase();
				    Constructor.prototype.constructor = Constructor;

				    injectedMixins.forEach(
				      mixSpecIntoComponent.bind(null, Constructor)
				    );

				    mixSpecIntoComponent(Constructor, spec);

				    // Initialize the defaultProps property after all mixins have been merged
				    if (Constructor.getDefaultProps) {
				      Constructor.defaultProps = Constructor.getDefaultProps();
				    }

				    ("production" !== "development" ? invariant(
				      Constructor.prototype.render,
				      'createClass(...): Class specification must implement a `render` method.'
				    ) : invariant(Constructor.prototype.render));

				    if ("production" !== "development") {
				      if (Constructor.prototype.componentShouldUpdate) {
				        monitorCodeUse(
				          'react_component_should_update_warning',
				          { component: spec.displayName }
				        );
				        console.warn(
				          (spec.displayName || 'A component') + ' has a method called ' +
				          'componentShouldUpdate(). Did you mean shouldComponentUpdate()? ' +
				          'The name is phrased as a question because the function is ' +
				          'expected to return a value.'
				         );
				      }
				    }

				    // Reduce time spent doing lookups by setting these on the prototype.
				    for (var methodName in ReactCompositeComponentInterface) {
				      if (!Constructor.prototype[methodName]) {
				        Constructor.prototype[methodName] = null;
				      }
				    }

				    if ("production" !== "development") {
				      return ReactLegacyElement.wrapFactory(
				        ReactElementValidator.createFactory(Constructor)
				      );
				    }
				    return ReactLegacyElement.wrapFactory(
				      ReactElement.createFactory(Constructor)
				    );
				  },

				  injection: {
				    injectMixin: function(mixin) {
				      injectedMixins.push(mixin);
				    }
				  }
				};

				module.exports = ReactCompositeComponent;

				},{"./Object.assign":27,"./ReactComponent":32,"./ReactContext":35,"./ReactCurrentOwner":36,"./ReactElement":52,"./ReactElementValidator":53,"./ReactEmptyComponent":54,"./ReactErrorUtils":55,"./ReactLegacyElement":61,"./ReactOwner":67,"./ReactPerf":68,"./ReactPropTransferer":69,"./ReactPropTypeLocationNames":70,"./ReactPropTypeLocations":71,"./ReactUpdates":79,"./instantiateReactComponent":125,"./invariant":126,"./keyMirror":132,"./keyOf":133,"./mapObject":134,"./monitorCodeUse":136,"./shouldUpdateReactComponent":142,"./warning":145}],35:[function(_dereq_,module,exports){
				/**
				 * Copyright 2013-2014, Facebook, Inc.
				 * All rights reserved.
				 *
				 * This source code is licensed under the BSD-style license found in the
				 * LICENSE file in the root directory of this source tree. An additional grant
				 * of patent rights can be found in the PATENTS file in the same directory.
				 *
				 * @providesModule ReactContext
				 */

				"use strict";

				var assign = _dereq_("./Object.assign");

				/**
				 * Keeps track of the current context.
				 *
				 * The context is automatically passed down the component ownership hierarchy
				 * and is accessible via `this.context` on ReactCompositeComponents.
				 */
				var ReactContext = {

				  /**
				   * @internal
				   * @type {object}
				   */
				  current: {},

				  /**
				   * Temporarily extends the current context while executing scopedCallback.
				   *
				   * A typical use case might look like
				   *
				   *  render: function() {
				   *    var children = ReactContext.withContext({foo: 'foo'}, () => (
				   *
				   *    ));
				   *    return <div>{children}</div>;
				   *  }
				   *
				   * @param {object} newContext New context to merge into the existing context
				   * @param {function} scopedCallback Callback to run with the new context
				   * @return {ReactComponent|array<ReactComponent>}
				   */
				  withContext: function(newContext, scopedCallback) {
				    var result;
				    var previousContext = ReactContext.current;
				    ReactContext.current = assign({}, previousContext, newContext);
				    try {
				      result = scopedCallback();
				    } finally {
				      ReactContext.current = previousContext;
				    }
				    return result;
				  }

				};

				module.exports = ReactContext;

				},{"./Object.assign":27}],36:[function(_dereq_,module,exports){
				/**
				 * Copyright 2013-2014, Facebook, Inc.
				 * All rights reserved.
				 *
				 * This source code is licensed under the BSD-style license found in the
				 * LICENSE file in the root directory of this source tree. An additional grant
				 * of patent rights can be found in the PATENTS file in the same directory.
				 *
				 * @providesModule ReactCurrentOwner
				 */

				"use strict";

				/**
				 * Keeps track of the current owner.
				 *
				 * The current owner is the component who should own any components that are
				 * currently being constructed.
				 *
				 * The depth indicate how many composite components are above this render level.
				 */
				var ReactCurrentOwner = {

				  /**
				   * @internal
				   * @type {ReactComponent}
				   */
				  current: null

				};

				module.exports = ReactCurrentOwner;

				},{}],37:[function(_dereq_,module,exports){
				/**
				 * Copyright 2013-2014, Facebook, Inc.
				 * All rights reserved.
				 *
				 * This source code is licensed under the BSD-style license found in the
				 * LICENSE file in the root directory of this source tree. An additional grant
				 * of patent rights can be found in the PATENTS file in the same directory.
				 *
				 * @providesModule ReactDOM
				 * @typechecks static-only
				 */

				"use strict";

				var ReactElement = _dereq_("./ReactElement");
				var ReactElementValidator = _dereq_("./ReactElementValidator");
				var ReactLegacyElement = _dereq_("./ReactLegacyElement");

				var mapObject = _dereq_("./mapObject");

				/**
				 * Create a factory that creates HTML tag elements.
				 *
				 * @param {string} tag Tag name (e.g. `div`).
				 * @private
				 */
				function createDOMFactory(tag) {
				  if ("production" !== "development") {
				    return ReactLegacyElement.markNonLegacyFactory(
				      ReactElementValidator.createFactory(tag)
				    );
				  }
				  return ReactLegacyElement.markNonLegacyFactory(
				    ReactElement.createFactory(tag)
				  );
				}

				/**
				 * Creates a mapping from supported HTML tags to `ReactDOMComponent` classes.
				 * This is also accessible via `React.DOM`.
				 *
				 * @public
				 */
				var ReactDOM = mapObject({
				  a: 'a',
				  abbr: 'abbr',
				  address: 'address',
				  area: 'area',
				  article: 'article',
				  aside: 'aside',
				  audio: 'audio',
				  b: 'b',
				  base: 'base',
				  bdi: 'bdi',
				  bdo: 'bdo',
				  big: 'big',
				  blockquote: 'blockquote',
				  body: 'body',
				  br: 'br',
				  button: 'button',
				  canvas: 'canvas',
				  caption: 'caption',
				  cite: 'cite',
				  code: 'code',
				  col: 'col',
				  colgroup: 'colgroup',
				  data: 'data',
				  datalist: 'datalist',
				  dd: 'dd',
				  del: 'del',
				  details: 'details',
				  dfn: 'dfn',
				  dialog: 'dialog',
				  div: 'div',
				  dl: 'dl',
				  dt: 'dt',
				  em: 'em',
				  embed: 'embed',
				  fieldset: 'fieldset',
				  figcaption: 'figcaption',
				  figure: 'figure',
				  footer: 'footer',
				  form: 'form',
				  h1: 'h1',
				  h2: 'h2',
				  h3: 'h3',
				  h4: 'h4',
				  h5: 'h5',
				  h6: 'h6',
				  head: 'head',
				  header: 'header',
				  hr: 'hr',
				  html: 'html',
				  i: 'i',
				  iframe: 'iframe',
				  img: 'img',
				  input: 'input',
				  ins: 'ins',
				  kbd: 'kbd',
				  keygen: 'keygen',
				  label: 'label',
				  legend: 'legend',
				  li: 'li',
				  link: 'link',
				  main: 'main',
				  map: 'map',
				  mark: 'mark',
				  menu: 'menu',
				  menuitem: 'menuitem',
				  meta: 'meta',
				  meter: 'meter',
				  nav: 'nav',
				  noscript: 'noscript',
				  object: 'object',
				  ol: 'ol',
				  optgroup: 'optgroup',
				  option: 'option',
				  output: 'output',
				  p: 'p',
				  param: 'param',
				  picture: 'picture',
				  pre: 'pre',
				  progress: 'progress',
				  q: 'q',
				  rp: 'rp',
				  rt: 'rt',
				  ruby: 'ruby',
				  s: 's',
				  samp: 'samp',
				  script: 'script',
				  section: 'section',
				  select: 'select',
				  small: 'small',
				  source: 'source',
				  span: 'span',
				  strong: 'strong',
				  style: 'style',
				  sub: 'sub',
				  summary: 'summary',
				  sup: 'sup',
				  table: 'table',
				  tbody: 'tbody',
				  td: 'td',
				  textarea: 'textarea',
				  tfoot: 'tfoot',
				  th: 'th',
				  thead: 'thead',
				  time: 'time',
				  title: 'title',
				  tr: 'tr',
				  track: 'track',
				  u: 'u',
				  ul: 'ul',
				  'var': 'var',
				  video: 'video',
				  wbr: 'wbr',

				  // SVG
				  circle: 'circle',
				  defs: 'defs',
				  ellipse: 'ellipse',
				  g: 'g',
				  line: 'line',
				  linearGradient: 'linearGradient',
				  mask: 'mask',
				  path: 'path',
				  pattern: 'pattern',
				  polygon: 'polygon',
				  polyline: 'polyline',
				  radialGradient: 'radialGradient',
				  rect: 'rect',
				  stop: 'stop',
				  svg: 'svg',
				  text: 'text',
				  tspan: 'tspan'

				}, createDOMFactory);

				module.exports = ReactDOM;

				},{"./ReactElement":52,"./ReactElementValidator":53,"./ReactLegacyElement":61,"./mapObject":134}],38:[function(_dereq_,module,exports){
				/**
				 * Copyright 2013-2014, Facebook, Inc.
				 * All rights reserved.
				 *
				 * This source code is licensed under the BSD-style license found in the
				 * LICENSE file in the root directory of this source tree. An additional grant
				 * of patent rights can be found in the PATENTS file in the same directory.
				 *
				 * @providesModule ReactDOMButton
				 */

				"use strict";

				var AutoFocusMixin = _dereq_("./AutoFocusMixin");
				var ReactBrowserComponentMixin = _dereq_("./ReactBrowserComponentMixin");
				var ReactCompositeComponent = _dereq_("./ReactCompositeComponent");
				var ReactElement = _dereq_("./ReactElement");
				var ReactDOM = _dereq_("./ReactDOM");

				var keyMirror = _dereq_("./keyMirror");

				// Store a reference to the <button> `ReactDOMComponent`. TODO: use string
				var button = ReactElement.createFactory(ReactDOM.button.type);

				var mouseListenerNames = keyMirror({
				  onClick: true,
				  onDoubleClick: true,
				  onMouseDown: true,
				  onMouseMove: true,
				  onMouseUp: true,
				  onClickCapture: true,
				  onDoubleClickCapture: true,
				  onMouseDownCapture: true,
				  onMouseMoveCapture: true,
				  onMouseUpCapture: true
				});

				/**
				 * Implements a <button> native component that does not receive mouse events
				 * when `disabled` is set.
				 */
				var ReactDOMButton = ReactCompositeComponent.createClass({
				  displayName: 'ReactDOMButton',

				  mixins: [AutoFocusMixin, ReactBrowserComponentMixin],

				  render: function() {
				    var props = {};

				    // Copy the props; except the mouse listeners if we're disabled
				    for (var key in this.props) {
				      if (this.props.hasOwnProperty(key) &&
				          (!this.props.disabled || !mouseListenerNames[key])) {
				        props[key] = this.props[key];
				      }
				    }

				    return button(props, this.props.children);
				  }

				});

				module.exports = ReactDOMButton;

				},{"./AutoFocusMixin":2,"./ReactBrowserComponentMixin":29,"./ReactCompositeComponent":34,"./ReactDOM":37,"./ReactElement":52,"./keyMirror":132}],39:[function(_dereq_,module,exports){
				/**
				 * Copyright 2013-2014, Facebook, Inc.
				 * All rights reserved.
				 *
				 * This source code is licensed under the BSD-style license found in the
				 * LICENSE file in the root directory of this source tree. An additional grant
				 * of patent rights can be found in the PATENTS file in the same directory.
				 *
				 * @providesModule ReactDOMComponent
				 * @typechecks static-only
				 */

				"use strict";

				var CSSPropertyOperations = _dereq_("./CSSPropertyOperations");
				var DOMProperty = _dereq_("./DOMProperty");
				var DOMPropertyOperations = _dereq_("./DOMPropertyOperations");
				var ReactBrowserComponentMixin = _dereq_("./ReactBrowserComponentMixin");
				var ReactComponent = _dereq_("./ReactComponent");
				var ReactBrowserEventEmitter = _dereq_("./ReactBrowserEventEmitter");
				var ReactMount = _dereq_("./ReactMount");
				var ReactMultiChild = _dereq_("./ReactMultiChild");
				var ReactPerf = _dereq_("./ReactPerf");

				var assign = _dereq_("./Object.assign");
				var escapeTextForBrowser = _dereq_("./escapeTextForBrowser");
				var invariant = _dereq_("./invariant");
				var isEventSupported = _dereq_("./isEventSupported");
				var keyOf = _dereq_("./keyOf");
				var monitorCodeUse = _dereq_("./monitorCodeUse");

				var deleteListener = ReactBrowserEventEmitter.deleteListener;
				var listenTo = ReactBrowserEventEmitter.listenTo;
				var registrationNameModules = ReactBrowserEventEmitter.registrationNameModules;

				// For quickly matching children type, to test if can be treated as content.
				var CONTENT_TYPES = {'string': true, 'number': true};

				var STYLE = keyOf({style: null});

				var ELEMENT_NODE_TYPE = 1;

				/**
				 * @param {?object} props
				 */
				function assertValidProps(props) {
				  if (!props) {
				    return;
				  }
				  // Note the use of `==` which checks for null or undefined.
				  ("production" !== "development" ? invariant(
				    props.children == null || props.dangerouslySetInnerHTML == null,
				    'Can only set one of `children` or `props.dangerouslySetInnerHTML`.'
				  ) : invariant(props.children == null || props.dangerouslySetInnerHTML == null));
				  if ("production" !== "development") {
				    if (props.contentEditable && props.children != null) {
				      console.warn(
				        'A component is `contentEditable` and contains `children` managed by ' +
				        'React. It is now your responsibility to guarantee that none of those '+
				        'nodes are unexpectedly modified or duplicated. This is probably not ' +
				        'intentional.'
				      );
				    }
				  }
				  ("production" !== "development" ? invariant(
				    props.style == null || typeof props.style === 'object',
				    'The `style` prop expects a mapping from style properties to values, ' +
				    'not a string.'
				  ) : invariant(props.style == null || typeof props.style === 'object'));
				}

				function putListener(id, registrationName, listener, transaction) {
				  if ("production" !== "development") {
				    // IE8 has no API for event capturing and the `onScroll` event doesn't
				    // bubble.
				    if (registrationName === 'onScroll' &&
				        !isEventSupported('scroll', true)) {
				      monitorCodeUse('react_no_scroll_event');
				      console.warn('This browser doesn\'t support the `onScroll` event');
				    }
				  }
				  var container = ReactMount.findReactContainerForID(id);
				  if (container) {
				    var doc = container.nodeType === ELEMENT_NODE_TYPE ?
				      container.ownerDocument :
				      container;
				    listenTo(registrationName, doc);
				  }
				  transaction.getPutListenerQueue().enqueuePutListener(
				    id,
				    registrationName,
				    listener
				  );
				}

				// For HTML, certain tags should omit their close tag. We keep a whitelist for
				// those special cased tags.

				var omittedCloseTags = {
				  'area': true,
				  'base': true,
				  'br': true,
				  'col': true,
				  'embed': true,
				  'hr': true,
				  'img': true,
				  'input': true,
				  'keygen': true,
				  'link': true,
				  'meta': true,
				  'param': true,
				  'source': true,
				  'track': true,
				  'wbr': true
				  // NOTE: menuitem's close tag should be omitted, but that causes problems.
				};

				// We accept any tag to be rendered but since this gets injected into abitrary
				// HTML, we want to make sure that it's a safe tag.
				// http://www.w3.org/TR/REC-xml/#NT-Name

				var VALID_TAG_REGEX = /^[a-zA-Z][a-zA-Z:_\.\-\d]*$/; // Simplified subset
				var validatedTagCache = {};
				var hasOwnProperty = {}.hasOwnProperty;

				function validateDangerousTag(tag) {
				  if (!hasOwnProperty.call(validatedTagCache, tag)) {
				    ("production" !== "development" ? invariant(VALID_TAG_REGEX.test(tag), 'Invalid tag: %s', tag) : invariant(VALID_TAG_REGEX.test(tag)));
				    validatedTagCache[tag] = true;
				  }
				}

				/**
				 * Creates a new React class that is idempotent and capable of containing other
				 * React components. It accepts event listeners and DOM properties that are
				 * valid according to `DOMProperty`.
				 *
				 *  - Event listeners: `onClick`, `onMouseDown`, etc.
				 *  - DOM properties: `className`, `name`, `title`, etc.
				 *
				 * The `style` property functions differently from the DOM API. It accepts an
				 * object mapping of style properties to values.
				 *
				 * @constructor ReactDOMComponent
				 * @extends ReactComponent
				 * @extends ReactMultiChild
				 */
				function ReactDOMComponent(tag) {
				  validateDangerousTag(tag);
				  this._tag = tag;
				  this.tagName = tag.toUpperCase();
				}

				ReactDOMComponent.displayName = 'ReactDOMComponent';

				ReactDOMComponent.Mixin = {

				  /**
				   * Generates root tag markup then recurses. This method has side effects and
				   * is not idempotent.
				   *
				   * @internal
				   * @param {string} rootID The root DOM ID for this node.
				   * @param {ReactReconcileTransaction|ReactServerRenderingTransaction} transaction
				   * @param {number} mountDepth number of components in the owner hierarchy
				   * @return {string} The computed markup.
				   */
				  mountComponent: ReactPerf.measure(
				    'ReactDOMComponent',
				    'mountComponent',
				    function(rootID, transaction, mountDepth) {
				      ReactComponent.Mixin.mountComponent.call(
				        this,
				        rootID,
				        transaction,
				        mountDepth
				      );
				      assertValidProps(this.props);
				      var closeTag = omittedCloseTags[this._tag] ? '' : '</' + this._tag + '>';
				      return (
				        this._createOpenTagMarkupAndPutListeners(transaction) +
				        this._createContentMarkup(transaction) +
				        closeTag
				      );
				    }
				  ),

				  /**
				   * Creates markup for the open tag and all attributes.
				   *
				   * This method has side effects because events get registered.
				   *
				   * Iterating over object properties is faster than iterating over arrays.
				   * @see http://jsperf.com/obj-vs-arr-iteration
				   *
				   * @private
				   * @param {ReactReconcileTransaction|ReactServerRenderingTransaction} transaction
				   * @return {string} Markup of opening tag.
				   */
				  _createOpenTagMarkupAndPutListeners: function(transaction) {
				    var props = this.props;
				    var ret = '<' + this._tag;

				    for (var propKey in props) {
				      if (!props.hasOwnProperty(propKey)) {
				        continue;
				      }
				      var propValue = props[propKey];
				      if (propValue == null) {
				        continue;
				      }
				      if (registrationNameModules.hasOwnProperty(propKey)) {
				        putListener(this._rootNodeID, propKey, propValue, transaction);
				      } else {
				        if (propKey === STYLE) {
				          if (propValue) {
				            propValue = props.style = assign({}, props.style);
				          }
				          propValue = CSSPropertyOperations.createMarkupForStyles(propValue);
				        }
				        var markup =
				          DOMPropertyOperations.createMarkupForProperty(propKey, propValue);
				        if (markup) {
				          ret += ' ' + markup;
				        }
				      }
				    }

				    // For static pages, no need to put React ID and checksum. Saves lots of
				    // bytes.
				    if (transaction.renderToStaticMarkup) {
				      return ret + '>';
				    }

				    var markupForID = DOMPropertyOperations.createMarkupForID(this._rootNodeID);
				    return ret + ' ' + markupForID + '>';
				  },

				  /**
				   * Creates markup for the content between the tags.
				   *
				   * @private
				   * @param {ReactReconcileTransaction|ReactServerRenderingTransaction} transaction
				   * @return {string} Content markup.
				   */
				  _createContentMarkup: function(transaction) {
				    // Intentional use of != to avoid catching zero/false.
				    var innerHTML = this.props.dangerouslySetInnerHTML;
				    if (innerHTML != null) {
				      if (innerHTML.__html != null) {
				        return innerHTML.__html;
				      }
				    } else {
				      var contentToUse =
				        CONTENT_TYPES[typeof this.props.children] ? this.props.children : null;
				      var childrenToUse = contentToUse != null ? null : this.props.children;
				      if (contentToUse != null) {
				        return escapeTextForBrowser(contentToUse);
				      } else if (childrenToUse != null) {
				        var mountImages = this.mountChildren(
				          childrenToUse,
				          transaction
				        );
				        return mountImages.join('');
				      }
				    }
				    return '';
				  },

				  receiveComponent: function(nextElement, transaction) {
				    if (nextElement === this._currentElement &&
				        nextElement._owner != null) {
				      // Since elements are immutable after the owner is rendered,
				      // we can do a cheap identity compare here to determine if this is a
				      // superfluous reconcile. It's possible for state to be mutable but such
				      // change should trigger an update of the owner which would recreate
				      // the element. We explicitly check for the existence of an owner since
				      // it's possible for a element created outside a composite to be
				      // deeply mutated and reused.
				      return;
				    }

				    ReactComponent.Mixin.receiveComponent.call(
				      this,
				      nextElement,
				      transaction
				    );
				  },

				  /**
				   * Updates a native DOM component after it has already been allocated and
				   * attached to the DOM. Reconciles the root DOM node, then recurses.
				   *
				   * @param {ReactReconcileTransaction} transaction
				   * @param {ReactElement} prevElement
				   * @internal
				   * @overridable
				   */
				  updateComponent: ReactPerf.measure(
				    'ReactDOMComponent',
				    'updateComponent',
				    function(transaction, prevElement) {
				      assertValidProps(this._currentElement.props);
				      ReactComponent.Mixin.updateComponent.call(
				        this,
				        transaction,
				        prevElement
				      );
				      this._updateDOMProperties(prevElement.props, transaction);
				      this._updateDOMChildren(prevElement.props, transaction);
				    }
				  ),

				  /**
				   * Reconciles the properties by detecting differences in property values and
				   * updating the DOM as necessary. This function is probably the single most
				   * critical path for performance optimization.
				   *
				   * TODO: Benchmark whether checking for changed values in memory actually
				   *       improves performance (especially statically positioned elements).
				   * TODO: Benchmark the effects of putting this at the top since 99% of props
				   *       do not change for a given reconciliation.
				   * TODO: Benchmark areas that can be improved with caching.
				   *
				   * @private
				   * @param {object} lastProps
				   * @param {ReactReconcileTransaction} transaction
				   */
				  _updateDOMProperties: function(lastProps, transaction) {
				    var nextProps = this.props;
				    var propKey;
				    var styleName;
				    var styleUpdates;
				    for (propKey in lastProps) {
				      if (nextProps.hasOwnProperty(propKey) ||
				         !lastProps.hasOwnProperty(propKey)) {
				        continue;
				      }
				      if (propKey === STYLE) {
				        var lastStyle = lastProps[propKey];
				        for (styleName in lastStyle) {
				          if (lastStyle.hasOwnProperty(styleName)) {
				            styleUpdates = styleUpdates || {};
				            styleUpdates[styleName] = '';
				          }
				        }
				      } else if (registrationNameModules.hasOwnProperty(propKey)) {
				        deleteListener(this._rootNodeID, propKey);
				      } else if (
				          DOMProperty.isStandardName[propKey] ||
				          DOMProperty.isCustomAttribute(propKey)) {
				        ReactComponent.BackendIDOperations.deletePropertyByID(
				          this._rootNodeID,
				          propKey
				        );
				      }
				    }
				    for (propKey in nextProps) {
				      var nextProp = nextProps[propKey];
				      var lastProp = lastProps[propKey];
				      if (!nextProps.hasOwnProperty(propKey) || nextProp === lastProp) {
				        continue;
				      }
				      if (propKey === STYLE) {
				        if (nextProp) {
				          nextProp = nextProps.style = assign({}, nextProp);
				        }
				        if (lastProp) {
				          // Unset styles on `lastProp` but not on `nextProp`.
				          for (styleName in lastProp) {
				            if (lastProp.hasOwnProperty(styleName) &&
				                (!nextProp || !nextProp.hasOwnProperty(styleName))) {
				              styleUpdates = styleUpdates || {};
				              styleUpdates[styleName] = '';
				            }
				          }
				          // Update styles that changed since `lastProp`.
				          for (styleName in nextProp) {
				            if (nextProp.hasOwnProperty(styleName) &&
				                lastProp[styleName] !== nextProp[styleName]) {
				              styleUpdates = styleUpdates || {};
				              styleUpdates[styleName] = nextProp[styleName];
				            }
				          }
				        } else {
				          // Relies on `updateStylesByID` not mutating `styleUpdates`.
				          styleUpdates = nextProp;
				        }
				      } else if (registrationNameModules.hasOwnProperty(propKey)) {
				        putListener(this._rootNodeID, propKey, nextProp, transaction);
				      } else if (
				          DOMProperty.isStandardName[propKey] ||
				          DOMProperty.isCustomAttribute(propKey)) {
				        ReactComponent.BackendIDOperations.updatePropertyByID(
				          this._rootNodeID,
				          propKey,
				          nextProp
				        );
				      }
				    }
				    if (styleUpdates) {
				      ReactComponent.BackendIDOperations.updateStylesByID(
				        this._rootNodeID,
				        styleUpdates
				      );
				    }
				  },

				  /**
				   * Reconciles the children with the various properties that affect the
				   * children content.
				   *
				   * @param {object} lastProps
				   * @param {ReactReconcileTransaction} transaction
				   */
				  _updateDOMChildren: function(lastProps, transaction) {
				    var nextProps = this.props;

				    var lastContent =
				      CONTENT_TYPES[typeof lastProps.children] ? lastProps.children : null;
				    var nextContent =
				      CONTENT_TYPES[typeof nextProps.children] ? nextProps.children : null;

				    var lastHtml =
				      lastProps.dangerouslySetInnerHTML &&
				      lastProps.dangerouslySetInnerHTML.__html;
				    var nextHtml =
				      nextProps.dangerouslySetInnerHTML &&
				      nextProps.dangerouslySetInnerHTML.__html;

				    // Note the use of `!=` which checks for null or undefined.
				    var lastChildren = lastContent != null ? null : lastProps.children;
				    var nextChildren = nextContent != null ? null : nextProps.children;

				    // If we're switching from children to content/html or vice versa, remove
				    // the old content
				    var lastHasContentOrHtml = lastContent != null || lastHtml != null;
				    var nextHasContentOrHtml = nextContent != null || nextHtml != null;
				    if (lastChildren != null && nextChildren == null) {
				      this.updateChildren(null, transaction);
				    } else if (lastHasContentOrHtml && !nextHasContentOrHtml) {
				      this.updateTextContent('');
				    }

				    if (nextContent != null) {
				      if (lastContent !== nextContent) {
				        this.updateTextContent('' + nextContent);
				      }
				    } else if (nextHtml != null) {
				      if (lastHtml !== nextHtml) {
				        ReactComponent.BackendIDOperations.updateInnerHTMLByID(
				          this._rootNodeID,
				          nextHtml
				        );
				      }
				    } else if (nextChildren != null) {
				      this.updateChildren(nextChildren, transaction);
				    }
				  },

				  /**
				   * Destroys all event registrations for this instance. Does not remove from
				   * the DOM. That must be done by the parent.
				   *
				   * @internal
				   */
				  unmountComponent: function() {
				    this.unmountChildren();
				    ReactBrowserEventEmitter.deleteAllListeners(this._rootNodeID);
				    ReactComponent.Mixin.unmountComponent.call(this);
				  }

				};

				assign(
				  ReactDOMComponent.prototype,
				  ReactComponent.Mixin,
				  ReactDOMComponent.Mixin,
				  ReactMultiChild.Mixin,
				  ReactBrowserComponentMixin
				);

				module.exports = ReactDOMComponent;

				},{"./CSSPropertyOperations":5,"./DOMProperty":11,"./DOMPropertyOperations":12,"./Object.assign":27,"./ReactBrowserComponentMixin":29,"./ReactBrowserEventEmitter":30,"./ReactComponent":32,"./ReactMount":63,"./ReactMultiChild":64,"./ReactPerf":68,"./escapeTextForBrowser":109,"./invariant":126,"./isEventSupported":127,"./keyOf":133,"./monitorCodeUse":136}],40:[function(_dereq_,module,exports){
				/**
				 * Copyright 2013-2014, Facebook, Inc.
				 * All rights reserved.
				 *
				 * This source code is licensed under the BSD-style license found in the
				 * LICENSE file in the root directory of this source tree. An additional grant
				 * of patent rights can be found in the PATENTS file in the same directory.
				 *
				 * @providesModule ReactDOMForm
				 */

				"use strict";

				var EventConstants = _dereq_("./EventConstants");
				var LocalEventTrapMixin = _dereq_("./LocalEventTrapMixin");
				var ReactBrowserComponentMixin = _dereq_("./ReactBrowserComponentMixin");
				var ReactCompositeComponent = _dereq_("./ReactCompositeComponent");
				var ReactElement = _dereq_("./ReactElement");
				var ReactDOM = _dereq_("./ReactDOM");

				// Store a reference to the <form> `ReactDOMComponent`. TODO: use string
				var form = ReactElement.createFactory(ReactDOM.form.type);

				/**
				 * Since onSubmit doesn't bubble OR capture on the top level in IE8, we need
				 * to capture it on the <form> element itself. There are lots of hacks we could
				 * do to accomplish this, but the most reliable is to make <form> a
				 * composite component and use `componentDidMount` to attach the event handlers.
				 */
				var ReactDOMForm = ReactCompositeComponent.createClass({
				  displayName: 'ReactDOMForm',

				  mixins: [ReactBrowserComponentMixin, LocalEventTrapMixin],

				  render: function() {
				    // TODO: Instead of using `ReactDOM` directly, we should use JSX. However,
				    // `jshint` fails to parse JSX so in order for linting to work in the open
				    // source repo, we need to just use `ReactDOM.form`.
				    return form(this.props);
				  },

				  componentDidMount: function() {
				    this.trapBubbledEvent(EventConstants.topLevelTypes.topReset, 'reset');
				    this.trapBubbledEvent(EventConstants.topLevelTypes.topSubmit, 'submit');
				  }
				});

				module.exports = ReactDOMForm;

				},{"./EventConstants":16,"./LocalEventTrapMixin":25,"./ReactBrowserComponentMixin":29,"./ReactCompositeComponent":34,"./ReactDOM":37,"./ReactElement":52}],41:[function(_dereq_,module,exports){
				/**
				 * Copyright 2013-2014, Facebook, Inc.
				 * All rights reserved.
				 *
				 * This source code is licensed under the BSD-style license found in the
				 * LICENSE file in the root directory of this source tree. An additional grant
				 * of patent rights can be found in the PATENTS file in the same directory.
				 *
				 * @providesModule ReactDOMIDOperations
				 * @typechecks static-only
				 */

				/*jslint evil: true */

				"use strict";

				var CSSPropertyOperations = _dereq_("./CSSPropertyOperations");
				var DOMChildrenOperations = _dereq_("./DOMChildrenOperations");
				var DOMPropertyOperations = _dereq_("./DOMPropertyOperations");
				var ReactMount = _dereq_("./ReactMount");
				var ReactPerf = _dereq_("./ReactPerf");

				var invariant = _dereq_("./invariant");
				var setInnerHTML = _dereq_("./setInnerHTML");

				/**
				 * Errors for properties that should not be updated with `updatePropertyById()`.
				 *
				 * @type {object}
				 * @private
				 */
				var INVALID_PROPERTY_ERRORS = {
				  dangerouslySetInnerHTML:
				    '`dangerouslySetInnerHTML` must be set using `updateInnerHTMLByID()`.',
				  style: '`style` must be set using `updateStylesByID()`.'
				};

				/**
				 * Operations used to process updates to DOM nodes. This is made injectable via
				 * `ReactComponent.BackendIDOperations`.
				 */
				var ReactDOMIDOperations = {

				  /**
				   * Updates a DOM node with new property values. This should only be used to
				   * update DOM properties in `DOMProperty`.
				   *
				   * @param {string} id ID of the node to update.
				   * @param {string} name A valid property name, see `DOMProperty`.
				   * @param {*} value New value of the property.
				   * @internal
				   */
				  updatePropertyByID: ReactPerf.measure(
				    'ReactDOMIDOperations',
				    'updatePropertyByID',
				    function(id, name, value) {
				      var node = ReactMount.getNode(id);
				      ("production" !== "development" ? invariant(
				        !INVALID_PROPERTY_ERRORS.hasOwnProperty(name),
				        'updatePropertyByID(...): %s',
				        INVALID_PROPERTY_ERRORS[name]
				      ) : invariant(!INVALID_PROPERTY_ERRORS.hasOwnProperty(name)));

				      // If we're updating to null or undefined, we should remove the property
				      // from the DOM node instead of inadvertantly setting to a string. This
				      // brings us in line with the same behavior we have on initial render.
				      if (value != null) {
				        DOMPropertyOperations.setValueForProperty(node, name, value);
				      } else {
				        DOMPropertyOperations.deleteValueForProperty(node, name);
				      }
				    }
				  ),

				  /**
				   * Updates a DOM node to remove a property. This should only be used to remove
				   * DOM properties in `DOMProperty`.
				   *
				   * @param {string} id ID of the node to update.
				   * @param {string} name A property name to remove, see `DOMProperty`.
				   * @internal
				   */
				  deletePropertyByID: ReactPerf.measure(
				    'ReactDOMIDOperations',
				    'deletePropertyByID',
				    function(id, name, value) {
				      var node = ReactMount.getNode(id);
				      ("production" !== "development" ? invariant(
				        !INVALID_PROPERTY_ERRORS.hasOwnProperty(name),
				        'updatePropertyByID(...): %s',
				        INVALID_PROPERTY_ERRORS[name]
				      ) : invariant(!INVALID_PROPERTY_ERRORS.hasOwnProperty(name)));
				      DOMPropertyOperations.deleteValueForProperty(node, name, value);
				    }
				  ),

				  /**
				   * Updates a DOM node with new style values. If a value is specified as '',
				   * the corresponding style property will be unset.
				   *
				   * @param {string} id ID of the node to update.
				   * @param {object} styles Mapping from styles to values.
				   * @internal
				   */
				  updateStylesByID: ReactPerf.measure(
				    'ReactDOMIDOperations',
				    'updateStylesByID',
				    function(id, styles) {
				      var node = ReactMount.getNode(id);
				      CSSPropertyOperations.setValueForStyles(node, styles);
				    }
				  ),

				  /**
				   * Updates a DOM node's innerHTML.
				   *
				   * @param {string} id ID of the node to update.
				   * @param {string} html An HTML string.
				   * @internal
				   */
				  updateInnerHTMLByID: ReactPerf.measure(
				    'ReactDOMIDOperations',
				    'updateInnerHTMLByID',
				    function(id, html) {
				      var node = ReactMount.getNode(id);
				      setInnerHTML(node, html);
				    }
				  ),

				  /**
				   * Updates a DOM node's text content set by `props.content`.
				   *
				   * @param {string} id ID of the node to update.
				   * @param {string} content Text content.
				   * @internal
				   */
				  updateTextContentByID: ReactPerf.measure(
				    'ReactDOMIDOperations',
				    'updateTextContentByID',
				    function(id, content) {
				      var node = ReactMount.getNode(id);
				      DOMChildrenOperations.updateTextContent(node, content);
				    }
				  ),

				  /**
				   * Replaces a DOM node that exists in the document with markup.
				   *
				   * @param {string} id ID of child to be replaced.
				   * @param {string} markup Dangerous markup to inject in place of child.
				   * @internal
				   * @see {Danger.dangerouslyReplaceNodeWithMarkup}
				   */
				  dangerouslyReplaceNodeWithMarkupByID: ReactPerf.measure(
				    'ReactDOMIDOperations',
				    'dangerouslyReplaceNodeWithMarkupByID',
				    function(id, markup) {
				      var node = ReactMount.getNode(id);
				      DOMChildrenOperations.dangerouslyReplaceNodeWithMarkup(node, markup);
				    }
				  ),

				  /**
				   * Updates a component's children by processing a series of updates.
				   *
				   * @param {array<object>} updates List of update configurations.
				   * @param {array<string>} markup List of markup strings.
				   * @internal
				   */
				  dangerouslyProcessChildrenUpdates: ReactPerf.measure(
				    'ReactDOMIDOperations',
				    'dangerouslyProcessChildrenUpdates',
				    function(updates, markup) {
				      for (var i = 0; i < updates.length; i++) {
				        updates[i].parentNode = ReactMount.getNode(updates[i].parentID);
				      }
				      DOMChildrenOperations.processUpdates(updates, markup);
				    }
				  )
				};

				module.exports = ReactDOMIDOperations;

				},{"./CSSPropertyOperations":5,"./DOMChildrenOperations":10,"./DOMPropertyOperations":12,"./ReactMount":63,"./ReactPerf":68,"./invariant":126,"./setInnerHTML":140}],42:[function(_dereq_,module,exports){
				/**
				 * Copyright 2013-2014, Facebook, Inc.
				 * All rights reserved.
				 *
				 * This source code is licensed under the BSD-style license found in the
				 * LICENSE file in the root directory of this source tree. An additional grant
				 * of patent rights can be found in the PATENTS file in the same directory.
				 *
				 * @providesModule ReactDOMImg
				 */

				"use strict";

				var EventConstants = _dereq_("./EventConstants");
				var LocalEventTrapMixin = _dereq_("./LocalEventTrapMixin");
				var ReactBrowserComponentMixin = _dereq_("./ReactBrowserComponentMixin");
				var ReactCompositeComponent = _dereq_("./ReactCompositeComponent");
				var ReactElement = _dereq_("./ReactElement");
				var ReactDOM = _dereq_("./ReactDOM");

				// Store a reference to the <img> `ReactDOMComponent`. TODO: use string
				var img = ReactElement.createFactory(ReactDOM.img.type);

				/**
				 * Since onLoad doesn't bubble OR capture on the top level in IE8, we need to
				 * capture it on the <img> element itself. There are lots of hacks we could do
				 * to accomplish this, but the most reliable is to make <img> a composite
				 * component and use `componentDidMount` to attach the event handlers.
				 */
				var ReactDOMImg = ReactCompositeComponent.createClass({
				  displayName: 'ReactDOMImg',
				  tagName: 'IMG',

				  mixins: [ReactBrowserComponentMixin, LocalEventTrapMixin],

				  render: function() {
				    return img(this.props);
				  },

				  componentDidMount: function() {
				    this.trapBubbledEvent(EventConstants.topLevelTypes.topLoad, 'load');
				    this.trapBubbledEvent(EventConstants.topLevelTypes.topError, 'error');
				  }
				});

				module.exports = ReactDOMImg;

				},{"./EventConstants":16,"./LocalEventTrapMixin":25,"./ReactBrowserComponentMixin":29,"./ReactCompositeComponent":34,"./ReactDOM":37,"./ReactElement":52}],43:[function(_dereq_,module,exports){
				/**
				 * Copyright 2013-2014, Facebook, Inc.
				 * All rights reserved.
				 *
				 * This source code is licensed under the BSD-style license found in the
				 * LICENSE file in the root directory of this source tree. An additional grant
				 * of patent rights can be found in the PATENTS file in the same directory.
				 *
				 * @providesModule ReactDOMInput
				 */

				"use strict";

				var AutoFocusMixin = _dereq_("./AutoFocusMixin");
				var DOMPropertyOperations = _dereq_("./DOMPropertyOperations");
				var LinkedValueUtils = _dereq_("./LinkedValueUtils");
				var ReactBrowserComponentMixin = _dereq_("./ReactBrowserComponentMixin");
				var ReactCompositeComponent = _dereq_("./ReactCompositeComponent");
				var ReactElement = _dereq_("./ReactElement");
				var ReactDOM = _dereq_("./ReactDOM");
				var ReactMount = _dereq_("./ReactMount");
				var ReactUpdates = _dereq_("./ReactUpdates");

				var assign = _dereq_("./Object.assign");
				var invariant = _dereq_("./invariant");

				// Store a reference to the <input> `ReactDOMComponent`. TODO: use string
				var input = ReactElement.createFactory(ReactDOM.input.type);

				var instancesByReactID = {};

				function forceUpdateIfMounted() {
				  /*jshint validthis:true */
				  if (this.isMounted()) {
				    this.forceUpdate();
				  }
				}

				/**
				 * Implements an <input> native component that allows setting these optional
				 * props: `checked`, `value`, `defaultChecked`, and `defaultValue`.
				 *
				 * If `checked` or `value` are not supplied (or null/undefined), user actions
				 * that affect the checked state or value will trigger updates to the element.
				 *
				 * If they are supplied (and not null/undefined), the rendered element will not
				 * trigger updates to the element. Instead, the props must change in order for
				 * the rendered element to be updated.
				 *
				 * The rendered element will be initialized as unchecked (or `defaultChecked`)
				 * with an empty value (or `defaultValue`).
				 *
				 * @see http://www.w3.org/TR/2012/WD-html5-20121025/the-input-element.html
				 */
				var ReactDOMInput = ReactCompositeComponent.createClass({
				  displayName: 'ReactDOMInput',

				  mixins: [AutoFocusMixin, LinkedValueUtils.Mixin, ReactBrowserComponentMixin],

				  getInitialState: function() {
				    var defaultValue = this.props.defaultValue;
				    return {
				      initialChecked: this.props.defaultChecked || false,
				      initialValue: defaultValue != null ? defaultValue : null
				    };
				  },

				  render: function() {
				    // Clone `this.props` so we don't mutate the input.
				    var props = assign({}, this.props);

				    props.defaultChecked = null;
				    props.defaultValue = null;

				    var value = LinkedValueUtils.getValue(this);
				    props.value = value != null ? value : this.state.initialValue;

				    var checked = LinkedValueUtils.getChecked(this);
				    props.checked = checked != null ? checked : this.state.initialChecked;

				    props.onChange = this._handleChange;

				    return input(props, this.props.children);
				  },

				  componentDidMount: function() {
				    var id = ReactMount.getID(this.getDOMNode());
				    instancesByReactID[id] = this;
				  },

				  componentWillUnmount: function() {
				    var rootNode = this.getDOMNode();
				    var id = ReactMount.getID(rootNode);
				    delete instancesByReactID[id];
				  },

				  componentDidUpdate: function(prevProps, prevState, prevContext) {
				    var rootNode = this.getDOMNode();
				    if (this.props.checked != null) {
				      DOMPropertyOperations.setValueForProperty(
				        rootNode,
				        'checked',
				        this.props.checked || false
				      );
				    }

				    var value = LinkedValueUtils.getValue(this);
				    if (value != null) {
				      // Cast `value` to a string to ensure the value is set correctly. While
				      // browsers typically do this as necessary, jsdom doesn't.
				      DOMPropertyOperations.setValueForProperty(rootNode, 'value', '' + value);
				    }
				  },

				  _handleChange: function(event) {
				    var returnValue;
				    var onChange = LinkedValueUtils.getOnChange(this);
				    if (onChange) {
				      returnValue = onChange.call(this, event);
				    }
				    // Here we use asap to wait until all updates have propagated, which
				    // is important when using controlled components within layers:
				    // https://github.com/facebook/react/issues/1698
				    ReactUpdates.asap(forceUpdateIfMounted, this);

				    var name = this.props.name;
				    if (this.props.type === 'radio' && name != null) {
				      var rootNode = this.getDOMNode();
				      var queryRoot = rootNode;

				      while (queryRoot.parentNode) {
				        queryRoot = queryRoot.parentNode;
				      }

				      // If `rootNode.form` was non-null, then we could try `form.elements`,
				      // but that sometimes behaves strangely in IE8. We could also try using
				      // `form.getElementsByName`, but that will only return direct children
				      // and won't include inputs that use the HTML5 `form=` attribute. Since
				      // the input might not even be in a form, let's just use the global
				      // `querySelectorAll` to ensure we don't miss anything.
				      var group = queryRoot.querySelectorAll(
				        'input[name=' + JSON.stringify('' + name) + '][type="radio"]');

				      for (var i = 0, groupLen = group.length; i < groupLen; i++) {
				        var otherNode = group[i];
				        if (otherNode === rootNode ||
				            otherNode.form !== rootNode.form) {
				          continue;
				        }
				        var otherID = ReactMount.getID(otherNode);
				        ("production" !== "development" ? invariant(
				          otherID,
				          'ReactDOMInput: Mixing React and non-React radio inputs with the ' +
				          'same `name` is not supported.'
				        ) : invariant(otherID));
				        var otherInstance = instancesByReactID[otherID];
				        ("production" !== "development" ? invariant(
				          otherInstance,
				          'ReactDOMInput: Unknown radio button ID %s.',
				          otherID
				        ) : invariant(otherInstance));
				        // If this is a controlled radio button group, forcing the input that
				        // was previously checked to update will cause it to be come re-checked
				        // as appropriate.
				        ReactUpdates.asap(forceUpdateIfMounted, otherInstance);
				      }
				    }

				    return returnValue;
				  }

				});

				module.exports = ReactDOMInput;

				},{"./AutoFocusMixin":2,"./DOMPropertyOperations":12,"./LinkedValueUtils":24,"./Object.assign":27,"./ReactBrowserComponentMixin":29,"./ReactCompositeComponent":34,"./ReactDOM":37,"./ReactElement":52,"./ReactMount":63,"./ReactUpdates":79,"./invariant":126}],44:[function(_dereq_,module,exports){
				/**
				 * Copyright 2013-2014, Facebook, Inc.
				 * All rights reserved.
				 *
				 * This source code is licensed under the BSD-style license found in the
				 * LICENSE file in the root directory of this source tree. An additional grant
				 * of patent rights can be found in the PATENTS file in the same directory.
				 *
				 * @providesModule ReactDOMOption
				 */

				"use strict";

				var ReactBrowserComponentMixin = _dereq_("./ReactBrowserComponentMixin");
				var ReactCompositeComponent = _dereq_("./ReactCompositeComponent");
				var ReactElement = _dereq_("./ReactElement");
				var ReactDOM = _dereq_("./ReactDOM");

				var warning = _dereq_("./warning");

				// Store a reference to the <option> `ReactDOMComponent`. TODO: use string
				var option = ReactElement.createFactory(ReactDOM.option.type);

				/**
				 * Implements an <option> native component that warns when `selected` is set.
				 */
				var ReactDOMOption = ReactCompositeComponent.createClass({
				  displayName: 'ReactDOMOption',

				  mixins: [ReactBrowserComponentMixin],

				  componentWillMount: function() {
				    // TODO (yungsters): Remove support for `selected` in <option>.
				    if ("production" !== "development") {
				      ("production" !== "development" ? warning(
				        this.props.selected == null,
				        'Use the `defaultValue` or `value` props on <select> instead of ' +
				        'setting `selected` on <option>.'
				      ) : null);
				    }
				  },

				  render: function() {
				    return option(this.props, this.props.children);
				  }

				});

				module.exports = ReactDOMOption;

				},{"./ReactBrowserComponentMixin":29,"./ReactCompositeComponent":34,"./ReactDOM":37,"./ReactElement":52,"./warning":145}],45:[function(_dereq_,module,exports){
				/**
				 * Copyright 2013-2014, Facebook, Inc.
				 * All rights reserved.
				 *
				 * This source code is licensed under the BSD-style license found in the
				 * LICENSE file in the root directory of this source tree. An additional grant
				 * of patent rights can be found in the PATENTS file in the same directory.
				 *
				 * @providesModule ReactDOMSelect
				 */

				"use strict";

				var AutoFocusMixin = _dereq_("./AutoFocusMixin");
				var LinkedValueUtils = _dereq_("./LinkedValueUtils");
				var ReactBrowserComponentMixin = _dereq_("./ReactBrowserComponentMixin");
				var ReactCompositeComponent = _dereq_("./ReactCompositeComponent");
				var ReactElement = _dereq_("./ReactElement");
				var ReactDOM = _dereq_("./ReactDOM");
				var ReactUpdates = _dereq_("./ReactUpdates");

				var assign = _dereq_("./Object.assign");

				// Store a reference to the <select> `ReactDOMComponent`. TODO: use string
				var select = ReactElement.createFactory(ReactDOM.select.type);

				function updateWithPendingValueIfMounted() {
				  /*jshint validthis:true */
				  if (this.isMounted()) {
				    this.setState({value: this._pendingValue});
				    this._pendingValue = 0;
				  }
				}

				/**
				 * Validation function for `value` and `defaultValue`.
				 * @private
				 */
				function selectValueType(props, propName, componentName) {
				  if (props[propName] == null) {
				    return;
				  }
				  if (props.multiple) {
				    if (!Array.isArray(props[propName])) {
				      return new Error(
				        ("The `" + propName + "` prop supplied to <select> must be an array if ") +
				        ("`multiple` is true.")
				      );
				    }
				  } else {
				    if (Array.isArray(props[propName])) {
				      return new Error(
				        ("The `" + propName + "` prop supplied to <select> must be a scalar ") +
				        ("value if `multiple` is false.")
				      );
				    }
				  }
				}

				/**
				 * If `value` is supplied, updates <option> elements on mount and update.
				 * @param {ReactComponent} component Instance of ReactDOMSelect
				 * @param {?*} propValue For uncontrolled components, null/undefined. For
				 * controlled components, a string (or with `multiple`, a list of strings).
				 * @private
				 */
				function updateOptions(component, propValue) {
				  var multiple = component.props.multiple;
				  var value = propValue != null ? propValue : component.state.value;
				  var options = component.getDOMNode().options;
				  var selectedValue, i, l;
				  if (multiple) {
				    selectedValue = {};
				    for (i = 0, l = value.length; i < l; ++i) {
				      selectedValue['' + value[i]] = true;
				    }
				  } else {
				    selectedValue = '' + value;
				  }
				  for (i = 0, l = options.length; i < l; i++) {
				    var selected = multiple ?
				      selectedValue.hasOwnProperty(options[i].value) :
				      options[i].value === selectedValue;

				    if (selected !== options[i].selected) {
				      options[i].selected = selected;
				    }
				  }
				}

				/**
				 * Implements a <select> native component that allows optionally setting the
				 * props `value` and `defaultValue`. If `multiple` is false, the prop must be a
				 * string. If `multiple` is true, the prop must be an array of strings.
				 *
				 * If `value` is not supplied (or null/undefined), user actions that change the
				 * selected option will trigger updates to the rendered options.
				 *
				 * If it is supplied (and not null/undefined), the rendered options will not
				 * update in response to user actions. Instead, the `value` prop must change in
				 * order for the rendered options to update.
				 *
				 * If `defaultValue` is provided, any options with the supplied values will be
				 * selected.
				 */
				var ReactDOMSelect = ReactCompositeComponent.createClass({
				  displayName: 'ReactDOMSelect',

				  mixins: [AutoFocusMixin, LinkedValueUtils.Mixin, ReactBrowserComponentMixin],

				  propTypes: {
				    defaultValue: selectValueType,
				    value: selectValueType
				  },

				  getInitialState: function() {
				    return {value: this.props.defaultValue || (this.props.multiple ? [] : '')};
				  },

				  componentWillMount: function() {
				    this._pendingValue = null;
				  },

				  componentWillReceiveProps: function(nextProps) {
				    if (!this.props.multiple && nextProps.multiple) {
				      this.setState({value: [this.state.value]});
				    } else if (this.props.multiple && !nextProps.multiple) {
				      this.setState({value: this.state.value[0]});
				    }
				  },

				  render: function() {
				    // Clone `this.props` so we don't mutate the input.
				    var props = assign({}, this.props);

				    props.onChange = this._handleChange;
				    props.value = null;

				    return select(props, this.props.children);
				  },

				  componentDidMount: function() {
				    updateOptions(this, LinkedValueUtils.getValue(this));
				  },

				  componentDidUpdate: function(prevProps) {
				    var value = LinkedValueUtils.getValue(this);
				    var prevMultiple = !!prevProps.multiple;
				    var multiple = !!this.props.multiple;
				    if (value != null || prevMultiple !== multiple) {
				      updateOptions(this, value);
				    }
				  },

				  _handleChange: function(event) {
				    var returnValue;
				    var onChange = LinkedValueUtils.getOnChange(this);
				    if (onChange) {
				      returnValue = onChange.call(this, event);
				    }

				    var selectedValue;
				    if (this.props.multiple) {
				      selectedValue = [];
				      var options = event.target.options;
				      for (var i = 0, l = options.length; i < l; i++) {
				        if (options[i].selected) {
				          selectedValue.push(options[i].value);
				        }
				      }
				    } else {
				      selectedValue = event.target.value;
				    }

				    this._pendingValue = selectedValue;
				    ReactUpdates.asap(updateWithPendingValueIfMounted, this);
				    return returnValue;
				  }

				});

				module.exports = ReactDOMSelect;

				},{"./AutoFocusMixin":2,"./LinkedValueUtils":24,"./Object.assign":27,"./ReactBrowserComponentMixin":29,"./ReactCompositeComponent":34,"./ReactDOM":37,"./ReactElement":52,"./ReactUpdates":79}],46:[function(_dereq_,module,exports){
				/**
				 * Copyright 2013-2014, Facebook, Inc.
				 * All rights reserved.
				 *
				 * This source code is licensed under the BSD-style license found in the
				 * LICENSE file in the root directory of this source tree. An additional grant
				 * of patent rights can be found in the PATENTS file in the same directory.
				 *
				 * @providesModule ReactDOMSelection
				 */

				"use strict";

				var ExecutionEnvironment = _dereq_("./ExecutionEnvironment");

				var getNodeForCharacterOffset = _dereq_("./getNodeForCharacterOffset");
				var getTextContentAccessor = _dereq_("./getTextContentAccessor");

				/**
				 * While `isCollapsed` is available on the Selection object and `collapsed`
				 * is available on the Range object, IE11 sometimes gets them wrong.
				 * If the anchor/focus nodes and offsets are the same, the range is collapsed.
				 */
				function isCollapsed(anchorNode, anchorOffset, focusNode, focusOffset) {
				  return anchorNode === focusNode && anchorOffset === focusOffset;
				}

				/**
				 * Get the appropriate anchor and focus node/offset pairs for IE.
				 *
				 * The catch here is that IE's selection API doesn't provide information
				 * about whether the selection is forward or backward, so we have to
				 * behave as though it's always forward.
				 *
				 * IE text differs from modern selection in that it behaves as though
				 * block elements end with a new line. This means character offsets will
				 * differ between the two APIs.
				 *
				 * @param {DOMElement} node
				 * @return {object}
				 */
				function getIEOffsets(node) {
				  var selection = document.selection;
				  var selectedRange = selection.createRange();
				  var selectedLength = selectedRange.text.length;

				  // Duplicate selection so we can move range without breaking user selection.
				  var fromStart = selectedRange.duplicate();
				  fromStart.moveToElementText(node);
				  fromStart.setEndPoint('EndToStart', selectedRange);

				  var startOffset = fromStart.text.length;
				  var endOffset = startOffset + selectedLength;

				  return {
				    start: startOffset,
				    end: endOffset
				  };
				}

				/**
				 * @param {DOMElement} node
				 * @return {?object}
				 */
				function getModernOffsets(node) {
				  var selection = window.getSelection && window.getSelection();

				  if (!selection || selection.rangeCount === 0) {
				    return null;
				  }

				  var anchorNode = selection.anchorNode;
				  var anchorOffset = selection.anchorOffset;
				  var focusNode = selection.focusNode;
				  var focusOffset = selection.focusOffset;

				  var currentRange = selection.getRangeAt(0);

				  // If the node and offset values are the same, the selection is collapsed.
				  // `Selection.isCollapsed` is available natively, but IE sometimes gets
				  // this value wrong.
				  var isSelectionCollapsed = isCollapsed(
				    selection.anchorNode,
				    selection.anchorOffset,
				    selection.focusNode,
				    selection.focusOffset
				  );

				  var rangeLength = isSelectionCollapsed ? 0 : currentRange.toString().length;

				  var tempRange = currentRange.cloneRange();
				  tempRange.selectNodeContents(node);
				  tempRange.setEnd(currentRange.startContainer, currentRange.startOffset);

				  var isTempRangeCollapsed = isCollapsed(
				    tempRange.startContainer,
				    tempRange.startOffset,
				    tempRange.endContainer,
				    tempRange.endOffset
				  );

				  var start = isTempRangeCollapsed ? 0 : tempRange.toString().length;
				  var end = start + rangeLength;

				  // Detect whether the selection is backward.
				  var detectionRange = document.createRange();
				  detectionRange.setStart(anchorNode, anchorOffset);
				  detectionRange.setEnd(focusNode, focusOffset);
				  var isBackward = detectionRange.collapsed;

				  return {
				    start: isBackward ? end : start,
				    end: isBackward ? start : end
				  };
				}

				/**
				 * @param {DOMElement|DOMTextNode} node
				 * @param {object} offsets
				 */
				function setIEOffsets(node, offsets) {
				  var range = document.selection.createRange().duplicate();
				  var start, end;

				  if (typeof offsets.end === 'undefined') {
				    start = offsets.start;
				    end = start;
				  } else if (offsets.start > offsets.end) {
				    start = offsets.end;
				    end = offsets.start;
				  } else {
				    start = offsets.start;
				    end = offsets.end;
				  }

				  range.moveToElementText(node);
				  range.moveStart('character', start);
				  range.setEndPoint('EndToStart', range);
				  range.moveEnd('character', end - start);
				  range.select();
				}

				/**
				 * In modern non-IE browsers, we can support both forward and backward
				 * selections.
				 *
				 * Note: IE10+ supports the Selection object, but it does not support
				 * the `extend` method, which means that even in modern IE, it's not possible
				 * to programatically create a backward selection. Thus, for all IE
				 * versions, we use the old IE API to create our selections.
				 *
				 * @param {DOMElement|DOMTextNode} node
				 * @param {object} offsets
				 */
				function setModernOffsets(node, offsets) {
				  if (!window.getSelection) {
				    return;
				  }

				  var selection = window.getSelection();
				  var length = node[getTextContentAccessor()].length;
				  var start = Math.min(offsets.start, length);
				  var end = typeof offsets.end === 'undefined' ?
				            start : Math.min(offsets.end, length);

				  // IE 11 uses modern selection, but doesn't support the extend method.
				  // Flip backward selections, so we can set with a single range.
				  if (!selection.extend && start > end) {
				    var temp = end;
				    end = start;
				    start = temp;
				  }

				  var startMarker = getNodeForCharacterOffset(node, start);
				  var endMarker = getNodeForCharacterOffset(node, end);

				  if (startMarker && endMarker) {
				    var range = document.createRange();
				    range.setStart(startMarker.node, startMarker.offset);
				    selection.removeAllRanges();

				    if (start > end) {
				      selection.addRange(range);
				      selection.extend(endMarker.node, endMarker.offset);
				    } else {
				      range.setEnd(endMarker.node, endMarker.offset);
				      selection.addRange(range);
				    }
				  }
				}

				var useIEOffsets = ExecutionEnvironment.canUseDOM && document.selection;

				var ReactDOMSelection = {
				  /**
				   * @param {DOMElement} node
				   */
				  getOffsets: useIEOffsets ? getIEOffsets : getModernOffsets,

				  /**
				   * @param {DOMElement|DOMTextNode} node
				   * @param {object} offsets
				   */
				  setOffsets: useIEOffsets ? setIEOffsets : setModernOffsets
				};

				module.exports = ReactDOMSelection;

				},{"./ExecutionEnvironment":22,"./getNodeForCharacterOffset":119,"./getTextContentAccessor":121}],47:[function(_dereq_,module,exports){
				/**
				 * Copyright 2013-2014, Facebook, Inc.
				 * All rights reserved.
				 *
				 * This source code is licensed under the BSD-style license found in the
				 * LICENSE file in the root directory of this source tree. An additional grant
				 * of patent rights can be found in the PATENTS file in the same directory.
				 *
				 * @providesModule ReactDOMTextarea
				 */

				"use strict";

				var AutoFocusMixin = _dereq_("./AutoFocusMixin");
				var DOMPropertyOperations = _dereq_("./DOMPropertyOperations");
				var LinkedValueUtils = _dereq_("./LinkedValueUtils");
				var ReactBrowserComponentMixin = _dereq_("./ReactBrowserComponentMixin");
				var ReactCompositeComponent = _dereq_("./ReactCompositeComponent");
				var ReactElement = _dereq_("./ReactElement");
				var ReactDOM = _dereq_("./ReactDOM");
				var ReactUpdates = _dereq_("./ReactUpdates");

				var assign = _dereq_("./Object.assign");
				var invariant = _dereq_("./invariant");

				var warning = _dereq_("./warning");

				// Store a reference to the <textarea> `ReactDOMComponent`. TODO: use string
				var textarea = ReactElement.createFactory(ReactDOM.textarea.type);

				function forceUpdateIfMounted() {
				  /*jshint validthis:true */
				  if (this.isMounted()) {
				    this.forceUpdate();
				  }
				}

				/**
				 * Implements a <textarea> native component that allows setting `value`, and
				 * `defaultValue`. This differs from the traditional DOM API because value is
				 * usually set as PCDATA children.
				 *
				 * If `value` is not supplied (or null/undefined), user actions that affect the
				 * value will trigger updates to the element.
				 *
				 * If `value` is supplied (and not null/undefined), the rendered element will
				 * not trigger updates to the element. Instead, the `value` prop must change in
				 * order for the rendered element to be updated.
				 *
				 * The rendered element will be initialized with an empty value, the prop
				 * `defaultValue` if specified, or the children content (deprecated).
				 */
				var ReactDOMTextarea = ReactCompositeComponent.createClass({
				  displayName: 'ReactDOMTextarea',

				  mixins: [AutoFocusMixin, LinkedValueUtils.Mixin, ReactBrowserComponentMixin],

				  getInitialState: function() {
				    var defaultValue = this.props.defaultValue;
				    // TODO (yungsters): Remove support for children content in <textarea>.
				    var children = this.props.children;
				    if (children != null) {
				      if ("production" !== "development") {
				        ("production" !== "development" ? warning(
				          false,
				          'Use the `defaultValue` or `value` props instead of setting ' +
				          'children on <textarea>.'
				        ) : null);
				      }
				      ("production" !== "development" ? invariant(
				        defaultValue == null,
				        'If you supply `defaultValue` on a <textarea>, do not pass children.'
				      ) : invariant(defaultValue == null));
				      if (Array.isArray(children)) {
				        ("production" !== "development" ? invariant(
				          children.length <= 1,
				          '<textarea> can only have at most one child.'
				        ) : invariant(children.length <= 1));
				        children = children[0];
				      }

				      defaultValue = '' + children;
				    }
				    if (defaultValue == null) {
				      defaultValue = '';
				    }
				    var value = LinkedValueUtils.getValue(this);
				    return {
				      // We save the initial value so that `ReactDOMComponent` doesn't update
				      // `textContent` (unnecessary since we update value).
				      // The initial value can be a boolean or object so that's why it's
				      // forced to be a string.
				      initialValue: '' + (value != null ? value : defaultValue)
				    };
				  },

				  render: function() {
				    // Clone `this.props` so we don't mutate the input.
				    var props = assign({}, this.props);

				    ("production" !== "development" ? invariant(
				      props.dangerouslySetInnerHTML == null,
				      '`dangerouslySetInnerHTML` does not make sense on <textarea>.'
				    ) : invariant(props.dangerouslySetInnerHTML == null));

				    props.defaultValue = null;
				    props.value = null;
				    props.onChange = this._handleChange;

				    // Always set children to the same thing. In IE9, the selection range will
				    // get reset if `textContent` is mutated.
				    return textarea(props, this.state.initialValue);
				  },

				  componentDidUpdate: function(prevProps, prevState, prevContext) {
				    var value = LinkedValueUtils.getValue(this);
				    if (value != null) {
				      var rootNode = this.getDOMNode();
				      // Cast `value` to a string to ensure the value is set correctly. While
				      // browsers typically do this as necessary, jsdom doesn't.
				      DOMPropertyOperations.setValueForProperty(rootNode, 'value', '' + value);
				    }
				  },

				  _handleChange: function(event) {
				    var returnValue;
				    var onChange = LinkedValueUtils.getOnChange(this);
				    if (onChange) {
				      returnValue = onChange.call(this, event);
				    }
				    ReactUpdates.asap(forceUpdateIfMounted, this);
				    return returnValue;
				  }

				});

				module.exports = ReactDOMTextarea;

				},{"./AutoFocusMixin":2,"./DOMPropertyOperations":12,"./LinkedValueUtils":24,"./Object.assign":27,"./ReactBrowserComponentMixin":29,"./ReactCompositeComponent":34,"./ReactDOM":37,"./ReactElement":52,"./ReactUpdates":79,"./invariant":126,"./warning":145}],48:[function(_dereq_,module,exports){
				/**
				 * Copyright 2013-2014, Facebook, Inc.
				 * All rights reserved.
				 *
				 * This source code is licensed under the BSD-style license found in the
				 * LICENSE file in the root directory of this source tree. An additional grant
				 * of patent rights can be found in the PATENTS file in the same directory.
				 *
				 * @providesModule ReactDefaultBatchingStrategy
				 */

				"use strict";

				var ReactUpdates = _dereq_("./ReactUpdates");
				var Transaction = _dereq_("./Transaction");

				var assign = _dereq_("./Object.assign");
				var emptyFunction = _dereq_("./emptyFunction");

				var RESET_BATCHED_UPDATES = {
				  initialize: emptyFunction,
				  close: function() {
				    ReactDefaultBatchingStrategy.isBatchingUpdates = false;
				  }
				};

				var FLUSH_BATCHED_UPDATES = {
				  initialize: emptyFunction,
				  close: ReactUpdates.flushBatchedUpdates.bind(ReactUpdates)
				};

				var TRANSACTION_WRAPPERS = [FLUSH_BATCHED_UPDATES, RESET_BATCHED_UPDATES];

				function ReactDefaultBatchingStrategyTransaction() {
				  this.reinitializeTransaction();
				}

				assign(
				  ReactDefaultBatchingStrategyTransaction.prototype,
				  Transaction.Mixin,
				  {
				    getTransactionWrappers: function() {
				      return TRANSACTION_WRAPPERS;
				    }
				  }
				);

				var transaction = new ReactDefaultBatchingStrategyTransaction();

				var ReactDefaultBatchingStrategy = {
				  isBatchingUpdates: false,

				  /**
				   * Call the provided function in a context within which calls to `setState`
				   * and friends are batched such that components aren't updated unnecessarily.
				   */
				  batchedUpdates: function(callback, a, b) {
				    var alreadyBatchingUpdates = ReactDefaultBatchingStrategy.isBatchingUpdates;

				    ReactDefaultBatchingStrategy.isBatchingUpdates = true;

				    // The code is written this way to avoid extra allocations
				    if (alreadyBatchingUpdates) {
				      callback(a, b);
				    } else {
				      transaction.perform(callback, null, a, b);
				    }
				  }
				};

				module.exports = ReactDefaultBatchingStrategy;

				},{"./Object.assign":27,"./ReactUpdates":79,"./Transaction":95,"./emptyFunction":107}],49:[function(_dereq_,module,exports){
				/**
				 * Copyright 2013-2014, Facebook, Inc.
				 * All rights reserved.
				 *
				 * This source code is licensed under the BSD-style license found in the
				 * LICENSE file in the root directory of this source tree. An additional grant
				 * of patent rights can be found in the PATENTS file in the same directory.
				 *
				 * @providesModule ReactDefaultInjection
				 */

				"use strict";

				var BeforeInputEventPlugin = _dereq_("./BeforeInputEventPlugin");
				var ChangeEventPlugin = _dereq_("./ChangeEventPlugin");
				var ClientReactRootIndex = _dereq_("./ClientReactRootIndex");
				var CompositionEventPlugin = _dereq_("./CompositionEventPlugin");
				var DefaultEventPluginOrder = _dereq_("./DefaultEventPluginOrder");
				var EnterLeaveEventPlugin = _dereq_("./EnterLeaveEventPlugin");
				var ExecutionEnvironment = _dereq_("./ExecutionEnvironment");
				var HTMLDOMPropertyConfig = _dereq_("./HTMLDOMPropertyConfig");
				var MobileSafariClickEventPlugin = _dereq_("./MobileSafariClickEventPlugin");
				var ReactBrowserComponentMixin = _dereq_("./ReactBrowserComponentMixin");
				var ReactComponentBrowserEnvironment =
				  _dereq_("./ReactComponentBrowserEnvironment");
				var ReactDefaultBatchingStrategy = _dereq_("./ReactDefaultBatchingStrategy");
				var ReactDOMComponent = _dereq_("./ReactDOMComponent");
				var ReactDOMButton = _dereq_("./ReactDOMButton");
				var ReactDOMForm = _dereq_("./ReactDOMForm");
				var ReactDOMImg = _dereq_("./ReactDOMImg");
				var ReactDOMInput = _dereq_("./ReactDOMInput");
				var ReactDOMOption = _dereq_("./ReactDOMOption");
				var ReactDOMSelect = _dereq_("./ReactDOMSelect");
				var ReactDOMTextarea = _dereq_("./ReactDOMTextarea");
				var ReactEventListener = _dereq_("./ReactEventListener");
				var ReactInjection = _dereq_("./ReactInjection");
				var ReactInstanceHandles = _dereq_("./ReactInstanceHandles");
				var ReactMount = _dereq_("./ReactMount");
				var SelectEventPlugin = _dereq_("./SelectEventPlugin");
				var ServerReactRootIndex = _dereq_("./ServerReactRootIndex");
				var SimpleEventPlugin = _dereq_("./SimpleEventPlugin");
				var SVGDOMPropertyConfig = _dereq_("./SVGDOMPropertyConfig");

				var createFullPageComponent = _dereq_("./createFullPageComponent");

				function inject() {
				  ReactInjection.EventEmitter.injectReactEventListener(
				    ReactEventListener
				  );

				  /**
				   * Inject modules for resolving DOM hierarchy and plugin ordering.
				   */
				  ReactInjection.EventPluginHub.injectEventPluginOrder(DefaultEventPluginOrder);
				  ReactInjection.EventPluginHub.injectInstanceHandle(ReactInstanceHandles);
				  ReactInjection.EventPluginHub.injectMount(ReactMount);

				  /**
				   * Some important event plugins included by default (without having to require
				   * them).
				   */
				  ReactInjection.EventPluginHub.injectEventPluginsByName({
				    SimpleEventPlugin: SimpleEventPlugin,
				    EnterLeaveEventPlugin: EnterLeaveEventPlugin,
				    ChangeEventPlugin: ChangeEventPlugin,
				    CompositionEventPlugin: CompositionEventPlugin,
				    MobileSafariClickEventPlugin: MobileSafariClickEventPlugin,
				    SelectEventPlugin: SelectEventPlugin,
				    BeforeInputEventPlugin: BeforeInputEventPlugin
				  });

				  ReactInjection.NativeComponent.injectGenericComponentClass(
				    ReactDOMComponent
				  );

				  ReactInjection.NativeComponent.injectComponentClasses({
				    'button': ReactDOMButton,
				    'form': ReactDOMForm,
				    'img': ReactDOMImg,
				    'input': ReactDOMInput,
				    'option': ReactDOMOption,
				    'select': ReactDOMSelect,
				    'textarea': ReactDOMTextarea,

				    'html': createFullPageComponent('html'),
				    'head': createFullPageComponent('head'),
				    'body': createFullPageComponent('body')
				  });

				  // This needs to happen after createFullPageComponent() otherwise the mixin
				  // gets double injected.
				  ReactInjection.CompositeComponent.injectMixin(ReactBrowserComponentMixin);

				  ReactInjection.DOMProperty.injectDOMPropertyConfig(HTMLDOMPropertyConfig);
				  ReactInjection.DOMProperty.injectDOMPropertyConfig(SVGDOMPropertyConfig);

				  ReactInjection.EmptyComponent.injectEmptyComponent('noscript');

				  ReactInjection.Updates.injectReconcileTransaction(
				    ReactComponentBrowserEnvironment.ReactReconcileTransaction
				  );
				  ReactInjection.Updates.injectBatchingStrategy(
				    ReactDefaultBatchingStrategy
				  );

				  ReactInjection.RootIndex.injectCreateReactRootIndex(
				    ExecutionEnvironment.canUseDOM ?
				      ClientReactRootIndex.createReactRootIndex :
				      ServerReactRootIndex.createReactRootIndex
				  );

				  ReactInjection.Component.injectEnvironment(ReactComponentBrowserEnvironment);

				  if ("production" !== "development") {
				    var url = (ExecutionEnvironment.canUseDOM && window.location.href) || '';
				    if ((/[?&]react_perf\b/).test(url)) {
				      var ReactDefaultPerf = _dereq_("./ReactDefaultPerf");
				      ReactDefaultPerf.start();
				    }
				  }
				}

				module.exports = {
				  inject: inject
				};

				},{"./BeforeInputEventPlugin":3,"./ChangeEventPlugin":7,"./ClientReactRootIndex":8,"./CompositionEventPlugin":9,"./DefaultEventPluginOrder":14,"./EnterLeaveEventPlugin":15,"./ExecutionEnvironment":22,"./HTMLDOMPropertyConfig":23,"./MobileSafariClickEventPlugin":26,"./ReactBrowserComponentMixin":29,"./ReactComponentBrowserEnvironment":33,"./ReactDOMButton":38,"./ReactDOMComponent":39,"./ReactDOMForm":40,"./ReactDOMImg":42,"./ReactDOMInput":43,"./ReactDOMOption":44,"./ReactDOMSelect":45,"./ReactDOMTextarea":47,"./ReactDefaultBatchingStrategy":48,"./ReactDefaultPerf":50,"./ReactEventListener":57,"./ReactInjection":58,"./ReactInstanceHandles":60,"./ReactMount":63,"./SVGDOMPropertyConfig":80,"./SelectEventPlugin":81,"./ServerReactRootIndex":82,"./SimpleEventPlugin":83,"./createFullPageComponent":103}],50:[function(_dereq_,module,exports){
				/**
				 * Copyright 2013-2014, Facebook, Inc.
				 * All rights reserved.
				 *
				 * This source code is licensed under the BSD-style license found in the
				 * LICENSE file in the root directory of this source tree. An additional grant
				 * of patent rights can be found in the PATENTS file in the same directory.
				 *
				 * @providesModule ReactDefaultPerf
				 * @typechecks static-only
				 */

				"use strict";

				var DOMProperty = _dereq_("./DOMProperty");
				var ReactDefaultPerfAnalysis = _dereq_("./ReactDefaultPerfAnalysis");
				var ReactMount = _dereq_("./ReactMount");
				var ReactPerf = _dereq_("./ReactPerf");

				var performanceNow = _dereq_("./performanceNow");

				function roundFloat(val) {
				  return Math.floor(val * 100) / 100;
				}

				function addValue(obj, key, val) {
				  obj[key] = (obj[key] || 0) + val;
				}

				var ReactDefaultPerf = {
				  _allMeasurements: [], // last item in the list is the current one
				  _mountStack: [0],
				  _injected: false,

				  start: function() {
				    if (!ReactDefaultPerf._injected) {
				      ReactPerf.injection.injectMeasure(ReactDefaultPerf.measure);
				    }

				    ReactDefaultPerf._allMeasurements.length = 0;
				    ReactPerf.enableMeasure = true;
				  },

				  stop: function() {
				    ReactPerf.enableMeasure = false;
				  },

				  getLastMeasurements: function() {
				    return ReactDefaultPerf._allMeasurements;
				  },

				  printExclusive: function(measurements) {
				    measurements = measurements || ReactDefaultPerf._allMeasurements;
				    var summary = ReactDefaultPerfAnalysis.getExclusiveSummary(measurements);
				    console.table(summary.map(function(item) {
				      return {
				        'Component class name': item.componentName,
				        'Total inclusive time (ms)': roundFloat(item.inclusive),
				        'Exclusive mount time (ms)': roundFloat(item.exclusive),
				        'Exclusive render time (ms)': roundFloat(item.render),
				        'Mount time per instance (ms)': roundFloat(item.exclusive / item.count),
				        'Render time per instance (ms)': roundFloat(item.render / item.count),
				        'Instances': item.count
				      };
				    }));
				    // TODO: ReactDefaultPerfAnalysis.getTotalTime() does not return the correct
				    // number.
				  },

				  printInclusive: function(measurements) {
				    measurements = measurements || ReactDefaultPerf._allMeasurements;
				    var summary = ReactDefaultPerfAnalysis.getInclusiveSummary(measurements);
				    console.table(summary.map(function(item) {
				      return {
				        'Owner > component': item.componentName,
				        'Inclusive time (ms)': roundFloat(item.time),
				        'Instances': item.count
				      };
				    }));
				    console.log(
				      'Total time:',
				      ReactDefaultPerfAnalysis.getTotalTime(measurements).toFixed(2) + ' ms'
				    );
				  },

				  getMeasurementsSummaryMap: function(measurements) {
				    var summary = ReactDefaultPerfAnalysis.getInclusiveSummary(
				      measurements,
				      true
				    );
				    return summary.map(function(item) {
				      return {
				        'Owner > component': item.componentName,
				        'Wasted time (ms)': item.time,
				        'Instances': item.count
				      };
				    });
				  },

				  printWasted: function(measurements) {
				    measurements = measurements || ReactDefaultPerf._allMeasurements;
				    console.table(ReactDefaultPerf.getMeasurementsSummaryMap(measurements));
				    console.log(
				      'Total time:',
				      ReactDefaultPerfAnalysis.getTotalTime(measurements).toFixed(2) + ' ms'
				    );
				  },

				  printDOM: function(measurements) {
				    measurements = measurements || ReactDefaultPerf._allMeasurements;
				    var summary = ReactDefaultPerfAnalysis.getDOMSummary(measurements);
				    console.table(summary.map(function(item) {
				      var result = {};
				      result[DOMProperty.ID_ATTRIBUTE_NAME] = item.id;
				      result['type'] = item.type;
				      result['args'] = JSON.stringify(item.args);
				      return result;
				    }));
				    console.log(
				      'Total time:',
				      ReactDefaultPerfAnalysis.getTotalTime(measurements).toFixed(2) + ' ms'
				    );
				  },

				  _recordWrite: function(id, fnName, totalTime, args) {
				    // TODO: totalTime isn't that useful since it doesn't count paints/reflows
				    var writes =
				      ReactDefaultPerf
				        ._allMeasurements[ReactDefaultPerf._allMeasurements.length - 1]
				        .writes;
				    writes[id] = writes[id] || [];
				    writes[id].push({
				      type: fnName,
				      time: totalTime,
				      args: args
				    });
				  },

				  measure: function(moduleName, fnName, func) {
				    return function() {for (var args=[],$__0=0,$__1=arguments.length;$__0<$__1;$__0++) args.push(arguments[$__0]);
				      var totalTime;
				      var rv;
				      var start;

				      if (fnName === '_renderNewRootComponent' ||
				          fnName === 'flushBatchedUpdates') {
				        // A "measurement" is a set of metrics recorded for each flush. We want
				        // to group the metrics for a given flush together so we can look at the
				        // components that rendered and the DOM operations that actually
				        // happened to determine the amount of "wasted work" performed.
				        ReactDefaultPerf._allMeasurements.push({
				          exclusive: {},
				          inclusive: {},
				          render: {},
				          counts: {},
				          writes: {},
				          displayNames: {},
				          totalTime: 0
				        });
				        start = performanceNow();
				        rv = func.apply(this, args);
				        ReactDefaultPerf._allMeasurements[
				          ReactDefaultPerf._allMeasurements.length - 1
				        ].totalTime = performanceNow() - start;
				        return rv;
				      } else if (moduleName === 'ReactDOMIDOperations' ||
				        moduleName === 'ReactComponentBrowserEnvironment') {
				        start = performanceNow();
				        rv = func.apply(this, args);
				        totalTime = performanceNow() - start;

				        if (fnName === 'mountImageIntoNode') {
				          var mountID = ReactMount.getID(args[1]);
				          ReactDefaultPerf._recordWrite(mountID, fnName, totalTime, args[0]);
				        } else if (fnName === 'dangerouslyProcessChildrenUpdates') {
				          // special format
				          args[0].forEach(function(update) {
				            var writeArgs = {};
				            if (update.fromIndex !== null) {
				              writeArgs.fromIndex = update.fromIndex;
				            }
				            if (update.toIndex !== null) {
				              writeArgs.toIndex = update.toIndex;
				            }
				            if (update.textContent !== null) {
				              writeArgs.textContent = update.textContent;
				            }
				            if (update.markupIndex !== null) {
				              writeArgs.markup = args[1][update.markupIndex];
				            }
				            ReactDefaultPerf._recordWrite(
				              update.parentID,
				              update.type,
				              totalTime,
				              writeArgs
				            );
				          });
				        } else {
				          // basic format
				          ReactDefaultPerf._recordWrite(
				            args[0],
				            fnName,
				            totalTime,
				            Array.prototype.slice.call(args, 1)
				          );
				        }
				        return rv;
				      } else if (moduleName === 'ReactCompositeComponent' && (
				        fnName === 'mountComponent' ||
				        fnName === 'updateComponent' || // TODO: receiveComponent()?
				        fnName === '_renderValidatedComponent')) {

				        var rootNodeID = fnName === 'mountComponent' ?
				          args[0] :
				          this._rootNodeID;
				        var isRender = fnName === '_renderValidatedComponent';
				        var isMount = fnName === 'mountComponent';

				        var mountStack = ReactDefaultPerf._mountStack;
				        var entry = ReactDefaultPerf._allMeasurements[
				          ReactDefaultPerf._allMeasurements.length - 1
				        ];

				        if (isRender) {
				          addValue(entry.counts, rootNodeID, 1);
				        } else if (isMount) {
				          mountStack.push(0);
				        }

				        start = performanceNow();
				        rv = func.apply(this, args);
				        totalTime = performanceNow() - start;

				        if (isRender) {
				          addValue(entry.render, rootNodeID, totalTime);
				        } else if (isMount) {
				          var subMountTime = mountStack.pop();
				          mountStack[mountStack.length - 1] += totalTime;
				          addValue(entry.exclusive, rootNodeID, totalTime - subMountTime);
				          addValue(entry.inclusive, rootNodeID, totalTime);
				        } else {
				          addValue(entry.inclusive, rootNodeID, totalTime);
				        }

				        entry.displayNames[rootNodeID] = {
				          current: this.constructor.displayName,
				          owner: this._owner ? this._owner.constructor.displayName : '<root>'
				        };

				        return rv;
				      } else {
				        return func.apply(this, args);
				      }
				    };
				  }
				};

				module.exports = ReactDefaultPerf;

				},{"./DOMProperty":11,"./ReactDefaultPerfAnalysis":51,"./ReactMount":63,"./ReactPerf":68,"./performanceNow":139}],51:[function(_dereq_,module,exports){
				/**
				 * Copyright 2013-2014, Facebook, Inc.
				 * All rights reserved.
				 *
				 * This source code is licensed under the BSD-style license found in the
				 * LICENSE file in the root directory of this source tree. An additional grant
				 * of patent rights can be found in the PATENTS file in the same directory.
				 *
				 * @providesModule ReactDefaultPerfAnalysis
				 */

				var assign = _dereq_("./Object.assign");

				// Don't try to save users less than 1.2ms (a number I made up)
				var DONT_CARE_THRESHOLD = 1.2;
				var DOM_OPERATION_TYPES = {
				  'mountImageIntoNode': 'set innerHTML',
				  INSERT_MARKUP: 'set innerHTML',
				  MOVE_EXISTING: 'move',
				  REMOVE_NODE: 'remove',
				  TEXT_CONTENT: 'set textContent',
				  'updatePropertyByID': 'update attribute',
				  'deletePropertyByID': 'delete attribute',
				  'updateStylesByID': 'update styles',
				  'updateInnerHTMLByID': 'set innerHTML',
				  'dangerouslyReplaceNodeWithMarkupByID': 'replace'
				};

				function getTotalTime(measurements) {
				  // TODO: return number of DOM ops? could be misleading.
				  // TODO: measure dropped frames after reconcile?
				  // TODO: log total time of each reconcile and the top-level component
				  // class that triggered it.
				  var totalTime = 0;
				  for (var i = 0; i < measurements.length; i++) {
				    var measurement = measurements[i];
				    totalTime += measurement.totalTime;
				  }
				  return totalTime;
				}

				function getDOMSummary(measurements) {
				  var items = [];
				  for (var i = 0; i < measurements.length; i++) {
				    var measurement = measurements[i];
				    var id;

				    for (id in measurement.writes) {
				      measurement.writes[id].forEach(function(write) {
				        items.push({
				          id: id,
				          type: DOM_OPERATION_TYPES[write.type] || write.type,
				          args: write.args
				        });
				      });
				    }
				  }
				  return items;
				}

				function getExclusiveSummary(measurements) {
				  var candidates = {};
				  var displayName;

				  for (var i = 0; i < measurements.length; i++) {
				    var measurement = measurements[i];
				    var allIDs = assign(
				      {},
				      measurement.exclusive,
				      measurement.inclusive
				    );

				    for (var id in allIDs) {
				      displayName = measurement.displayNames[id].current;

				      candidates[displayName] = candidates[displayName] || {
				        componentName: displayName,
				        inclusive: 0,
				        exclusive: 0,
				        render: 0,
				        count: 0
				      };
				      if (measurement.render[id]) {
				        candidates[displayName].render += measurement.render[id];
				      }
				      if (measurement.exclusive[id]) {
				        candidates[displayName].exclusive += measurement.exclusive[id];
				      }
				      if (measurement.inclusive[id]) {
				        candidates[displayName].inclusive += measurement.inclusive[id];
				      }
				      if (measurement.counts[id]) {
				        candidates[displayName].count += measurement.counts[id];
				      }
				    }
				  }

				  // Now make a sorted array with the results.
				  var arr = [];
				  for (displayName in candidates) {
				    if (candidates[displayName].exclusive >= DONT_CARE_THRESHOLD) {
				      arr.push(candidates[displayName]);
				    }
				  }

				  arr.sort(function(a, b) {
				    return b.exclusive - a.exclusive;
				  });

				  return arr;
				}

				function getInclusiveSummary(measurements, onlyClean) {
				  var candidates = {};
				  var inclusiveKey;

				  for (var i = 0; i < measurements.length; i++) {
				    var measurement = measurements[i];
				    var allIDs = assign(
				      {},
				      measurement.exclusive,
				      measurement.inclusive
				    );
				    var cleanComponents;

				    if (onlyClean) {
				      cleanComponents = getUnchangedComponents(measurement);
				    }

				    for (var id in allIDs) {
				      if (onlyClean && !cleanComponents[id]) {
				        continue;
				      }

				      var displayName = measurement.displayNames[id];

				      // Inclusive time is not useful for many components without knowing where
				      // they are instantiated. So we aggregate inclusive time with both the
				      // owner and current displayName as the key.
				      inclusiveKey = displayName.owner + ' > ' + displayName.current;

				      candidates[inclusiveKey] = candidates[inclusiveKey] || {
				        componentName: inclusiveKey,
				        time: 0,
				        count: 0
				      };

				      if (measurement.inclusive[id]) {
				        candidates[inclusiveKey].time += measurement.inclusive[id];
				      }
				      if (measurement.counts[id]) {
				        candidates[inclusiveKey].count += measurement.counts[id];
				      }
				    }
				  }

				  // Now make a sorted array with the results.
				  var arr = [];
				  for (inclusiveKey in candidates) {
				    if (candidates[inclusiveKey].time >= DONT_CARE_THRESHOLD) {
				      arr.push(candidates[inclusiveKey]);
				    }
				  }

				  arr.sort(function(a, b) {
				    return b.time - a.time;
				  });

				  return arr;
				}

				function getUnchangedComponents(measurement) {
				  // For a given reconcile, look at which components did not actually
				  // render anything to the DOM and return a mapping of their ID to
				  // the amount of time it took to render the entire subtree.
				  var cleanComponents = {};
				  var dirtyLeafIDs = Object.keys(measurement.writes);
				  var allIDs = assign({}, measurement.exclusive, measurement.inclusive);

				  for (var id in allIDs) {
				    var isDirty = false;
				    // For each component that rendered, see if a component that triggered
				    // a DOM op is in its subtree.
				    for (var i = 0; i < dirtyLeafIDs.length; i++) {
				      if (dirtyLeafIDs[i].indexOf(id) === 0) {
				        isDirty = true;
				        break;
				      }
				    }
				    if (!isDirty && measurement.counts[id] > 0) {
				      cleanComponents[id] = true;
				    }
				  }
				  return cleanComponents;
				}

				var ReactDefaultPerfAnalysis = {
				  getExclusiveSummary: getExclusiveSummary,
				  getInclusiveSummary: getInclusiveSummary,
				  getDOMSummary: getDOMSummary,
				  getTotalTime: getTotalTime
				};

				module.exports = ReactDefaultPerfAnalysis;

				},{"./Object.assign":27}],52:[function(_dereq_,module,exports){
				/**
				 * Copyright 2014, Facebook, Inc.
				 * All rights reserved.
				 *
				 * This source code is licensed under the BSD-style license found in the
				 * LICENSE file in the root directory of this source tree. An additional grant
				 * of patent rights can be found in the PATENTS file in the same directory.
				 *
				 * @providesModule ReactElement
				 */

				"use strict";

				var ReactContext = _dereq_("./ReactContext");
				var ReactCurrentOwner = _dereq_("./ReactCurrentOwner");

				var warning = _dereq_("./warning");

				var RESERVED_PROPS = {
				  key: true,
				  ref: true
				};

				/**
				 * Warn for mutations.
				 *
				 * @internal
				 * @param {object} object
				 * @param {string} key
				 */
				function defineWarningProperty(object, key) {
				  Object.defineProperty(object, key, {

				    configurable: false,
				    enumerable: true,

				    get: function() {
				      if (!this._store) {
				        return null;
				      }
				      return this._store[key];
				    },

				    set: function(value) {
				      ("production" !== "development" ? warning(
				        false,
				        'Don\'t set the ' + key + ' property of the component. ' +
				        'Mutate the existing props object instead.'
				      ) : null);
				      this._store[key] = value;
				    }

				  });
				}

				/**
				 * This is updated to true if the membrane is successfully created.
				 */
				var useMutationMembrane = false;

				/**
				 * Warn for mutations.
				 *
				 * @internal
				 * @param {object} element
				 */
				function defineMutationMembrane(prototype) {
				  try {
				    var pseudoFrozenProperties = {
				      props: true
				    };
				    for (var key in pseudoFrozenProperties) {
				      defineWarningProperty(prototype, key);
				    }
				    useMutationMembrane = true;
				  } catch (x) {
				    // IE will fail on defineProperty
				  }
				}

				/**
				 * Base constructor for all React elements. This is only used to make this
				 * work with a dynamic instanceof check. Nothing should live on this prototype.
				 *
				 * @param {*} type
				 * @param {string|object} ref
				 * @param {*} key
				 * @param {*} props
				 * @internal
				 */
				var ReactElement = function(type, key, ref, owner, context, props) {
				  // Built-in properties that belong on the element
				  this.type = type;
				  this.key = key;
				  this.ref = ref;

				  // Record the component responsible for creating this element.
				  this._owner = owner;

				  // TODO: Deprecate withContext, and then the context becomes accessible
				  // through the owner.
				  this._context = context;

				  if ("production" !== "development") {
				    // The validation flag and props are currently mutative. We put them on
				    // an external backing store so that we can freeze the whole object.
				    // This can be replaced with a WeakMap once they are implemented in
				    // commonly used development environments.
				    this._store = { validated: false, props: props };

				    // We're not allowed to set props directly on the object so we early
				    // return and rely on the prototype membrane to forward to the backing
				    // store.
				    if (useMutationMembrane) {
				      Object.freeze(this);
				      return;
				    }
				  }

				  this.props = props;
				};

				// We intentionally don't expose the function on the constructor property.
				// ReactElement should be indistinguishable from a plain object.
				ReactElement.prototype = {
				  _isReactElement: true
				};

				if ("production" !== "development") {
				  defineMutationMembrane(ReactElement.prototype);
				}

				ReactElement.createElement = function(type, config, children) {
				  var propName;

				  // Reserved names are extracted
				  var props = {};

				  var key = null;
				  var ref = null;

				  if (config != null) {
				    ref = config.ref === undefined ? null : config.ref;
				    if ("production" !== "development") {
				      ("production" !== "development" ? warning(
				        config.key !== null,
				        'createElement(...): Encountered component with a `key` of null. In ' +
				        'a future version, this will be treated as equivalent to the string ' +
				        '\'null\'; instead, provide an explicit key or use undefined.'
				      ) : null);
				    }
				    // TODO: Change this back to `config.key === undefined`
				    key = config.key == null ? null : '' + config.key;
				    // Remaining properties are added to a new props object
				    for (propName in config) {
				      if (config.hasOwnProperty(propName) &&
				          !RESERVED_PROPS.hasOwnProperty(propName)) {
				        props[propName] = config[propName];
				      }
				    }
				  }

				  // Children can be more than one argument, and those are transferred onto
				  // the newly allocated props object.
				  var childrenLength = arguments.length - 2;
				  if (childrenLength === 1) {
				    props.children = children;
				  } else if (childrenLength > 1) {
				    var childArray = Array(childrenLength);
				    for (var i = 0; i < childrenLength; i++) {
				      childArray[i] = arguments[i + 2];
				    }
				    props.children = childArray;
				  }

				  // Resolve default props
				  if (type && type.defaultProps) {
				    var defaultProps = type.defaultProps;
				    for (propName in defaultProps) {
				      if (typeof props[propName] === 'undefined') {
				        props[propName] = defaultProps[propName];
				      }
				    }
				  }

				  return new ReactElement(
				    type,
				    key,
				    ref,
				    ReactCurrentOwner.current,
				    ReactContext.current,
				    props
				  );
				};

				ReactElement.createFactory = function(type) {
				  var factory = ReactElement.createElement.bind(null, type);
				  // Expose the type on the factory and the prototype so that it can be
				  // easily accessed on elements. E.g. <Foo />.type === Foo.type.
				  // This should not be named `constructor` since this may not be the function
				  // that created the element, and it may not even be a constructor.
				  factory.type = type;
				  return factory;
				};

				ReactElement.cloneAndReplaceProps = function(oldElement, newProps) {
				  var newElement = new ReactElement(
				    oldElement.type,
				    oldElement.key,
				    oldElement.ref,
				    oldElement._owner,
				    oldElement._context,
				    newProps
				  );

				  if ("production" !== "development") {
				    // If the key on the original is valid, then the clone is valid
				    newElement._store.validated = oldElement._store.validated;
				  }
				  return newElement;
				};

				/**
				 * @param {?object} object
				 * @return {boolean} True if `object` is a valid component.
				 * @final
				 */
				ReactElement.isValidElement = function(object) {
				  // ReactTestUtils is often used outside of beforeEach where as React is
				  // within it. This leads to two different instances of React on the same
				  // page. To identify a element from a different React instance we use
				  // a flag instead of an instanceof check.
				  var isElement = !!(object && object._isReactElement);
				  // if (isElement && !(object instanceof ReactElement)) {
				  // This is an indicator that you're using multiple versions of React at the
				  // same time. This will screw with ownership and stuff. Fix it, please.
				  // TODO: We could possibly warn here.
				  // }
				  return isElement;
				};

				module.exports = ReactElement;

				},{"./ReactContext":35,"./ReactCurrentOwner":36,"./warning":145}],53:[function(_dereq_,module,exports){
				/**
				 * Copyright 2014, Facebook, Inc.
				 * All rights reserved.
				 *
				 * This source code is licensed under the BSD-style license found in the
				 * LICENSE file in the root directory of this source tree. An additional grant
				 * of patent rights can be found in the PATENTS file in the same directory.
				 *
				 * @providesModule ReactElementValidator
				 */

				/**
				 * ReactElementValidator provides a wrapper around a element factory
				 * which validates the props passed to the element. This is intended to be
				 * used only in DEV and could be replaced by a static type checker for languages
				 * that support it.
				 */

				"use strict";

				var ReactElement = _dereq_("./ReactElement");
				var ReactPropTypeLocations = _dereq_("./ReactPropTypeLocations");
				var ReactCurrentOwner = _dereq_("./ReactCurrentOwner");

				var monitorCodeUse = _dereq_("./monitorCodeUse");
				var warning = _dereq_("./warning");

				/**
				 * Warn if there's no key explicitly set on dynamic arrays of children or
				 * object keys are not valid. This allows us to keep track of children between
				 * updates.
				 */
				var ownerHasKeyUseWarning = {
				  'react_key_warning': {},
				  'react_numeric_key_warning': {}
				};
				var ownerHasMonitoredObjectMap = {};

				var loggedTypeFailures = {};

				var NUMERIC_PROPERTY_REGEX = /^\d+$/;

				/**
				 * Gets the current owner's displayName for use in warnings.
				 *
				 * @internal
				 * @return {?string} Display name or undefined
				 */
				function getCurrentOwnerDisplayName() {
				  var current = ReactCurrentOwner.current;
				  return current && current.constructor.displayName || undefined;
				}

				/**
				 * Warn if the component doesn't have an explicit key assigned to it.
				 * This component is in an array. The array could grow and shrink or be
				 * reordered. All children that haven't already been validated are required to
				 * have a "key" property assigned to it.
				 *
				 * @internal
				 * @param {ReactComponent} component Component that requires a key.
				 * @param {*} parentType component's parent's type.
				 */
				function validateExplicitKey(component, parentType) {
				  if (component._store.validated || component.key != null) {
				    return;
				  }
				  component._store.validated = true;

				  warnAndMonitorForKeyUse(
				    'react_key_warning',
				    'Each child in an array should have a unique "key" prop.',
				    component,
				    parentType
				  );
				}

				/**
				 * Warn if the key is being defined as an object property but has an incorrect
				 * value.
				 *
				 * @internal
				 * @param {string} name Property name of the key.
				 * @param {ReactComponent} component Component that requires a key.
				 * @param {*} parentType component's parent's type.
				 */
				function validatePropertyKey(name, component, parentType) {
				  if (!NUMERIC_PROPERTY_REGEX.test(name)) {
				    return;
				  }
				  warnAndMonitorForKeyUse(
				    'react_numeric_key_warning',
				    'Child objects should have non-numeric keys so ordering is preserved.',
				    component,
				    parentType
				  );
				}

				/**
				 * Shared warning and monitoring code for the key warnings.
				 *
				 * @internal
				 * @param {string} warningID The id used when logging.
				 * @param {string} message The base warning that gets output.
				 * @param {ReactComponent} component Component that requires a key.
				 * @param {*} parentType component's parent's type.
				 */
				function warnAndMonitorForKeyUse(warningID, message, component, parentType) {
				  var ownerName = getCurrentOwnerDisplayName();
				  var parentName = parentType.displayName;

				  var useName = ownerName || parentName;
				  var memoizer = ownerHasKeyUseWarning[warningID];
				  if (memoizer.hasOwnProperty(useName)) {
				    return;
				  }
				  memoizer[useName] = true;

				  message += ownerName ?
				    (" Check the render method of " + ownerName + ".") :
				    (" Check the renderComponent call using <" + parentName + ">.");

				  // Usually the current owner is the offender, but if it accepts children as a
				  // property, it may be the creator of the child that's responsible for
				  // assigning it a key.
				  var childOwnerName = null;
				  if (component._owner && component._owner !== ReactCurrentOwner.current) {
				    // Name of the component that originally created this child.
				    childOwnerName = component._owner.constructor.displayName;

				    message += (" It was passed a child from " + childOwnerName + ".");
				  }

				  message += ' See http://fb.me/react-warning-keys for more information.';
				  monitorCodeUse(warningID, {
				    component: useName,
				    componentOwner: childOwnerName
				  });
				  console.warn(message);
				}

				/**
				 * Log that we're using an object map. We're considering deprecating this
				 * feature and replace it with proper Map and ImmutableMap data structures.
				 *
				 * @internal
				 */
				function monitorUseOfObjectMap() {
				  var currentName = getCurrentOwnerDisplayName() || '';
				  if (ownerHasMonitoredObjectMap.hasOwnProperty(currentName)) {
				    return;
				  }
				  ownerHasMonitoredObjectMap[currentName] = true;
				  monitorCodeUse('react_object_map_children');
				}

				/**
				 * Ensure that every component either is passed in a static location, in an
				 * array with an explicit keys property defined, or in an object literal
				 * with valid key property.
				 *
				 * @internal
				 * @param {*} component Statically passed child of any type.
				 * @param {*} parentType component's parent's type.
				 * @return {boolean}
				 */
				function validateChildKeys(component, parentType) {
				  if (Array.isArray(component)) {
				    for (var i = 0; i < component.length; i++) {
				      var child = component[i];
				      if (ReactElement.isValidElement(child)) {
				        validateExplicitKey(child, parentType);
				      }
				    }
				  } else if (ReactElement.isValidElement(component)) {
				    // This component was passed in a valid location.
				    component._store.validated = true;
				  } else if (component && typeof component === 'object') {
				    monitorUseOfObjectMap();
				    for (var name in component) {
				      validatePropertyKey(name, component[name], parentType);
				    }
				  }
				}

				/**
				 * Assert that the props are valid
				 *
				 * @param {string} componentName Name of the component for error messages.
				 * @param {object} propTypes Map of prop name to a ReactPropType
				 * @param {object} props
				 * @param {string} location e.g. "prop", "context", "child context"
				 * @private
				 */
				function checkPropTypes(componentName, propTypes, props, location) {
				  for (var propName in propTypes) {
				    if (propTypes.hasOwnProperty(propName)) {
				      var error;
				      // Prop type validation may throw. In case they do, we don't want to
				      // fail the render phase where it didn't fail before. So we log it.
				      // After these have been cleaned up, we'll let them throw.
				      try {
				        error = propTypes[propName](props, propName, componentName, location);
				      } catch (ex) {
				        error = ex;
				      }
				      if (error instanceof Error && !(error.message in loggedTypeFailures)) {
				        // Only monitor this failure once because there tends to be a lot of the
				        // same error.
				        loggedTypeFailures[error.message] = true;
				        // This will soon use the warning module
				        monitorCodeUse(
				          'react_failed_descriptor_type_check',
				          { message: error.message }
				        );
				      }
				    }
				  }
				}

				var ReactElementValidator = {

				  createElement: function(type, props, children) {
				    // We warn in this case but don't throw. We expect the element creation to
				    // succeed and there will likely be errors in render.
				    ("production" !== "development" ? warning(
				      type != null,
				      'React.createElement: type should not be null or undefined. It should ' +
				        'be a string (for DOM elements) or a ReactClass (for composite ' +
				        'components).'
				    ) : null);

				    var element = ReactElement.createElement.apply(this, arguments);

				    // The result can be nullish if a mock or a custom function is used.
				    // TODO: Drop this when these are no longer allowed as the type argument.
				    if (element == null) {
				      return element;
				    }

				    for (var i = 2; i < arguments.length; i++) {
				      validateChildKeys(arguments[i], type);
				    }

				    if (type) {
				      var name = type.displayName;
				      if (type.propTypes) {
				        checkPropTypes(
				          name,
				          type.propTypes,
				          element.props,
				          ReactPropTypeLocations.prop
				        );
				      }
				      if (type.contextTypes) {
				        checkPropTypes(
				          name,
				          type.contextTypes,
				          element._context,
				          ReactPropTypeLocations.context
				        );
				      }
				    }
				    return element;
				  },

				  createFactory: function(type) {
				    var validatedFactory = ReactElementValidator.createElement.bind(
				      null,
				      type
				    );
				    validatedFactory.type = type;
				    return validatedFactory;
				  }

				};

				module.exports = ReactElementValidator;

				},{"./ReactCurrentOwner":36,"./ReactElement":52,"./ReactPropTypeLocations":71,"./monitorCodeUse":136,"./warning":145}],54:[function(_dereq_,module,exports){
				/**
				 * Copyright 2014, Facebook, Inc.
				 * All rights reserved.
				 *
				 * This source code is licensed under the BSD-style license found in the
				 * LICENSE file in the root directory of this source tree. An additional grant
				 * of patent rights can be found in the PATENTS file in the same directory.
				 *
				 * @providesModule ReactEmptyComponent
				 */

				"use strict";

				var ReactElement = _dereq_("./ReactElement");

				var invariant = _dereq_("./invariant");

				var component;
				// This registry keeps track of the React IDs of the components that rendered to
				// `null` (in reality a placeholder such as `noscript`)
				var nullComponentIdsRegistry = {};

				var ReactEmptyComponentInjection = {
				  injectEmptyComponent: function(emptyComponent) {
				    component = ReactElement.createFactory(emptyComponent);
				  }
				};

				/**
				 * @return {ReactComponent} component The injected empty component.
				 */
				function getEmptyComponent() {
				  ("production" !== "development" ? invariant(
				    component,
				    'Trying to return null from a render, but no null placeholder component ' +
				    'was injected.'
				  ) : invariant(component));
				  return component();
				}

				/**
				 * Mark the component as having rendered to null.
				 * @param {string} id Component's `_rootNodeID`.
				 */
				function registerNullComponentID(id) {
				  nullComponentIdsRegistry[id] = true;
				}

				/**
				 * Unmark the component as having rendered to null: it renders to something now.
				 * @param {string} id Component's `_rootNodeID`.
				 */
				function deregisterNullComponentID(id) {
				  delete nullComponentIdsRegistry[id];
				}

				/**
				 * @param {string} id Component's `_rootNodeID`.
				 * @return {boolean} True if the component is rendered to null.
				 */
				function isNullComponentID(id) {
				  return nullComponentIdsRegistry[id];
				}

				var ReactEmptyComponent = {
				  deregisterNullComponentID: deregisterNullComponentID,
				  getEmptyComponent: getEmptyComponent,
				  injection: ReactEmptyComponentInjection,
				  isNullComponentID: isNullComponentID,
				  registerNullComponentID: registerNullComponentID
				};

				module.exports = ReactEmptyComponent;

				},{"./ReactElement":52,"./invariant":126}],55:[function(_dereq_,module,exports){
				/**
				 * Copyright 2013-2014, Facebook, Inc.
				 * All rights reserved.
				 *
				 * This source code is licensed under the BSD-style license found in the
				 * LICENSE file in the root directory of this source tree. An additional grant
				 * of patent rights can be found in the PATENTS file in the same directory.
				 *
				 * @providesModule ReactErrorUtils
				 * @typechecks
				 */

				"use strict";

				var ReactErrorUtils = {
				  /**
				   * Creates a guarded version of a function. This is supposed to make debugging
				   * of event handlers easier. To aid debugging with the browser's debugger,
				   * this currently simply returns the original function.
				   *
				   * @param {function} func Function to be executed
				   * @param {string} name The name of the guard
				   * @return {function}
				   */
				  guard: function(func, name) {
				    return func;
				  }
				};

				module.exports = ReactErrorUtils;

				},{}],56:[function(_dereq_,module,exports){
				/**
				 * Copyright 2013-2014, Facebook, Inc.
				 * All rights reserved.
				 *
				 * This source code is licensed under the BSD-style license found in the
				 * LICENSE file in the root directory of this source tree. An additional grant
				 * of patent rights can be found in the PATENTS file in the same directory.
				 *
				 * @providesModule ReactEventEmitterMixin
				 */

				"use strict";

				var EventPluginHub = _dereq_("./EventPluginHub");

				function runEventQueueInBatch(events) {
				  EventPluginHub.enqueueEvents(events);
				  EventPluginHub.processEventQueue();
				}

				var ReactEventEmitterMixin = {

				  /**
				   * Streams a fired top-level event to `EventPluginHub` where plugins have the
				   * opportunity to create `ReactEvent`s to be dispatched.
				   *
				   * @param {string} topLevelType Record from `EventConstants`.
				   * @param {object} topLevelTarget The listening component root node.
				   * @param {string} topLevelTargetID ID of `topLevelTarget`.
				   * @param {object} nativeEvent Native environment event.
				   */
				  handleTopLevel: function(
				      topLevelType,
				      topLevelTarget,
				      topLevelTargetID,
				      nativeEvent) {
				    var events = EventPluginHub.extractEvents(
				      topLevelType,
				      topLevelTarget,
				      topLevelTargetID,
				      nativeEvent
				    );

				    runEventQueueInBatch(events);
				  }
				};

				module.exports = ReactEventEmitterMixin;

				},{"./EventPluginHub":18}],57:[function(_dereq_,module,exports){
				/**
				 * Copyright 2013-2014, Facebook, Inc.
				 * All rights reserved.
				 *
				 * This source code is licensed under the BSD-style license found in the
				 * LICENSE file in the root directory of this source tree. An additional grant
				 * of patent rights can be found in the PATENTS file in the same directory.
				 *
				 * @providesModule ReactEventListener
				 * @typechecks static-only
				 */

				"use strict";

				var EventListener = _dereq_("./EventListener");
				var ExecutionEnvironment = _dereq_("./ExecutionEnvironment");
				var PooledClass = _dereq_("./PooledClass");
				var ReactInstanceHandles = _dereq_("./ReactInstanceHandles");
				var ReactMount = _dereq_("./ReactMount");
				var ReactUpdates = _dereq_("./ReactUpdates");

				var assign = _dereq_("./Object.assign");
				var getEventTarget = _dereq_("./getEventTarget");
				var getUnboundedScrollPosition = _dereq_("./getUnboundedScrollPosition");

				/**
				 * Finds the parent React component of `node`.
				 *
				 * @param {*} node
				 * @return {?DOMEventTarget} Parent container, or `null` if the specified node
				 *                           is not nested.
				 */
				function findParent(node) {
				  // TODO: It may be a good idea to cache this to prevent unnecessary DOM
				  // traversal, but caching is difficult to do correctly without using a
				  // mutation observer to listen for all DOM changes.
				  var nodeID = ReactMount.getID(node);
				  var rootID = ReactInstanceHandles.getReactRootIDFromNodeID(nodeID);
				  var container = ReactMount.findReactContainerForID(rootID);
				  var parent = ReactMount.getFirstReactDOM(container);
				  return parent;
				}

				// Used to store ancestor hierarchy in top level callback
				function TopLevelCallbackBookKeeping(topLevelType, nativeEvent) {
				  this.topLevelType = topLevelType;
				  this.nativeEvent = nativeEvent;
				  this.ancestors = [];
				}
				assign(TopLevelCallbackBookKeeping.prototype, {
				  destructor: function() {
				    this.topLevelType = null;
				    this.nativeEvent = null;
				    this.ancestors.length = 0;
				  }
				});
				PooledClass.addPoolingTo(
				  TopLevelCallbackBookKeeping,
				  PooledClass.twoArgumentPooler
				);

				function handleTopLevelImpl(bookKeeping) {
				  var topLevelTarget = ReactMount.getFirstReactDOM(
				    getEventTarget(bookKeeping.nativeEvent)
				  ) || window;

				  // Loop through the hierarchy, in case there's any nested components.
				  // It's important that we build the array of ancestors before calling any
				  // event handlers, because event handlers can modify the DOM, leading to
				  // inconsistencies with ReactMount's node cache. See #1105.
				  var ancestor = topLevelTarget;
				  while (ancestor) {
				    bookKeeping.ancestors.push(ancestor);
				    ancestor = findParent(ancestor);
				  }

				  for (var i = 0, l = bookKeeping.ancestors.length; i < l; i++) {
				    topLevelTarget = bookKeeping.ancestors[i];
				    var topLevelTargetID = ReactMount.getID(topLevelTarget) || '';
				    ReactEventListener._handleTopLevel(
				      bookKeeping.topLevelType,
				      topLevelTarget,
				      topLevelTargetID,
				      bookKeeping.nativeEvent
				    );
				  }
				}

				function scrollValueMonitor(cb) {
				  var scrollPosition = getUnboundedScrollPosition(window);
				  cb(scrollPosition);
				}

				var ReactEventListener = {
				  _enabled: true,
				  _handleTopLevel: null,

				  WINDOW_HANDLE: ExecutionEnvironment.canUseDOM ? window : null,

				  setHandleTopLevel: function(handleTopLevel) {
				    ReactEventListener._handleTopLevel = handleTopLevel;
				  },

				  setEnabled: function(enabled) {
				    ReactEventListener._enabled = !!enabled;
				  },

				  isEnabled: function() {
				    return ReactEventListener._enabled;
				  },


				  /**
				   * Traps top-level events by using event bubbling.
				   *
				   * @param {string} topLevelType Record from `EventConstants`.
				   * @param {string} handlerBaseName Event name (e.g. "click").
				   * @param {object} handle Element on which to attach listener.
				   * @return {object} An object with a remove function which will forcefully
				   *                  remove the listener.
				   * @internal
				   */
				  trapBubbledEvent: function(topLevelType, handlerBaseName, handle) {
				    var element = handle;
				    if (!element) {
				      return;
				    }
				    return EventListener.listen(
				      element,
				      handlerBaseName,
				      ReactEventListener.dispatchEvent.bind(null, topLevelType)
				    );
				  },

				  /**
				   * Traps a top-level event by using event capturing.
				   *
				   * @param {string} topLevelType Record from `EventConstants`.
				   * @param {string} handlerBaseName Event name (e.g. "click").
				   * @param {object} handle Element on which to attach listener.
				   * @return {object} An object with a remove function which will forcefully
				   *                  remove the listener.
				   * @internal
				   */
				  trapCapturedEvent: function(topLevelType, handlerBaseName, handle) {
				    var element = handle;
				    if (!element) {
				      return;
				    }
				    return EventListener.capture(
				      element,
				      handlerBaseName,
				      ReactEventListener.dispatchEvent.bind(null, topLevelType)
				    );
				  },

				  monitorScrollValue: function(refresh) {
				    var callback = scrollValueMonitor.bind(null, refresh);
				    EventListener.listen(window, 'scroll', callback);
				    EventListener.listen(window, 'resize', callback);
				  },

				  dispatchEvent: function(topLevelType, nativeEvent) {
				    if (!ReactEventListener._enabled) {
				      return;
				    }

				    var bookKeeping = TopLevelCallbackBookKeeping.getPooled(
				      topLevelType,
				      nativeEvent
				    );
				    try {
				      // Event queue being processed in the same cycle allows
				      // `preventDefault`.
				      ReactUpdates.batchedUpdates(handleTopLevelImpl, bookKeeping);
				    } finally {
				      TopLevelCallbackBookKeeping.release(bookKeeping);
				    }
				  }
				};

				module.exports = ReactEventListener;

				},{"./EventListener":17,"./ExecutionEnvironment":22,"./Object.assign":27,"./PooledClass":28,"./ReactInstanceHandles":60,"./ReactMount":63,"./ReactUpdates":79,"./getEventTarget":117,"./getUnboundedScrollPosition":122}],58:[function(_dereq_,module,exports){
				/**
				 * Copyright 2013-2014, Facebook, Inc.
				 * All rights reserved.
				 *
				 * This source code is licensed under the BSD-style license found in the
				 * LICENSE file in the root directory of this source tree. An additional grant
				 * of patent rights can be found in the PATENTS file in the same directory.
				 *
				 * @providesModule ReactInjection
				 */

				"use strict";

				var DOMProperty = _dereq_("./DOMProperty");
				var EventPluginHub = _dereq_("./EventPluginHub");
				var ReactComponent = _dereq_("./ReactComponent");
				var ReactCompositeComponent = _dereq_("./ReactCompositeComponent");
				var ReactEmptyComponent = _dereq_("./ReactEmptyComponent");
				var ReactBrowserEventEmitter = _dereq_("./ReactBrowserEventEmitter");
				var ReactNativeComponent = _dereq_("./ReactNativeComponent");
				var ReactPerf = _dereq_("./ReactPerf");
				var ReactRootIndex = _dereq_("./ReactRootIndex");
				var ReactUpdates = _dereq_("./ReactUpdates");

				var ReactInjection = {
				  Component: ReactComponent.injection,
				  CompositeComponent: ReactCompositeComponent.injection,
				  DOMProperty: DOMProperty.injection,
				  EmptyComponent: ReactEmptyComponent.injection,
				  EventPluginHub: EventPluginHub.injection,
				  EventEmitter: ReactBrowserEventEmitter.injection,
				  NativeComponent: ReactNativeComponent.injection,
				  Perf: ReactPerf.injection,
				  RootIndex: ReactRootIndex.injection,
				  Updates: ReactUpdates.injection
				};

				module.exports = ReactInjection;

				},{"./DOMProperty":11,"./EventPluginHub":18,"./ReactBrowserEventEmitter":30,"./ReactComponent":32,"./ReactCompositeComponent":34,"./ReactEmptyComponent":54,"./ReactNativeComponent":66,"./ReactPerf":68,"./ReactRootIndex":75,"./ReactUpdates":79}],59:[function(_dereq_,module,exports){
				/**
				 * Copyright 2013-2014, Facebook, Inc.
				 * All rights reserved.
				 *
				 * This source code is licensed under the BSD-style license found in the
				 * LICENSE file in the root directory of this source tree. An additional grant
				 * of patent rights can be found in the PATENTS file in the same directory.
				 *
				 * @providesModule ReactInputSelection
				 */

				"use strict";

				var ReactDOMSelection = _dereq_("./ReactDOMSelection");

				var containsNode = _dereq_("./containsNode");
				var focusNode = _dereq_("./focusNode");
				var getActiveElement = _dereq_("./getActiveElement");

				function isInDocument(node) {
				  return containsNode(document.documentElement, node);
				}

				/**
				 * @ReactInputSelection: React input selection module. Based on Selection.js,
				 * but modified to be suitable for react and has a couple of bug fixes (doesn't
				 * assume buttons have range selections allowed).
				 * Input selection module for React.
				 */
				var ReactInputSelection = {

				  hasSelectionCapabilities: function(elem) {
				    return elem && (
				      (elem.nodeName === 'INPUT' && elem.type === 'text') ||
				      elem.nodeName === 'TEXTAREA' ||
				      elem.contentEditable === 'true'
				    );
				  },

				  getSelectionInformation: function() {
				    var focusedElem = getActiveElement();
				    return {
				      focusedElem: focusedElem,
				      selectionRange:
				          ReactInputSelection.hasSelectionCapabilities(focusedElem) ?
				          ReactInputSelection.getSelection(focusedElem) :
				          null
				    };
				  },

				  /**
				   * @restoreSelection: If any selection information was potentially lost,
				   * restore it. This is useful when performing operations that could remove dom
				   * nodes and place them back in, resulting in focus being lost.
				   */
				  restoreSelection: function(priorSelectionInformation) {
				    var curFocusedElem = getActiveElement();
				    var priorFocusedElem = priorSelectionInformation.focusedElem;
				    var priorSelectionRange = priorSelectionInformation.selectionRange;
				    if (curFocusedElem !== priorFocusedElem &&
				        isInDocument(priorFocusedElem)) {
				      if (ReactInputSelection.hasSelectionCapabilities(priorFocusedElem)) {
				        ReactInputSelection.setSelection(
				          priorFocusedElem,
				          priorSelectionRange
				        );
				      }
				      focusNode(priorFocusedElem);
				    }
				  },

				  /**
				   * @getSelection: Gets the selection bounds of a focused textarea, input or
				   * contentEditable node.
				   * -@input: Look up selection bounds of this input
				   * -@return {start: selectionStart, end: selectionEnd}
				   */
				  getSelection: function(input) {
				    var selection;

				    if ('selectionStart' in input) {
				      // Modern browser with input or textarea.
				      selection = {
				        start: input.selectionStart,
				        end: input.selectionEnd
				      };
				    } else if (document.selection && input.nodeName === 'INPUT') {
				      // IE8 input.
				      var range = document.selection.createRange();
				      // There can only be one selection per document in IE, so it must
				      // be in our element.
				      if (range.parentElement() === input) {
				        selection = {
				          start: -range.moveStart('character', -input.value.length),
				          end: -range.moveEnd('character', -input.value.length)
				        };
				      }
				    } else {
				      // Content editable or old IE textarea.
				      selection = ReactDOMSelection.getOffsets(input);
				    }

				    return selection || {start: 0, end: 0};
				  },

				  /**
				   * @setSelection: Sets the selection bounds of a textarea or input and focuses
				   * the input.
				   * -@input     Set selection bounds of this input or textarea
				   * -@offsets   Object of same form that is returned from get*
				   */
				  setSelection: function(input, offsets) {
				    var start = offsets.start;
				    var end = offsets.end;
				    if (typeof end === 'undefined') {
				      end = start;
				    }

				    if ('selectionStart' in input) {
				      input.selectionStart = start;
				      input.selectionEnd = Math.min(end, input.value.length);
				    } else if (document.selection && input.nodeName === 'INPUT') {
				      var range = input.createTextRange();
				      range.collapse(true);
				      range.moveStart('character', start);
				      range.moveEnd('character', end - start);
				      range.select();
				    } else {
				      ReactDOMSelection.setOffsets(input, offsets);
				    }
				  }
				};

				module.exports = ReactInputSelection;

				},{"./ReactDOMSelection":46,"./containsNode":101,"./focusNode":111,"./getActiveElement":113}],60:[function(_dereq_,module,exports){
				/**
				 * Copyright 2013-2014, Facebook, Inc.
				 * All rights reserved.
				 *
				 * This source code is licensed under the BSD-style license found in the
				 * LICENSE file in the root directory of this source tree. An additional grant
				 * of patent rights can be found in the PATENTS file in the same directory.
				 *
				 * @providesModule ReactInstanceHandles
				 * @typechecks static-only
				 */

				"use strict";

				var ReactRootIndex = _dereq_("./ReactRootIndex");

				var invariant = _dereq_("./invariant");

				var SEPARATOR = '.';
				var SEPARATOR_LENGTH = SEPARATOR.length;

				/**
				 * Maximum depth of traversals before we consider the possibility of a bad ID.
				 */
				var MAX_TREE_DEPTH = 100;

				/**
				 * Creates a DOM ID prefix to use when mounting React components.
				 *
				 * @param {number} index A unique integer
				 * @return {string} React root ID.
				 * @internal
				 */
				function getReactRootIDString(index) {
				  return SEPARATOR + index.toString(36);
				}

				/**
				 * Checks if a character in the supplied ID is a separator or the end.
				 *
				 * @param {string} id A React DOM ID.
				 * @param {number} index Index of the character to check.
				 * @return {boolean} True if the character is a separator or end of the ID.
				 * @private
				 */
				function isBoundary(id, index) {
				  return id.charAt(index) === SEPARATOR || index === id.length;
				}

				/**
				 * Checks if the supplied string is a valid React DOM ID.
				 *
				 * @param {string} id A React DOM ID, maybe.
				 * @return {boolean} True if the string is a valid React DOM ID.
				 * @private
				 */
				function isValidID(id) {
				  return id === '' || (
				    id.charAt(0) === SEPARATOR && id.charAt(id.length - 1) !== SEPARATOR
				  );
				}

				/**
				 * Checks if the first ID is an ancestor of or equal to the second ID.
				 *
				 * @param {string} ancestorID
				 * @param {string} descendantID
				 * @return {boolean} True if `ancestorID` is an ancestor of `descendantID`.
				 * @internal
				 */
				function isAncestorIDOf(ancestorID, descendantID) {
				  return (
				    descendantID.indexOf(ancestorID) === 0 &&
				    isBoundary(descendantID, ancestorID.length)
				  );
				}

				/**
				 * Gets the parent ID of the supplied React DOM ID, `id`.
				 *
				 * @param {string} id ID of a component.
				 * @return {string} ID of the parent, or an empty string.
				 * @private
				 */
				function getParentID(id) {
				  return id ? id.substr(0, id.lastIndexOf(SEPARATOR)) : '';
				}

				/**
				 * Gets the next DOM ID on the tree path from the supplied `ancestorID` to the
				 * supplied `destinationID`. If they are equal, the ID is returned.
				 *
				 * @param {string} ancestorID ID of an ancestor node of `destinationID`.
				 * @param {string} destinationID ID of the destination node.
				 * @return {string} Next ID on the path from `ancestorID` to `destinationID`.
				 * @private
				 */
				function getNextDescendantID(ancestorID, destinationID) {
				  ("production" !== "development" ? invariant(
				    isValidID(ancestorID) && isValidID(destinationID),
				    'getNextDescendantID(%s, %s): Received an invalid React DOM ID.',
				    ancestorID,
				    destinationID
				  ) : invariant(isValidID(ancestorID) && isValidID(destinationID)));
				  ("production" !== "development" ? invariant(
				    isAncestorIDOf(ancestorID, destinationID),
				    'getNextDescendantID(...): React has made an invalid assumption about ' +
				    'the DOM hierarchy. Expected `%s` to be an ancestor of `%s`.',
				    ancestorID,
				    destinationID
				  ) : invariant(isAncestorIDOf(ancestorID, destinationID)));
				  if (ancestorID === destinationID) {
				    return ancestorID;
				  }
				  // Skip over the ancestor and the immediate separator. Traverse until we hit
				  // another separator or we reach the end of `destinationID`.
				  var start = ancestorID.length + SEPARATOR_LENGTH;
				  for (var i = start; i < destinationID.length; i++) {
				    if (isBoundary(destinationID, i)) {
				      break;
				    }
				  }
				  return destinationID.substr(0, i);
				}

				/**
				 * Gets the nearest common ancestor ID of two IDs.
				 *
				 * Using this ID scheme, the nearest common ancestor ID is the longest common
				 * prefix of the two IDs that immediately preceded a "marker" in both strings.
				 *
				 * @param {string} oneID
				 * @param {string} twoID
				 * @return {string} Nearest common ancestor ID, or the empty string if none.
				 * @private
				 */
				function getFirstCommonAncestorID(oneID, twoID) {
				  var minLength = Math.min(oneID.length, twoID.length);
				  if (minLength === 0) {
				    return '';
				  }
				  var lastCommonMarkerIndex = 0;
				  // Use `<=` to traverse until the "EOL" of the shorter string.
				  for (var i = 0; i <= minLength; i++) {
				    if (isBoundary(oneID, i) && isBoundary(twoID, i)) {
				      lastCommonMarkerIndex = i;
				    } else if (oneID.charAt(i) !== twoID.charAt(i)) {
				      break;
				    }
				  }
				  var longestCommonID = oneID.substr(0, lastCommonMarkerIndex);
				  ("production" !== "development" ? invariant(
				    isValidID(longestCommonID),
				    'getFirstCommonAncestorID(%s, %s): Expected a valid React DOM ID: %s',
				    oneID,
				    twoID,
				    longestCommonID
				  ) : invariant(isValidID(longestCommonID)));
				  return longestCommonID;
				}

				/**
				 * Traverses the parent path between two IDs (either up or down). The IDs must
				 * not be the same, and there must exist a parent path between them. If the
				 * callback returns `false`, traversal is stopped.
				 *
				 * @param {?string} start ID at which to start traversal.
				 * @param {?string} stop ID at which to end traversal.
				 * @param {function} cb Callback to invoke each ID with.
				 * @param {?boolean} skipFirst Whether or not to skip the first node.
				 * @param {?boolean} skipLast Whether or not to skip the last node.
				 * @private
				 */
				function traverseParentPath(start, stop, cb, arg, skipFirst, skipLast) {
				  start = start || '';
				  stop = stop || '';
				  ("production" !== "development" ? invariant(
				    start !== stop,
				    'traverseParentPath(...): Cannot traverse from and to the same ID, `%s`.',
				    start
				  ) : invariant(start !== stop));
				  var traverseUp = isAncestorIDOf(stop, start);
				  ("production" !== "development" ? invariant(
				    traverseUp || isAncestorIDOf(start, stop),
				    'traverseParentPath(%s, %s, ...): Cannot traverse from two IDs that do ' +
				    'not have a parent path.',
				    start,
				    stop
				  ) : invariant(traverseUp || isAncestorIDOf(start, stop)));
				  // Traverse from `start` to `stop` one depth at a time.
				  var depth = 0;
				  var traverse = traverseUp ? getParentID : getNextDescendantID;
				  for (var id = start; /* until break */; id = traverse(id, stop)) {
				    var ret;
				    if ((!skipFirst || id !== start) && (!skipLast || id !== stop)) {
				      ret = cb(id, traverseUp, arg);
				    }
				    if (ret === false || id === stop) {
				      // Only break //after// visiting `stop`.
				      break;
				    }
				    ("production" !== "development" ? invariant(
				      depth++ < MAX_TREE_DEPTH,
				      'traverseParentPath(%s, %s, ...): Detected an infinite loop while ' +
				      'traversing the React DOM ID tree. This may be due to malformed IDs: %s',
				      start, stop
				    ) : invariant(depth++ < MAX_TREE_DEPTH));
				  }
				}

				/**
				 * Manages the IDs assigned to DOM representations of React components. This
				 * uses a specific scheme in order to traverse the DOM efficiently (e.g. in
				 * order to simulate events).
				 *
				 * @internal
				 */
				var ReactInstanceHandles = {

				  /**
				   * Constructs a React root ID
				   * @return {string} A React root ID.
				   */
				  createReactRootID: function() {
				    return getReactRootIDString(ReactRootIndex.createReactRootIndex());
				  },

				  /**
				   * Constructs a React ID by joining a root ID with a name.
				   *
				   * @param {string} rootID Root ID of a parent component.
				   * @param {string} name A component's name (as flattened children).
				   * @return {string} A React ID.
				   * @internal
				   */
				  createReactID: function(rootID, name) {
				    return rootID + name;
				  },

				  /**
				   * Gets the DOM ID of the React component that is the root of the tree that
				   * contains the React component with the supplied DOM ID.
				   *
				   * @param {string} id DOM ID of a React component.
				   * @return {?string} DOM ID of the React component that is the root.
				   * @internal
				   */
				  getReactRootIDFromNodeID: function(id) {
				    if (id && id.charAt(0) === SEPARATOR && id.length > 1) {
				      var index = id.indexOf(SEPARATOR, 1);
				      return index > -1 ? id.substr(0, index) : id;
				    }
				    return null;
				  },

				  /**
				   * Traverses the ID hierarchy and invokes the supplied `cb` on any IDs that
				   * should would receive a `mouseEnter` or `mouseLeave` event.
				   *
				   * NOTE: Does not invoke the callback on the nearest common ancestor because
				   * nothing "entered" or "left" that element.
				   *
				   * @param {string} leaveID ID being left.
				   * @param {string} enterID ID being entered.
				   * @param {function} cb Callback to invoke on each entered/left ID.
				   * @param {*} upArg Argument to invoke the callback with on left IDs.
				   * @param {*} downArg Argument to invoke the callback with on entered IDs.
				   * @internal
				   */
				  traverseEnterLeave: function(leaveID, enterID, cb, upArg, downArg) {
				    var ancestorID = getFirstCommonAncestorID(leaveID, enterID);
				    if (ancestorID !== leaveID) {
				      traverseParentPath(leaveID, ancestorID, cb, upArg, false, true);
				    }
				    if (ancestorID !== enterID) {
				      traverseParentPath(ancestorID, enterID, cb, downArg, true, false);
				    }
				  },

				  /**
				   * Simulates the traversal of a two-phase, capture/bubble event dispatch.
				   *
				   * NOTE: This traversal happens on IDs without touching the DOM.
				   *
				   * @param {string} targetID ID of the target node.
				   * @param {function} cb Callback to invoke.
				   * @param {*} arg Argument to invoke the callback with.
				   * @internal
				   */
				  traverseTwoPhase: function(targetID, cb, arg) {
				    if (targetID) {
				      traverseParentPath('', targetID, cb, arg, true, false);
				      traverseParentPath(targetID, '', cb, arg, false, true);
				    }
				  },

				  /**
				   * Traverse a node ID, calling the supplied `cb` for each ancestor ID. For
				   * example, passing `.0.$row-0.1` would result in `cb` getting called
				   * with `.0`, `.0.$row-0`, and `.0.$row-0.1`.
				   *
				   * NOTE: This traversal happens on IDs without touching the DOM.
				   *
				   * @param {string} targetID ID of the target node.
				   * @param {function} cb Callback to invoke.
				   * @param {*} arg Argument to invoke the callback with.
				   * @internal
				   */
				  traverseAncestors: function(targetID, cb, arg) {
				    traverseParentPath('', targetID, cb, arg, true, false);
				  },

				  /**
				   * Exposed for unit testing.
				   * @private
				   */
				  _getFirstCommonAncestorID: getFirstCommonAncestorID,

				  /**
				   * Exposed for unit testing.
				   * @private
				   */
				  _getNextDescendantID: getNextDescendantID,

				  isAncestorIDOf: isAncestorIDOf,

				  SEPARATOR: SEPARATOR

				};

				module.exports = ReactInstanceHandles;

				},{"./ReactRootIndex":75,"./invariant":126}],61:[function(_dereq_,module,exports){
				/**
				 * Copyright 2014, Facebook, Inc.
				 * All rights reserved.
				 *
				 * This source code is licensed under the BSD-style license found in the
				 * LICENSE file in the root directory of this source tree. An additional grant
				 * of patent rights can be found in the PATENTS file in the same directory.
				 *
				 * @providesModule ReactLegacyElement
				 */

				"use strict";

				var ReactCurrentOwner = _dereq_("./ReactCurrentOwner");

				var invariant = _dereq_("./invariant");
				var monitorCodeUse = _dereq_("./monitorCodeUse");
				var warning = _dereq_("./warning");

				var legacyFactoryLogs = {};
				function warnForLegacyFactoryCall() {
				  if (!ReactLegacyElementFactory._isLegacyCallWarningEnabled) {
				    return;
				  }
				  var owner = ReactCurrentOwner.current;
				  var name = owner && owner.constructor ? owner.constructor.displayName : '';
				  if (!name) {
				    name = 'Something';
				  }
				  if (legacyFactoryLogs.hasOwnProperty(name)) {
				    return;
				  }
				  legacyFactoryLogs[name] = true;
				  ("production" !== "development" ? warning(
				    false,
				    name + ' is calling a React component directly. ' +
				    'Use a factory or JSX instead. See: http://fb.me/react-legacyfactory'
				  ) : null);
				  monitorCodeUse('react_legacy_factory_call', { version: 3, name: name });
				}

				function warnForPlainFunctionType(type) {
				  var isReactClass =
				    type.prototype &&
				    typeof type.prototype.mountComponent === 'function' &&
				    typeof type.prototype.receiveComponent === 'function';
				  if (isReactClass) {
				    ("production" !== "development" ? warning(
				      false,
				      'Did not expect to get a React class here. Use `Component` instead ' +
				      'of `Component.type` or `this.constructor`.'
				    ) : null);
				  } else {
				    if (!type._reactWarnedForThisType) {
				      try {
				        type._reactWarnedForThisType = true;
				      } catch (x) {
				        // just incase this is a frozen object or some special object
				      }
				      monitorCodeUse(
				        'react_non_component_in_jsx',
				        { version: 3, name: type.name }
				      );
				    }
				    ("production" !== "development" ? warning(
				      false,
				      'This JSX uses a plain function. Only React components are ' +
				      'valid in React\'s JSX transform.'
				    ) : null);
				  }
				}

				function warnForNonLegacyFactory(type) {
				  ("production" !== "development" ? warning(
				    false,
				    'Do not pass React.DOM.' + type.type + ' to JSX or createFactory. ' +
				    'Use the string "' + type.type + '" instead.'
				  ) : null);
				}

				/**
				 * Transfer static properties from the source to the target. Functions are
				 * rebound to have this reflect the original source.
				 */
				function proxyStaticMethods(target, source) {
				  if (typeof source !== 'function') {
				    return;
				  }
				  for (var key in source) {
				    if (source.hasOwnProperty(key)) {
				      var value = source[key];
				      if (typeof value === 'function') {
				        var bound = value.bind(source);
				        // Copy any properties defined on the function, such as `isRequired` on
				        // a PropTypes validator.
				        for (var k in value) {
				          if (value.hasOwnProperty(k)) {
				            bound[k] = value[k];
				          }
				        }
				        target[key] = bound;
				      } else {
				        target[key] = value;
				      }
				    }
				  }
				}

				// We use an object instead of a boolean because booleans are ignored by our
				// mocking libraries when these factories gets mocked.
				var LEGACY_MARKER = {};
				var NON_LEGACY_MARKER = {};

				var ReactLegacyElementFactory = {};

				ReactLegacyElementFactory.wrapCreateFactory = function(createFactory) {
				  var legacyCreateFactory = function(type) {
				    if (typeof type !== 'function') {
				      // Non-function types cannot be legacy factories
				      return createFactory(type);
				    }

				    if (type.isReactNonLegacyFactory) {
				      // This is probably a factory created by ReactDOM we unwrap it to get to
				      // the underlying string type. It shouldn't have been passed here so we
				      // warn.
				      if ("production" !== "development") {
				        warnForNonLegacyFactory(type);
				      }
				      return createFactory(type.type);
				    }

				    if (type.isReactLegacyFactory) {
				      // This is probably a legacy factory created by ReactCompositeComponent.
				      // We unwrap it to get to the underlying class.
				      return createFactory(type.type);
				    }

				    if ("production" !== "development") {
				      warnForPlainFunctionType(type);
				    }

				    // Unless it's a legacy factory, then this is probably a plain function,
				    // that is expecting to be invoked by JSX. We can just return it as is.
				    return type;
				  };
				  return legacyCreateFactory;
				};

				ReactLegacyElementFactory.wrapCreateElement = function(createElement) {
				  var legacyCreateElement = function(type, props, children) {
				    if (typeof type !== 'function') {
				      // Non-function types cannot be legacy factories
				      return createElement.apply(this, arguments);
				    }

				    var args;

				    if (type.isReactNonLegacyFactory) {
				      // This is probably a factory created by ReactDOM we unwrap it to get to
				      // the underlying string type. It shouldn't have been passed here so we
				      // warn.
				      if ("production" !== "development") {
				        warnForNonLegacyFactory(type);
				      }
				      args = Array.prototype.slice.call(arguments, 0);
				      args[0] = type.type;
				      return createElement.apply(this, args);
				    }

				    if (type.isReactLegacyFactory) {
				      // This is probably a legacy factory created by ReactCompositeComponent.
				      // We unwrap it to get to the underlying class.
				      if (type._isMockFunction) {
				        // If this is a mock function, people will expect it to be called. We
				        // will actually call the original mock factory function instead. This
				        // future proofs unit testing that assume that these are classes.
				        type.type._mockedReactClassConstructor = type;
				      }
				      args = Array.prototype.slice.call(arguments, 0);
				      args[0] = type.type;
				      return createElement.apply(this, args);
				    }

				    if ("production" !== "development") {
				      warnForPlainFunctionType(type);
				    }

				    // This is being called with a plain function we should invoke it
				    // immediately as if this was used with legacy JSX.
				    return type.apply(null, Array.prototype.slice.call(arguments, 1));
				  };
				  return legacyCreateElement;
				};

				ReactLegacyElementFactory.wrapFactory = function(factory) {
				  ("production" !== "development" ? invariant(
				    typeof factory === 'function',
				    'This is suppose to accept a element factory'
				  ) : invariant(typeof factory === 'function'));
				  var legacyElementFactory = function(config, children) {
				    // This factory should not be called when JSX is used. Use JSX instead.
				    if ("production" !== "development") {
				      warnForLegacyFactoryCall();
				    }
				    return factory.apply(this, arguments);
				  };
				  proxyStaticMethods(legacyElementFactory, factory.type);
				  legacyElementFactory.isReactLegacyFactory = LEGACY_MARKER;
				  legacyElementFactory.type = factory.type;
				  return legacyElementFactory;
				};

				// This is used to mark a factory that will remain. E.g. we're allowed to call
				// it as a function. However, you're not suppose to pass it to createElement
				// or createFactory, so it will warn you if you do.
				ReactLegacyElementFactory.markNonLegacyFactory = function(factory) {
				  factory.isReactNonLegacyFactory = NON_LEGACY_MARKER;
				  return factory;
				};

				// Checks if a factory function is actually a legacy factory pretending to
				// be a class.
				ReactLegacyElementFactory.isValidFactory = function(factory) {
				  // TODO: This will be removed and moved into a class validator or something.
				  return typeof factory === 'function' &&
				    factory.isReactLegacyFactory === LEGACY_MARKER;
				};

				ReactLegacyElementFactory.isValidClass = function(factory) {
				  if ("production" !== "development") {
				    ("production" !== "development" ? warning(
				      false,
				      'isValidClass is deprecated and will be removed in a future release. ' +
				      'Use a more specific validator instead.'
				    ) : null);
				  }
				  return ReactLegacyElementFactory.isValidFactory(factory);
				};

				ReactLegacyElementFactory._isLegacyCallWarningEnabled = true;

				module.exports = ReactLegacyElementFactory;

				},{"./ReactCurrentOwner":36,"./invariant":126,"./monitorCodeUse":136,"./warning":145}],62:[function(_dereq_,module,exports){
				/**
				 * Copyright 2013-2014, Facebook, Inc.
				 * All rights reserved.
				 *
				 * This source code is licensed under the BSD-style license found in the
				 * LICENSE file in the root directory of this source tree. An additional grant
				 * of patent rights can be found in the PATENTS file in the same directory.
				 *
				 * @providesModule ReactMarkupChecksum
				 */

				"use strict";

				var adler32 = _dereq_("./adler32");

				var ReactMarkupChecksum = {
				  CHECKSUM_ATTR_NAME: 'data-react-checksum',

				  /**
				   * @param {string} markup Markup string
				   * @return {string} Markup string with checksum attribute attached
				   */
				  addChecksumToMarkup: function(markup) {
				    var checksum = adler32(markup);
				    return markup.replace(
				      '>',
				      ' ' + ReactMarkupChecksum.CHECKSUM_ATTR_NAME + '="' + checksum + '">'
				    );
				  },

				  /**
				   * @param {string} markup to use
				   * @param {DOMElement} element root React element
				   * @returns {boolean} whether or not the markup is the same
				   */
				  canReuseMarkup: function(markup, element) {
				    var existingChecksum = element.getAttribute(
				      ReactMarkupChecksum.CHECKSUM_ATTR_NAME
				    );
				    existingChecksum = existingChecksum && parseInt(existingChecksum, 10);
				    var markupChecksum = adler32(markup);
				    return markupChecksum === existingChecksum;
				  }
				};

				module.exports = ReactMarkupChecksum;

				},{"./adler32":98}],63:[function(_dereq_,module,exports){
				/**
				 * Copyright 2013-2014, Facebook, Inc.
				 * All rights reserved.
				 *
				 * This source code is licensed under the BSD-style license found in the
				 * LICENSE file in the root directory of this source tree. An additional grant
				 * of patent rights can be found in the PATENTS file in the same directory.
				 *
				 * @providesModule ReactMount
				 */

				"use strict";

				var DOMProperty = _dereq_("./DOMProperty");
				var ReactBrowserEventEmitter = _dereq_("./ReactBrowserEventEmitter");
				var ReactCurrentOwner = _dereq_("./ReactCurrentOwner");
				var ReactElement = _dereq_("./ReactElement");
				var ReactLegacyElement = _dereq_("./ReactLegacyElement");
				var ReactInstanceHandles = _dereq_("./ReactInstanceHandles");
				var ReactPerf = _dereq_("./ReactPerf");

				var containsNode = _dereq_("./containsNode");
				var deprecated = _dereq_("./deprecated");
				var getReactRootElementInContainer = _dereq_("./getReactRootElementInContainer");
				var instantiateReactComponent = _dereq_("./instantiateReactComponent");
				var invariant = _dereq_("./invariant");
				var shouldUpdateReactComponent = _dereq_("./shouldUpdateReactComponent");
				var warning = _dereq_("./warning");

				var createElement = ReactLegacyElement.wrapCreateElement(
				  ReactElement.createElement
				);

				var SEPARATOR = ReactInstanceHandles.SEPARATOR;

				var ATTR_NAME = DOMProperty.ID_ATTRIBUTE_NAME;
				var nodeCache = {};

				var ELEMENT_NODE_TYPE = 1;
				var DOC_NODE_TYPE = 9;

				/** Mapping from reactRootID to React component instance. */
				var instancesByReactRootID = {};

				/** Mapping from reactRootID to `container` nodes. */
				var containersByReactRootID = {};

				if ("production" !== "development") {
				  /** __DEV__-only mapping from reactRootID to root elements. */
				  var rootElementsByReactRootID = {};
				}

				// Used to store breadth-first search state in findComponentRoot.
				var findComponentRootReusableArray = [];

				/**
				 * @param {DOMElement} container DOM element that may contain a React component.
				 * @return {?string} A "reactRoot" ID, if a React component is rendered.
				 */
				function getReactRootID(container) {
				  var rootElement = getReactRootElementInContainer(container);
				  return rootElement && ReactMount.getID(rootElement);
				}

				/**
				 * Accessing node[ATTR_NAME] or calling getAttribute(ATTR_NAME) on a form
				 * element can return its control whose name or ID equals ATTR_NAME. All
				 * DOM nodes support `getAttributeNode` but this can also get called on
				 * other objects so just return '' if we're given something other than a
				 * DOM node (such as window).
				 *
				 * @param {?DOMElement|DOMWindow|DOMDocument|DOMTextNode} node DOM node.
				 * @return {string} ID of the supplied `domNode`.
				 */
				function getID(node) {
				  var id = internalGetID(node);
				  if (id) {
				    if (nodeCache.hasOwnProperty(id)) {
				      var cached = nodeCache[id];
				      if (cached !== node) {
				        ("production" !== "development" ? invariant(
				          !isValid(cached, id),
				          'ReactMount: Two valid but unequal nodes with the same `%s`: %s',
				          ATTR_NAME, id
				        ) : invariant(!isValid(cached, id)));

				        nodeCache[id] = node;
				      }
				    } else {
				      nodeCache[id] = node;
				    }
				  }

				  return id;
				}

				function internalGetID(node) {
				  // If node is something like a window, document, or text node, none of
				  // which support attributes or a .getAttribute method, gracefully return
				  // the empty string, as if the attribute were missing.
				  return node && node.getAttribute && node.getAttribute(ATTR_NAME) || '';
				}

				/**
				 * Sets the React-specific ID of the given node.
				 *
				 * @param {DOMElement} node The DOM node whose ID will be set.
				 * @param {string} id The value of the ID attribute.
				 */
				function setID(node, id) {
				  var oldID = internalGetID(node);
				  if (oldID !== id) {
				    delete nodeCache[oldID];
				  }
				  node.setAttribute(ATTR_NAME, id);
				  nodeCache[id] = node;
				}

				/**
				 * Finds the node with the supplied React-generated DOM ID.
				 *
				 * @param {string} id A React-generated DOM ID.
				 * @return {DOMElement} DOM node with the suppled `id`.
				 * @internal
				 */
				function getNode(id) {
				  if (!nodeCache.hasOwnProperty(id) || !isValid(nodeCache[id], id)) {
				    nodeCache[id] = ReactMount.findReactNodeByID(id);
				  }
				  return nodeCache[id];
				}

				/**
				 * A node is "valid" if it is contained by a currently mounted container.
				 *
				 * This means that the node does not have to be contained by a document in
				 * order to be considered valid.
				 *
				 * @param {?DOMElement} node The candidate DOM node.
				 * @param {string} id The expected ID of the node.
				 * @return {boolean} Whether the node is contained by a mounted container.
				 */
				function isValid(node, id) {
				  if (node) {
				    ("production" !== "development" ? invariant(
				      internalGetID(node) === id,
				      'ReactMount: Unexpected modification of `%s`',
				      ATTR_NAME
				    ) : invariant(internalGetID(node) === id));

				    var container = ReactMount.findReactContainerForID(id);
				    if (container && containsNode(container, node)) {
				      return true;
				    }
				  }

				  return false;
				}

				/**
				 * Causes the cache to forget about one React-specific ID.
				 *
				 * @param {string} id The ID to forget.
				 */
				function purgeID(id) {
				  delete nodeCache[id];
				}

				var deepestNodeSoFar = null;
				function findDeepestCachedAncestorImpl(ancestorID) {
				  var ancestor = nodeCache[ancestorID];
				  if (ancestor && isValid(ancestor, ancestorID)) {
				    deepestNodeSoFar = ancestor;
				  } else {
				    // This node isn't populated in the cache, so presumably none of its
				    // descendants are. Break out of the loop.
				    return false;
				  }
				}

				/**
				 * Return the deepest cached node whose ID is a prefix of `targetID`.
				 */
				function findDeepestCachedAncestor(targetID) {
				  deepestNodeSoFar = null;
				  ReactInstanceHandles.traverseAncestors(
				    targetID,
				    findDeepestCachedAncestorImpl
				  );

				  var foundNode = deepestNodeSoFar;
				  deepestNodeSoFar = null;
				  return foundNode;
				}

				/**
				 * Mounting is the process of initializing a React component by creatings its
				 * representative DOM elements and inserting them into a supplied `container`.
				 * Any prior content inside `container` is destroyed in the process.
				 *
				 *   ReactMount.render(
				 *     component,
				 *     document.getElementById('container')
				 *   );
				 *
				 *   <div id="container">                   <-- Supplied `container`.
				 *     <div data-reactid=".3">              <-- Rendered reactRoot of React
				 *       // ...                                 component.
				 *     </div>
				 *   </div>
				 *
				 * Inside of `container`, the first element rendered is the "reactRoot".
				 */
				var ReactMount = {
				  /** Exposed for debugging purposes **/
				  _instancesByReactRootID: instancesByReactRootID,

				  /**
				   * This is a hook provided to support rendering React components while
				   * ensuring that the apparent scroll position of its `container` does not
				   * change.
				   *
				   * @param {DOMElement} container The `container` being rendered into.
				   * @param {function} renderCallback This must be called once to do the render.
				   */
				  scrollMonitor: function(container, renderCallback) {
				    renderCallback();
				  },

				  /**
				   * Take a component that's already mounted into the DOM and replace its props
				   * @param {ReactComponent} prevComponent component instance already in the DOM
				   * @param {ReactComponent} nextComponent component instance to render
				   * @param {DOMElement} container container to render into
				   * @param {?function} callback function triggered on completion
				   */
				  _updateRootComponent: function(
				      prevComponent,
				      nextComponent,
				      container,
				      callback) {
				    var nextProps = nextComponent.props;
				    ReactMount.scrollMonitor(container, function() {
				      prevComponent.replaceProps(nextProps, callback);
				    });

				    if ("production" !== "development") {
				      // Record the root element in case it later gets transplanted.
				      rootElementsByReactRootID[getReactRootID(container)] =
				        getReactRootElementInContainer(container);
				    }

				    return prevComponent;
				  },

				  /**
				   * Register a component into the instance map and starts scroll value
				   * monitoring
				   * @param {ReactComponent} nextComponent component instance to render
				   * @param {DOMElement} container container to render into
				   * @return {string} reactRoot ID prefix
				   */
				  _registerComponent: function(nextComponent, container) {
				    ("production" !== "development" ? invariant(
				      container && (
				        container.nodeType === ELEMENT_NODE_TYPE ||
				        container.nodeType === DOC_NODE_TYPE
				      ),
				      '_registerComponent(...): Target container is not a DOM element.'
				    ) : invariant(container && (
				      container.nodeType === ELEMENT_NODE_TYPE ||
				      container.nodeType === DOC_NODE_TYPE
				    )));

				    ReactBrowserEventEmitter.ensureScrollValueMonitoring();

				    var reactRootID = ReactMount.registerContainer(container);
				    instancesByReactRootID[reactRootID] = nextComponent;
				    return reactRootID;
				  },

				  /**
				   * Render a new component into the DOM.
				   * @param {ReactComponent} nextComponent component instance to render
				   * @param {DOMElement} container container to render into
				   * @param {boolean} shouldReuseMarkup if we should skip the markup insertion
				   * @return {ReactComponent} nextComponent
				   */
				  _renderNewRootComponent: ReactPerf.measure(
				    'ReactMount',
				    '_renderNewRootComponent',
				    function(
				        nextComponent,
				        container,
				        shouldReuseMarkup) {
				      // Various parts of our code (such as ReactCompositeComponent's
				      // _renderValidatedComponent) assume that calls to render aren't nested;
				      // verify that that's the case.
				      ("production" !== "development" ? warning(
				        ReactCurrentOwner.current == null,
				        '_renderNewRootComponent(): Render methods should be a pure function ' +
				        'of props and state; triggering nested component updates from ' +
				        'render is not allowed. If necessary, trigger nested updates in ' +
				        'componentDidUpdate.'
				      ) : null);

				      var componentInstance = instantiateReactComponent(nextComponent, null);
				      var reactRootID = ReactMount._registerComponent(
				        componentInstance,
				        container
				      );
				      componentInstance.mountComponentIntoNode(
				        reactRootID,
				        container,
				        shouldReuseMarkup
				      );

				      if ("production" !== "development") {
				        // Record the root element in case it later gets transplanted.
				        rootElementsByReactRootID[reactRootID] =
				          getReactRootElementInContainer(container);
				      }

				      return componentInstance;
				    }
				  ),

				  /**
				   * Renders a React component into the DOM in the supplied `container`.
				   *
				   * If the React component was previously rendered into `container`, this will
				   * perform an update on it and only mutate the DOM as necessary to reflect the
				   * latest React component.
				   *
				   * @param {ReactElement} nextElement Component element to render.
				   * @param {DOMElement} container DOM element to render into.
				   * @param {?function} callback function triggered on completion
				   * @return {ReactComponent} Component instance rendered in `container`.
				   */
				  render: function(nextElement, container, callback) {
				    ("production" !== "development" ? invariant(
				      ReactElement.isValidElement(nextElement),
				      'renderComponent(): Invalid component element.%s',
				      (
				        typeof nextElement === 'string' ?
				          ' Instead of passing an element string, make sure to instantiate ' +
				          'it by passing it to React.createElement.' :
				        ReactLegacyElement.isValidFactory(nextElement) ?
				          ' Instead of passing a component class, make sure to instantiate ' +
				          'it by passing it to React.createElement.' :
				        // Check if it quacks like a element
				        typeof nextElement.props !== "undefined" ?
				          ' This may be caused by unintentionally loading two independent ' +
				          'copies of React.' :
				          ''
				      )
				    ) : invariant(ReactElement.isValidElement(nextElement)));

				    var prevComponent = instancesByReactRootID[getReactRootID(container)];

				    if (prevComponent) {
				      var prevElement = prevComponent._currentElement;
				      if (shouldUpdateReactComponent(prevElement, nextElement)) {
				        return ReactMount._updateRootComponent(
				          prevComponent,
				          nextElement,
				          container,
				          callback
				        );
				      } else {
				        ReactMount.unmountComponentAtNode(container);
				      }
				    }

				    var reactRootElement = getReactRootElementInContainer(container);
				    var containerHasReactMarkup =
				      reactRootElement && ReactMount.isRenderedByReact(reactRootElement);

				    var shouldReuseMarkup = containerHasReactMarkup && !prevComponent;

				    var component = ReactMount._renderNewRootComponent(
				      nextElement,
				      container,
				      shouldReuseMarkup
				    );
				    callback && callback.call(component);
				    return component;
				  },

				  /**
				   * Constructs a component instance of `constructor` with `initialProps` and
				   * renders it into the supplied `container`.
				   *
				   * @param {function} constructor React component constructor.
				   * @param {?object} props Initial props of the component instance.
				   * @param {DOMElement} container DOM element to render into.
				   * @return {ReactComponent} Component instance rendered in `container`.
				   */
				  constructAndRenderComponent: function(constructor, props, container) {
				    var element = createElement(constructor, props);
				    return ReactMount.render(element, container);
				  },

				  /**
				   * Constructs a component instance of `constructor` with `initialProps` and
				   * renders it into a container node identified by supplied `id`.
				   *
				   * @param {function} componentConstructor React component constructor
				   * @param {?object} props Initial props of the component instance.
				   * @param {string} id ID of the DOM element to render into.
				   * @return {ReactComponent} Component instance rendered in the container node.
				   */
				  constructAndRenderComponentByID: function(constructor, props, id) {
				    var domNode = document.getElementById(id);
				    ("production" !== "development" ? invariant(
				      domNode,
				      'Tried to get element with id of "%s" but it is not present on the page.',
				      id
				    ) : invariant(domNode));
				    return ReactMount.constructAndRenderComponent(constructor, props, domNode);
				  },

				  /**
				   * Registers a container node into which React components will be rendered.
				   * This also creates the "reactRoot" ID that will be assigned to the element
				   * rendered within.
				   *
				   * @param {DOMElement} container DOM element to register as a container.
				   * @return {string} The "reactRoot" ID of elements rendered within.
				   */
				  registerContainer: function(container) {
				    var reactRootID = getReactRootID(container);
				    if (reactRootID) {
				      // If one exists, make sure it is a valid "reactRoot" ID.
				      reactRootID = ReactInstanceHandles.getReactRootIDFromNodeID(reactRootID);
				    }
				    if (!reactRootID) {
				      // No valid "reactRoot" ID found, create one.
				      reactRootID = ReactInstanceHandles.createReactRootID();
				    }
				    containersByReactRootID[reactRootID] = container;
				    return reactRootID;
				  },

				  /**
				   * Unmounts and destroys the React component rendered in the `container`.
				   *
				   * @param {DOMElement} container DOM element containing a React component.
				   * @return {boolean} True if a component was found in and unmounted from
				   *                   `container`
				   */
				  unmountComponentAtNode: function(container) {
				    // Various parts of our code (such as ReactCompositeComponent's
				    // _renderValidatedComponent) assume that calls to render aren't nested;
				    // verify that that's the case. (Strictly speaking, unmounting won't cause a
				    // render but we still don't expect to be in a render call here.)
				    ("production" !== "development" ? warning(
				      ReactCurrentOwner.current == null,
				      'unmountComponentAtNode(): Render methods should be a pure function of ' +
				      'props and state; triggering nested component updates from render is ' +
				      'not allowed. If necessary, trigger nested updates in ' +
				      'componentDidUpdate.'
				    ) : null);

				    var reactRootID = getReactRootID(container);
				    var component = instancesByReactRootID[reactRootID];
				    if (!component) {
				      return false;
				    }
				    ReactMount.unmountComponentFromNode(component, container);
				    delete instancesByReactRootID[reactRootID];
				    delete containersByReactRootID[reactRootID];
				    if ("production" !== "development") {
				      delete rootElementsByReactRootID[reactRootID];
				    }
				    return true;
				  },

				  /**
				   * Unmounts a component and removes it from the DOM.
				   *
				   * @param {ReactComponent} instance React component instance.
				   * @param {DOMElement} container DOM element to unmount from.
				   * @final
				   * @internal
				   * @see {ReactMount.unmountComponentAtNode}
				   */
				  unmountComponentFromNode: function(instance, container) {
				    instance.unmountComponent();

				    if (container.nodeType === DOC_NODE_TYPE) {
				      container = container.documentElement;
				    }

				    // http://jsperf.com/emptying-a-node
				    while (container.lastChild) {
				      container.removeChild(container.lastChild);
				    }
				  },

				  /**
				   * Finds the container DOM element that contains React component to which the
				   * supplied DOM `id` belongs.
				   *
				   * @param {string} id The ID of an element rendered by a React component.
				   * @return {?DOMElement} DOM element that contains the `id`.
				   */
				  findReactContainerForID: function(id) {
				    var reactRootID = ReactInstanceHandles.getReactRootIDFromNodeID(id);
				    var container = containersByReactRootID[reactRootID];

				    if ("production" !== "development") {
				      var rootElement = rootElementsByReactRootID[reactRootID];
				      if (rootElement && rootElement.parentNode !== container) {
				        ("production" !== "development" ? invariant(
				          // Call internalGetID here because getID calls isValid which calls
				          // findReactContainerForID (this function).
				          internalGetID(rootElement) === reactRootID,
				          'ReactMount: Root element ID differed from reactRootID.'
				        ) : invariant(// Call internalGetID here because getID calls isValid which calls
				        // findReactContainerForID (this function).
				        internalGetID(rootElement) === reactRootID));

				        var containerChild = container.firstChild;
				        if (containerChild &&
				            reactRootID === internalGetID(containerChild)) {
				          // If the container has a new child with the same ID as the old
				          // root element, then rootElementsByReactRootID[reactRootID] is
				          // just stale and needs to be updated. The case that deserves a
				          // warning is when the container is empty.
				          rootElementsByReactRootID[reactRootID] = containerChild;
				        } else {
				          console.warn(
				            'ReactMount: Root element has been removed from its original ' +
				            'container. New container:', rootElement.parentNode
				          );
				        }
				      }
				    }

				    return container;
				  },

				  /**
				   * Finds an element rendered by React with the supplied ID.
				   *
				   * @param {string} id ID of a DOM node in the React component.
				   * @return {DOMElement} Root DOM node of the React component.
				   */
				  findReactNodeByID: function(id) {
				    var reactRoot = ReactMount.findReactContainerForID(id);
				    return ReactMount.findComponentRoot(reactRoot, id);
				  },

				  /**
				   * True if the supplied `node` is rendered by React.
				   *
				   * @param {*} node DOM Element to check.
				   * @return {boolean} True if the DOM Element appears to be rendered by React.
				   * @internal
				   */
				  isRenderedByReact: function(node) {
				    if (node.nodeType !== 1) {
				      // Not a DOMElement, therefore not a React component
				      return false;
				    }
				    var id = ReactMount.getID(node);
				    return id ? id.charAt(0) === SEPARATOR : false;
				  },

				  /**
				   * Traverses up the ancestors of the supplied node to find a node that is a
				   * DOM representation of a React component.
				   *
				   * @param {*} node
				   * @return {?DOMEventTarget}
				   * @internal
				   */
				  getFirstReactDOM: function(node) {
				    var current = node;
				    while (current && current.parentNode !== current) {
				      if (ReactMount.isRenderedByReact(current)) {
				        return current;
				      }
				      current = current.parentNode;
				    }
				    return null;
				  },

				  /**
				   * Finds a node with the supplied `targetID` inside of the supplied
				   * `ancestorNode`.  Exploits the ID naming scheme to perform the search
				   * quickly.
				   *
				   * @param {DOMEventTarget} ancestorNode Search from this root.
				   * @pararm {string} targetID ID of the DOM representation of the component.
				   * @return {DOMEventTarget} DOM node with the supplied `targetID`.
				   * @internal
				   */
				  findComponentRoot: function(ancestorNode, targetID) {
				    var firstChildren = findComponentRootReusableArray;
				    var childIndex = 0;

				    var deepestAncestor = findDeepestCachedAncestor(targetID) || ancestorNode;

				    firstChildren[0] = deepestAncestor.firstChild;
				    firstChildren.length = 1;

				    while (childIndex < firstChildren.length) {
				      var child = firstChildren[childIndex++];
				      var targetChild;

				      while (child) {
				        var childID = ReactMount.getID(child);
				        if (childID) {
				          // Even if we find the node we're looking for, we finish looping
				          // through its siblings to ensure they're cached so that we don't have
				          // to revisit this node again. Otherwise, we make n^2 calls to getID
				          // when visiting the many children of a single node in order.

				          if (targetID === childID) {
				            targetChild = child;
				          } else if (ReactInstanceHandles.isAncestorIDOf(childID, targetID)) {
				            // If we find a child whose ID is an ancestor of the given ID,
				            // then we can be sure that we only want to search the subtree
				            // rooted at this child, so we can throw out the rest of the
				            // search state.
				            firstChildren.length = childIndex = 0;
				            firstChildren.push(child.firstChild);
				          }

				        } else {
				          // If this child had no ID, then there's a chance that it was
				          // injected automatically by the browser, as when a `<table>`
				          // element sprouts an extra `<tbody>` child as a side effect of
				          // `.innerHTML` parsing. Optimistically continue down this
				          // branch, but not before examining the other siblings.
				          firstChildren.push(child.firstChild);
				        }

				        child = child.nextSibling;
				      }

				      if (targetChild) {
				        // Emptying firstChildren/findComponentRootReusableArray is
				        // not necessary for correctness, but it helps the GC reclaim
				        // any nodes that were left at the end of the search.
				        firstChildren.length = 0;

				        return targetChild;
				      }
				    }

				    firstChildren.length = 0;

				    ("production" !== "development" ? invariant(
				      false,
				      'findComponentRoot(..., %s): Unable to find element. This probably ' +
				      'means the DOM was unexpectedly mutated (e.g., by the browser), ' +
				      'usually due to forgetting a <tbody> when using tables, nesting tags ' +
				      'like <form>, <p>, or <a>, or using non-SVG elements in an <svg> ' +
				      'parent. ' +
				      'Try inspecting the child nodes of the element with React ID `%s`.',
				      targetID,
				      ReactMount.getID(ancestorNode)
				    ) : invariant(false));
				  },


				  /**
				   * React ID utilities.
				   */

				  getReactRootID: getReactRootID,

				  getID: getID,

				  setID: setID,

				  getNode: getNode,

				  purgeID: purgeID
				};

				// Deprecations (remove for 0.13)
				ReactMount.renderComponent = deprecated(
				  'ReactMount',
				  'renderComponent',
				  'render',
				  this,
				  ReactMount.render
				);

				module.exports = ReactMount;

				},{"./DOMProperty":11,"./ReactBrowserEventEmitter":30,"./ReactCurrentOwner":36,"./ReactElement":52,"./ReactInstanceHandles":60,"./ReactLegacyElement":61,"./ReactPerf":68,"./containsNode":101,"./deprecated":106,"./getReactRootElementInContainer":120,"./instantiateReactComponent":125,"./invariant":126,"./shouldUpdateReactComponent":142,"./warning":145}],64:[function(_dereq_,module,exports){
				/**
				 * Copyright 2013-2014, Facebook, Inc.
				 * All rights reserved.
				 *
				 * This source code is licensed under the BSD-style license found in the
				 * LICENSE file in the root directory of this source tree. An additional grant
				 * of patent rights can be found in the PATENTS file in the same directory.
				 *
				 * @providesModule ReactMultiChild
				 * @typechecks static-only
				 */

				"use strict";

				var ReactComponent = _dereq_("./ReactComponent");
				var ReactMultiChildUpdateTypes = _dereq_("./ReactMultiChildUpdateTypes");

				var flattenChildren = _dereq_("./flattenChildren");
				var instantiateReactComponent = _dereq_("./instantiateReactComponent");
				var shouldUpdateReactComponent = _dereq_("./shouldUpdateReactComponent");

				/**
				 * Updating children of a component may trigger recursive updates. The depth is
				 * used to batch recursive updates to render markup more efficiently.
				 *
				 * @type {number}
				 * @private
				 */
				var updateDepth = 0;

				/**
				 * Queue of update configuration objects.
				 *
				 * Each object has a `type` property that is in `ReactMultiChildUpdateTypes`.
				 *
				 * @type {array<object>}
				 * @private
				 */
				var updateQueue = [];

				/**
				 * Queue of markup to be rendered.
				 *
				 * @type {array<string>}
				 * @private
				 */
				var markupQueue = [];

				/**
				 * Enqueues markup to be rendered and inserted at a supplied index.
				 *
				 * @param {string} parentID ID of the parent component.
				 * @param {string} markup Markup that renders into an element.
				 * @param {number} toIndex Destination index.
				 * @private
				 */
				function enqueueMarkup(parentID, markup, toIndex) {
				  // NOTE: Null values reduce hidden classes.
				  updateQueue.push({
				    parentID: parentID,
				    parentNode: null,
				    type: ReactMultiChildUpdateTypes.INSERT_MARKUP,
				    markupIndex: markupQueue.push(markup) - 1,
				    textContent: null,
				    fromIndex: null,
				    toIndex: toIndex
				  });
				}

				/**
				 * Enqueues moving an existing element to another index.
				 *
				 * @param {string} parentID ID of the parent component.
				 * @param {number} fromIndex Source index of the existing element.
				 * @param {number} toIndex Destination index of the element.
				 * @private
				 */
				function enqueueMove(parentID, fromIndex, toIndex) {
				  // NOTE: Null values reduce hidden classes.
				  updateQueue.push({
				    parentID: parentID,
				    parentNode: null,
				    type: ReactMultiChildUpdateTypes.MOVE_EXISTING,
				    markupIndex: null,
				    textContent: null,
				    fromIndex: fromIndex,
				    toIndex: toIndex
				  });
				}

				/**
				 * Enqueues removing an element at an index.
				 *
				 * @param {string} parentID ID of the parent component.
				 * @param {number} fromIndex Index of the element to remove.
				 * @private
				 */
				function enqueueRemove(parentID, fromIndex) {
				  // NOTE: Null values reduce hidden classes.
				  updateQueue.push({
				    parentID: parentID,
				    parentNode: null,
				    type: ReactMultiChildUpdateTypes.REMOVE_NODE,
				    markupIndex: null,
				    textContent: null,
				    fromIndex: fromIndex,
				    toIndex: null
				  });
				}

				/**
				 * Enqueues setting the text content.
				 *
				 * @param {string} parentID ID of the parent component.
				 * @param {string} textContent Text content to set.
				 * @private
				 */
				function enqueueTextContent(parentID, textContent) {
				  // NOTE: Null values reduce hidden classes.
				  updateQueue.push({
				    parentID: parentID,
				    parentNode: null,
				    type: ReactMultiChildUpdateTypes.TEXT_CONTENT,
				    markupIndex: null,
				    textContent: textContent,
				    fromIndex: null,
				    toIndex: null
				  });
				}

				/**
				 * Processes any enqueued updates.
				 *
				 * @private
				 */
				function processQueue() {
				  if (updateQueue.length) {
				    ReactComponent.BackendIDOperations.dangerouslyProcessChildrenUpdates(
				      updateQueue,
				      markupQueue
				    );
				    clearQueue();
				  }
				}

				/**
				 * Clears any enqueued updates.
				 *
				 * @private
				 */
				function clearQueue() {
				  updateQueue.length = 0;
				  markupQueue.length = 0;
				}

				/**
				 * ReactMultiChild are capable of reconciling multiple children.
				 *
				 * @class ReactMultiChild
				 * @internal
				 */
				var ReactMultiChild = {

				  /**
				   * Provides common functionality for components that must reconcile multiple
				   * children. This is used by `ReactDOMComponent` to mount, update, and
				   * unmount child components.
				   *
				   * @lends {ReactMultiChild.prototype}
				   */
				  Mixin: {

				    /**
				     * Generates a "mount image" for each of the supplied children. In the case
				     * of `ReactDOMComponent`, a mount image is a string of markup.
				     *
				     * @param {?object} nestedChildren Nested child maps.
				     * @return {array} An array of mounted representations.
				     * @internal
				     */
				    mountChildren: function(nestedChildren, transaction) {
				      var children = flattenChildren(nestedChildren);
				      var mountImages = [];
				      var index = 0;
				      this._renderedChildren = children;
				      for (var name in children) {
				        var child = children[name];
				        if (children.hasOwnProperty(name)) {
				          // The rendered children must be turned into instances as they're
				          // mounted.
				          var childInstance = instantiateReactComponent(child, null);
				          children[name] = childInstance;
				          // Inlined for performance, see `ReactInstanceHandles.createReactID`.
				          var rootID = this._rootNodeID + name;
				          var mountImage = childInstance.mountComponent(
				            rootID,
				            transaction,
				            this._mountDepth + 1
				          );
				          childInstance._mountIndex = index;
				          mountImages.push(mountImage);
				          index++;
				        }
				      }
				      return mountImages;
				    },

				    /**
				     * Replaces any rendered children with a text content string.
				     *
				     * @param {string} nextContent String of content.
				     * @internal
				     */
				    updateTextContent: function(nextContent) {
				      updateDepth++;
				      var errorThrown = true;
				      try {
				        var prevChildren = this._renderedChildren;
				        // Remove any rendered children.
				        for (var name in prevChildren) {
				          if (prevChildren.hasOwnProperty(name)) {
				            this._unmountChildByName(prevChildren[name], name);
				          }
				        }
				        // Set new text content.
				        this.setTextContent(nextContent);
				        errorThrown = false;
				      } finally {
				        updateDepth--;
				        if (!updateDepth) {
				          errorThrown ? clearQueue() : processQueue();
				        }
				      }
				    },

				    /**
				     * Updates the rendered children with new children.
				     *
				     * @param {?object} nextNestedChildren Nested child maps.
				     * @param {ReactReconcileTransaction} transaction
				     * @internal
				     */
				    updateChildren: function(nextNestedChildren, transaction) {
				      updateDepth++;
				      var errorThrown = true;
				      try {
				        this._updateChildren(nextNestedChildren, transaction);
				        errorThrown = false;
				      } finally {
				        updateDepth--;
				        if (!updateDepth) {
				          errorThrown ? clearQueue() : processQueue();
				        }
				      }
				    },

				    /**
				     * Improve performance by isolating this hot code path from the try/catch
				     * block in `updateChildren`.
				     *
				     * @param {?object} nextNestedChildren Nested child maps.
				     * @param {ReactReconcileTransaction} transaction
				     * @final
				     * @protected
				     */
				    _updateChildren: function(nextNestedChildren, transaction) {
				      var nextChildren = flattenChildren(nextNestedChildren);
				      var prevChildren = this._renderedChildren;
				      if (!nextChildren && !prevChildren) {
				        return;
				      }
				      var name;
				      // `nextIndex` will increment for each child in `nextChildren`, but
				      // `lastIndex` will be the last index visited in `prevChildren`.
				      var lastIndex = 0;
				      var nextIndex = 0;
				      for (name in nextChildren) {
				        if (!nextChildren.hasOwnProperty(name)) {
				          continue;
				        }
				        var prevChild = prevChildren && prevChildren[name];
				        var prevElement = prevChild && prevChild._currentElement;
				        var nextElement = nextChildren[name];
				        if (shouldUpdateReactComponent(prevElement, nextElement)) {
				          this.moveChild(prevChild, nextIndex, lastIndex);
				          lastIndex = Math.max(prevChild._mountIndex, lastIndex);
				          prevChild.receiveComponent(nextElement, transaction);
				          prevChild._mountIndex = nextIndex;
				        } else {
				          if (prevChild) {
				            // Update `lastIndex` before `_mountIndex` gets unset by unmounting.
				            lastIndex = Math.max(prevChild._mountIndex, lastIndex);
				            this._unmountChildByName(prevChild, name);
				          }
				          // The child must be instantiated before it's mounted.
				          var nextChildInstance = instantiateReactComponent(
				            nextElement,
				            null
				          );
				          this._mountChildByNameAtIndex(
				            nextChildInstance, name, nextIndex, transaction
				          );
				        }
				        nextIndex++;
				      }
				      // Remove children that are no longer present.
				      for (name in prevChildren) {
				        if (prevChildren.hasOwnProperty(name) &&
				            !(nextChildren && nextChildren[name])) {
				          this._unmountChildByName(prevChildren[name], name);
				        }
				      }
				    },

				    /**
				     * Unmounts all rendered children. This should be used to clean up children
				     * when this component is unmounted.
				     *
				     * @internal
				     */
				    unmountChildren: function() {
				      var renderedChildren = this._renderedChildren;
				      for (var name in renderedChildren) {
				        var renderedChild = renderedChildren[name];
				        // TODO: When is this not true?
				        if (renderedChild.unmountComponent) {
				          renderedChild.unmountComponent();
				        }
				      }
				      this._renderedChildren = null;
				    },

				    /**
				     * Moves a child component to the supplied index.
				     *
				     * @param {ReactComponent} child Component to move.
				     * @param {number} toIndex Destination index of the element.
				     * @param {number} lastIndex Last index visited of the siblings of `child`.
				     * @protected
				     */
				    moveChild: function(child, toIndex, lastIndex) {
				      // If the index of `child` is less than `lastIndex`, then it needs to
				      // be moved. Otherwise, we do not need to move it because a child will be
				      // inserted or moved before `child`.
				      if (child._mountIndex < lastIndex) {
				        enqueueMove(this._rootNodeID, child._mountIndex, toIndex);
				      }
				    },

				    /**
				     * Creates a child component.
				     *
				     * @param {ReactComponent} child Component to create.
				     * @param {string} mountImage Markup to insert.
				     * @protected
				     */
				    createChild: function(child, mountImage) {
				      enqueueMarkup(this._rootNodeID, mountImage, child._mountIndex);
				    },

				    /**
				     * Removes a child component.
				     *
				     * @param {ReactComponent} child Child to remove.
				     * @protected
				     */
				    removeChild: function(child) {
				      enqueueRemove(this._rootNodeID, child._mountIndex);
				    },

				    /**
				     * Sets this text content string.
				     *
				     * @param {string} textContent Text content to set.
				     * @protected
				     */
				    setTextContent: function(textContent) {
				      enqueueTextContent(this._rootNodeID, textContent);
				    },

				    /**
				     * Mounts a child with the supplied name.
				     *
				     * NOTE: This is part of `updateChildren` and is here for readability.
				     *
				     * @param {ReactComponent} child Component to mount.
				     * @param {string} name Name of the child.
				     * @param {number} index Index at which to insert the child.
				     * @param {ReactReconcileTransaction} transaction
				     * @private
				     */
				    _mountChildByNameAtIndex: function(child, name, index, transaction) {
				      // Inlined for performance, see `ReactInstanceHandles.createReactID`.
				      var rootID = this._rootNodeID + name;
				      var mountImage = child.mountComponent(
				        rootID,
				        transaction,
				        this._mountDepth + 1
				      );
				      child._mountIndex = index;
				      this.createChild(child, mountImage);
				      this._renderedChildren = this._renderedChildren || {};
				      this._renderedChildren[name] = child;
				    },

				    /**
				     * Unmounts a rendered child by name.
				     *
				     * NOTE: This is part of `updateChildren` and is here for readability.
				     *
				     * @param {ReactComponent} child Component to unmount.
				     * @param {string} name Name of the child in `this._renderedChildren`.
				     * @private
				     */
				    _unmountChildByName: function(child, name) {
				      this.removeChild(child);
				      child._mountIndex = null;
				      child.unmountComponent();
				      delete this._renderedChildren[name];
				    }

				  }

				};

				module.exports = ReactMultiChild;

				},{"./ReactComponent":32,"./ReactMultiChildUpdateTypes":65,"./flattenChildren":110,"./instantiateReactComponent":125,"./shouldUpdateReactComponent":142}],65:[function(_dereq_,module,exports){
				/**
				 * Copyright 2013-2014, Facebook, Inc.
				 * All rights reserved.
				 *
				 * This source code is licensed under the BSD-style license found in the
				 * LICENSE file in the root directory of this source tree. An additional grant
				 * of patent rights can be found in the PATENTS file in the same directory.
				 *
				 * @providesModule ReactMultiChildUpdateTypes
				 */

				"use strict";

				var keyMirror = _dereq_("./keyMirror");

				/**
				 * When a component's children are updated, a series of update configuration
				 * objects are created in order to batch and serialize the required changes.
				 *
				 * Enumerates all the possible types of update configurations.
				 *
				 * @internal
				 */
				var ReactMultiChildUpdateTypes = keyMirror({
				  INSERT_MARKUP: null,
				  MOVE_EXISTING: null,
				  REMOVE_NODE: null,
				  TEXT_CONTENT: null
				});

				module.exports = ReactMultiChildUpdateTypes;

				},{"./keyMirror":132}],66:[function(_dereq_,module,exports){
				/**
				 * Copyright 2014, Facebook, Inc.
				 * All rights reserved.
				 *
				 * This source code is licensed under the BSD-style license found in the
				 * LICENSE file in the root directory of this source tree. An additional grant
				 * of patent rights can be found in the PATENTS file in the same directory.
				 *
				 * @providesModule ReactNativeComponent
				 */

				"use strict";

				var assign = _dereq_("./Object.assign");
				var invariant = _dereq_("./invariant");

				var genericComponentClass = null;
				// This registry keeps track of wrapper classes around native tags
				var tagToComponentClass = {};

				var ReactNativeComponentInjection = {
				  // This accepts a class that receives the tag string. This is a catch all
				  // that can render any kind of tag.
				  injectGenericComponentClass: function(componentClass) {
				    genericComponentClass = componentClass;
				  },
				  // This accepts a keyed object with classes as values. Each key represents a
				  // tag. That particular tag will use this class instead of the generic one.
				  injectComponentClasses: function(componentClasses) {
				    assign(tagToComponentClass, componentClasses);
				  }
				};

				/**
				 * Create an internal class for a specific tag.
				 *
				 * @param {string} tag The tag for which to create an internal instance.
				 * @param {any} props The props passed to the instance constructor.
				 * @return {ReactComponent} component The injected empty component.
				 */
				function createInstanceForTag(tag, props, parentType) {
				  var componentClass = tagToComponentClass[tag];
				  if (componentClass == null) {
				    ("production" !== "development" ? invariant(
				      genericComponentClass,
				      'There is no registered component for the tag %s',
				      tag
				    ) : invariant(genericComponentClass));
				    return new genericComponentClass(tag, props);
				  }
				  if (parentType === tag) {
				    // Avoid recursion
				    ("production" !== "development" ? invariant(
				      genericComponentClass,
				      'There is no registered component for the tag %s',
				      tag
				    ) : invariant(genericComponentClass));
				    return new genericComponentClass(tag, props);
				  }
				  // Unwrap legacy factories
				  return new componentClass.type(props);
				}

				var ReactNativeComponent = {
				  createInstanceForTag: createInstanceForTag,
				  injection: ReactNativeComponentInjection
				};

				module.exports = ReactNativeComponent;

				},{"./Object.assign":27,"./invariant":126}],67:[function(_dereq_,module,exports){
				/**
				 * Copyright 2013-2014, Facebook, Inc.
				 * All rights reserved.
				 *
				 * This source code is licensed under the BSD-style license found in the
				 * LICENSE file in the root directory of this source tree. An additional grant
				 * of patent rights can be found in the PATENTS file in the same directory.
				 *
				 * @providesModule ReactOwner
				 */

				"use strict";

				var emptyObject = _dereq_("./emptyObject");
				var invariant = _dereq_("./invariant");

				/**
				 * ReactOwners are capable of storing references to owned components.
				 *
				 * All components are capable of //being// referenced by owner components, but
				 * only ReactOwner components are capable of //referencing// owned components.
				 * The named reference is known as a "ref".
				 *
				 * Refs are available when mounted and updated during reconciliation.
				 *
				 *   var MyComponent = React.createClass({
				 *     render: function() {
				 *       return (
				 *         <div onClick={this.handleClick}>
				 *           <CustomComponent ref="custom" />
				 *         </div>
				 *       );
				 *     },
				 *     handleClick: function() {
				 *       this.refs.custom.handleClick();
				 *     },
				 *     componentDidMount: function() {
				 *       this.refs.custom.initialize();
				 *     }
				 *   });
				 *
				 * Refs should rarely be used. When refs are used, they should only be done to
				 * control data that is not handled by React's data flow.
				 *
				 * @class ReactOwner
				 */
				var ReactOwner = {

				  /**
				   * @param {?object} object
				   * @return {boolean} True if `object` is a valid owner.
				   * @final
				   */
				  isValidOwner: function(object) {
				    return !!(
				      object &&
				      typeof object.attachRef === 'function' &&
				      typeof object.detachRef === 'function'
				    );
				  },

				  /**
				   * Adds a component by ref to an owner component.
				   *
				   * @param {ReactComponent} component Component to reference.
				   * @param {string} ref Name by which to refer to the component.
				   * @param {ReactOwner} owner Component on which to record the ref.
				   * @final
				   * @internal
				   */
				  addComponentAsRefTo: function(component, ref, owner) {
				    ("production" !== "development" ? invariant(
				      ReactOwner.isValidOwner(owner),
				      'addComponentAsRefTo(...): Only a ReactOwner can have refs. This ' +
				      'usually means that you\'re trying to add a ref to a component that ' +
				      'doesn\'t have an owner (that is, was not created inside of another ' +
				      'component\'s `render` method). Try rendering this component inside of ' +
				      'a new top-level component which will hold the ref.'
				    ) : invariant(ReactOwner.isValidOwner(owner)));
				    owner.attachRef(ref, component);
				  },

				  /**
				   * Removes a component by ref from an owner component.
				   *
				   * @param {ReactComponent} component Component to dereference.
				   * @param {string} ref Name of the ref to remove.
				   * @param {ReactOwner} owner Component on which the ref is recorded.
				   * @final
				   * @internal
				   */
				  removeComponentAsRefFrom: function(component, ref, owner) {
				    ("production" !== "development" ? invariant(
				      ReactOwner.isValidOwner(owner),
				      'removeComponentAsRefFrom(...): Only a ReactOwner can have refs. This ' +
				      'usually means that you\'re trying to remove a ref to a component that ' +
				      'doesn\'t have an owner (that is, was not created inside of another ' +
				      'component\'s `render` method). Try rendering this component inside of ' +
				      'a new top-level component which will hold the ref.'
				    ) : invariant(ReactOwner.isValidOwner(owner)));
				    // Check that `component` is still the current ref because we do not want to
				    // detach the ref if another component stole it.
				    if (owner.refs[ref] === component) {
				      owner.detachRef(ref);
				    }
				  },

				  /**
				   * A ReactComponent must mix this in to have refs.
				   *
				   * @lends {ReactOwner.prototype}
				   */
				  Mixin: {

				    construct: function() {
				      this.refs = emptyObject;
				    },

				    /**
				     * Lazily allocates the refs object and stores `component` as `ref`.
				     *
				     * @param {string} ref Reference name.
				     * @param {component} component Component to store as `ref`.
				     * @final
				     * @private
				     */
				    attachRef: function(ref, component) {
				      ("production" !== "development" ? invariant(
				        component.isOwnedBy(this),
				        'attachRef(%s, ...): Only a component\'s owner can store a ref to it.',
				        ref
				      ) : invariant(component.isOwnedBy(this)));
				      var refs = this.refs === emptyObject ? (this.refs = {}) : this.refs;
				      refs[ref] = component;
				    },

				    /**
				     * Detaches a reference name.
				     *
				     * @param {string} ref Name to dereference.
				     * @final
				     * @private
				     */
				    detachRef: function(ref) {
				      delete this.refs[ref];
				    }

				  }

				};

				module.exports = ReactOwner;

				},{"./emptyObject":108,"./invariant":126}],68:[function(_dereq_,module,exports){
				/**
				 * Copyright 2013-2014, Facebook, Inc.
				 * All rights reserved.
				 *
				 * This source code is licensed under the BSD-style license found in the
				 * LICENSE file in the root directory of this source tree. An additional grant
				 * of patent rights can be found in the PATENTS file in the same directory.
				 *
				 * @providesModule ReactPerf
				 * @typechecks static-only
				 */

				"use strict";

				/**
				 * ReactPerf is a general AOP system designed to measure performance. This
				 * module only has the hooks: see ReactDefaultPerf for the analysis tool.
				 */
				var ReactPerf = {
				  /**
				   * Boolean to enable/disable measurement. Set to false by default to prevent
				   * accidental logging and perf loss.
				   */
				  enableMeasure: false,

				  /**
				   * Holds onto the measure function in use. By default, don't measure
				   * anything, but we'll override this if we inject a measure function.
				   */
				  storedMeasure: _noMeasure,

				  /**
				   * Use this to wrap methods you want to measure. Zero overhead in production.
				   *
				   * @param {string} objName
				   * @param {string} fnName
				   * @param {function} func
				   * @return {function}
				   */
				  measure: function(objName, fnName, func) {
				    if ("production" !== "development") {
				      var measuredFunc = null;
				      var wrapper = function() {
				        if (ReactPerf.enableMeasure) {
				          if (!measuredFunc) {
				            measuredFunc = ReactPerf.storedMeasure(objName, fnName, func);
				          }
				          return measuredFunc.apply(this, arguments);
				        }
				        return func.apply(this, arguments);
				      };
				      wrapper.displayName = objName + '_' + fnName;
				      return wrapper;
				    }
				    return func;
				  },

				  injection: {
				    /**
				     * @param {function} measure
				     */
				    injectMeasure: function(measure) {
				      ReactPerf.storedMeasure = measure;
				    }
				  }
				};

				/**
				 * Simply passes through the measured function, without measuring it.
				 *
				 * @param {string} objName
				 * @param {string} fnName
				 * @param {function} func
				 * @return {function}
				 */
				function _noMeasure(objName, fnName, func) {
				  return func;
				}

				module.exports = ReactPerf;

				},{}],69:[function(_dereq_,module,exports){
				/**
				 * Copyright 2013-2014, Facebook, Inc.
				 * All rights reserved.
				 *
				 * This source code is licensed under the BSD-style license found in the
				 * LICENSE file in the root directory of this source tree. An additional grant
				 * of patent rights can be found in the PATENTS file in the same directory.
				 *
				 * @providesModule ReactPropTransferer
				 */

				"use strict";

				var assign = _dereq_("./Object.assign");
				var emptyFunction = _dereq_("./emptyFunction");
				var invariant = _dereq_("./invariant");
				var joinClasses = _dereq_("./joinClasses");
				var warning = _dereq_("./warning");

				var didWarn = false;

				/**
				 * Creates a transfer strategy that will merge prop values using the supplied
				 * `mergeStrategy`. If a prop was previously unset, this just sets it.
				 *
				 * @param {function} mergeStrategy
				 * @return {function}
				 */
				function createTransferStrategy(mergeStrategy) {
				  return function(props, key, value) {
				    if (!props.hasOwnProperty(key)) {
				      props[key] = value;
				    } else {
				      props[key] = mergeStrategy(props[key], value);
				    }
				  };
				}

				var transferStrategyMerge = createTransferStrategy(function(a, b) {
				  // `merge` overrides the first object's (`props[key]` above) keys using the
				  // second object's (`value`) keys. An object's style's existing `propA` would
				  // get overridden. Flip the order here.
				  return assign({}, b, a);
				});

				/**
				 * Transfer strategies dictate how props are transferred by `transferPropsTo`.
				 * NOTE: if you add any more exceptions to this list you should be sure to
				 * update `cloneWithProps()` accordingly.
				 */
				var TransferStrategies = {
				  /**
				   * Never transfer `children`.
				   */
				  children: emptyFunction,
				  /**
				   * Transfer the `className` prop by merging them.
				   */
				  className: createTransferStrategy(joinClasses),
				  /**
				   * Transfer the `style` prop (which is an object) by merging them.
				   */
				  style: transferStrategyMerge
				};

				/**
				 * Mutates the first argument by transferring the properties from the second
				 * argument.
				 *
				 * @param {object} props
				 * @param {object} newProps
				 * @return {object}
				 */
				function transferInto(props, newProps) {
				  for (var thisKey in newProps) {
				    if (!newProps.hasOwnProperty(thisKey)) {
				      continue;
				    }

				    var transferStrategy = TransferStrategies[thisKey];

				    if (transferStrategy && TransferStrategies.hasOwnProperty(thisKey)) {
				      transferStrategy(props, thisKey, newProps[thisKey]);
				    } else if (!props.hasOwnProperty(thisKey)) {
				      props[thisKey] = newProps[thisKey];
				    }
				  }
				  return props;
				}

				/**
				 * ReactPropTransferer are capable of transferring props to another component
				 * using a `transferPropsTo` method.
				 *
				 * @class ReactPropTransferer
				 */
				var ReactPropTransferer = {

				  TransferStrategies: TransferStrategies,

				  /**
				   * Merge two props objects using TransferStrategies.
				   *
				   * @param {object} oldProps original props (they take precedence)
				   * @param {object} newProps new props to merge in
				   * @return {object} a new object containing both sets of props merged.
				   */
				  mergeProps: function(oldProps, newProps) {
				    return transferInto(assign({}, oldProps), newProps);
				  },

				  /**
				   * @lends {ReactPropTransferer.prototype}
				   */
				  Mixin: {

				    /**
				     * Transfer props from this component to a target component.
				     *
				     * Props that do not have an explicit transfer strategy will be transferred
				     * only if the target component does not already have the prop set.
				     *
				     * This is usually used to pass down props to a returned root component.
				     *
				     * @param {ReactElement} element Component receiving the properties.
				     * @return {ReactElement} The supplied `component`.
				     * @final
				     * @protected
				     */
				    transferPropsTo: function(element) {
				      ("production" !== "development" ? invariant(
				        element._owner === this,
				        '%s: You can\'t call transferPropsTo() on a component that you ' +
				        'don\'t own, %s. This usually means you are calling ' +
				        'transferPropsTo() on a component passed in as props or children.',
				        this.constructor.displayName,
				        typeof element.type === 'string' ?
				        element.type :
				        element.type.displayName
				      ) : invariant(element._owner === this));

				      if ("production" !== "development") {
				        if (!didWarn) {
				          didWarn = true;
				          ("production" !== "development" ? warning(
				            false,
				            'transferPropsTo is deprecated. ' +
				            'See http://fb.me/react-transferpropsto for more information.'
				          ) : null);
				        }
				      }

				      // Because elements are immutable we have to merge into the existing
				      // props object rather than clone it.
				      transferInto(element.props, this.props);

				      return element;
				    }

				  }
				};

				module.exports = ReactPropTransferer;

				},{"./Object.assign":27,"./emptyFunction":107,"./invariant":126,"./joinClasses":131,"./warning":145}],70:[function(_dereq_,module,exports){
				/**
				 * Copyright 2013-2014, Facebook, Inc.
				 * All rights reserved.
				 *
				 * This source code is licensed under the BSD-style license found in the
				 * LICENSE file in the root directory of this source tree. An additional grant
				 * of patent rights can be found in the PATENTS file in the same directory.
				 *
				 * @providesModule ReactPropTypeLocationNames
				 */

				"use strict";

				var ReactPropTypeLocationNames = {};

				if ("production" !== "development") {
				  ReactPropTypeLocationNames = {
				    prop: 'prop',
				    context: 'context',
				    childContext: 'child context'
				  };
				}

				module.exports = ReactPropTypeLocationNames;

				},{}],71:[function(_dereq_,module,exports){
				/**
				 * Copyright 2013-2014, Facebook, Inc.
				 * All rights reserved.
				 *
				 * This source code is licensed under the BSD-style license found in the
				 * LICENSE file in the root directory of this source tree. An additional grant
				 * of patent rights can be found in the PATENTS file in the same directory.
				 *
				 * @providesModule ReactPropTypeLocations
				 */

				"use strict";

				var keyMirror = _dereq_("./keyMirror");

				var ReactPropTypeLocations = keyMirror({
				  prop: null,
				  context: null,
				  childContext: null
				});

				module.exports = ReactPropTypeLocations;

				},{"./keyMirror":132}],72:[function(_dereq_,module,exports){
				/**
				 * Copyright 2013-2014, Facebook, Inc.
				 * All rights reserved.
				 *
				 * This source code is licensed under the BSD-style license found in the
				 * LICENSE file in the root directory of this source tree. An additional grant
				 * of patent rights can be found in the PATENTS file in the same directory.
				 *
				 * @providesModule ReactPropTypes
				 */

				"use strict";

				var ReactElement = _dereq_("./ReactElement");
				var ReactPropTypeLocationNames = _dereq_("./ReactPropTypeLocationNames");

				var deprecated = _dereq_("./deprecated");
				var emptyFunction = _dereq_("./emptyFunction");

				/**
				 * Collection of methods that allow declaration and validation of props that are
				 * supplied to React components. Example usage:
				 *
				 *   var Props = require('ReactPropTypes');
				 *   var MyArticle = React.createClass({
				 *     propTypes: {
				 *       // An optional string prop named "description".
				 *       description: Props.string,
				 *
				 *       // A required enum prop named "category".
				 *       category: Props.oneOf(['News','Photos']).isRequired,
				 *
				 *       // A prop named "dialog" that requires an instance of Dialog.
				 *       dialog: Props.instanceOf(Dialog).isRequired
				 *     },
				 *     render: function() { ... }
				 *   });
				 *
				 * A more formal specification of how these methods are used:
				 *
				 *   type := array|bool|func|object|number|string|oneOf([...])|instanceOf(...)
				 *   decl := ReactPropTypes.{type}(.isRequired)?
				 *
				 * Each and every declaration produces a function with the same signature. This
				 * allows the creation of custom validation functions. For example:
				 *
				 *  var MyLink = React.createClass({
				 *    propTypes: {
				 *      // An optional string or URI prop named "href".
				 *      href: function(props, propName, componentName) {
				 *        var propValue = props[propName];
				 *        if (propValue != null && typeof propValue !== 'string' &&
				 *            !(propValue instanceof URI)) {
				 *          return new Error(
				 *            'Expected a string or an URI for ' + propName + ' in ' +
				 *            componentName
				 *          );
				 *        }
				 *      }
				 *    },
				 *    render: function() {...}
				 *  });
				 *
				 * @internal
				 */

				var ANONYMOUS = '<<anonymous>>';

				var elementTypeChecker = createElementTypeChecker();
				var nodeTypeChecker = createNodeChecker();

				var ReactPropTypes = {
				  array: createPrimitiveTypeChecker('array'),
				  bool: createPrimitiveTypeChecker('boolean'),
				  func: createPrimitiveTypeChecker('function'),
				  number: createPrimitiveTypeChecker('number'),
				  object: createPrimitiveTypeChecker('object'),
				  string: createPrimitiveTypeChecker('string'),

				  any: createAnyTypeChecker(),
				  arrayOf: createArrayOfTypeChecker,
				  element: elementTypeChecker,
				  instanceOf: createInstanceTypeChecker,
				  node: nodeTypeChecker,
				  objectOf: createObjectOfTypeChecker,
				  oneOf: createEnumTypeChecker,
				  oneOfType: createUnionTypeChecker,
				  shape: createShapeTypeChecker,

				  component: deprecated(
				    'React.PropTypes',
				    'component',
				    'element',
				    this,
				    elementTypeChecker
				  ),
				  renderable: deprecated(
				    'React.PropTypes',
				    'renderable',
				    'node',
				    this,
				    nodeTypeChecker
				  )
				};

				function createChainableTypeChecker(validate) {
				  function checkType(isRequired, props, propName, componentName, location) {
				    componentName = componentName || ANONYMOUS;
				    if (props[propName] == null) {
				      var locationName = ReactPropTypeLocationNames[location];
				      if (isRequired) {
				        return new Error(
				          ("Required " + locationName + " `" + propName + "` was not specified in ")+
				          ("`" + componentName + "`.")
				        );
				      }
				    } else {
				      return validate(props, propName, componentName, location);
				    }
				  }

				  var chainedCheckType = checkType.bind(null, false);
				  chainedCheckType.isRequired = checkType.bind(null, true);

				  return chainedCheckType;
				}

				function createPrimitiveTypeChecker(expectedType) {
				  function validate(props, propName, componentName, location) {
				    var propValue = props[propName];
				    var propType = getPropType(propValue);
				    if (propType !== expectedType) {
				      var locationName = ReactPropTypeLocationNames[location];
				      // `propValue` being instance of, say, date/regexp, pass the 'object'
				      // check, but we can offer a more precise error message here rather than
				      // 'of type `object`'.
				      var preciseType = getPreciseType(propValue);

				      return new Error(
				        ("Invalid " + locationName + " `" + propName + "` of type `" + preciseType + "` ") +
				        ("supplied to `" + componentName + "`, expected `" + expectedType + "`.")
				      );
				    }
				  }
				  return createChainableTypeChecker(validate);
				}

				function createAnyTypeChecker() {
				  return createChainableTypeChecker(emptyFunction.thatReturns());
				}

				function createArrayOfTypeChecker(typeChecker) {
				  function validate(props, propName, componentName, location) {
				    var propValue = props[propName];
				    if (!Array.isArray(propValue)) {
				      var locationName = ReactPropTypeLocationNames[location];
				      var propType = getPropType(propValue);
				      return new Error(
				        ("Invalid " + locationName + " `" + propName + "` of type ") +
				        ("`" + propType + "` supplied to `" + componentName + "`, expected an array.")
				      );
				    }
				    for (var i = 0; i < propValue.length; i++) {
				      var error = typeChecker(propValue, i, componentName, location);
				      if (error instanceof Error) {
				        return error;
				      }
				    }
				  }
				  return createChainableTypeChecker(validate);
				}

				function createElementTypeChecker() {
				  function validate(props, propName, componentName, location) {
				    if (!ReactElement.isValidElement(props[propName])) {
				      var locationName = ReactPropTypeLocationNames[location];
				      return new Error(
				        ("Invalid " + locationName + " `" + propName + "` supplied to ") +
				        ("`" + componentName + "`, expected a ReactElement.")
				      );
				    }
				  }
				  return createChainableTypeChecker(validate);
				}

				function createInstanceTypeChecker(expectedClass) {
				  function validate(props, propName, componentName, location) {
				    if (!(props[propName] instanceof expectedClass)) {
				      var locationName = ReactPropTypeLocationNames[location];
				      var expectedClassName = expectedClass.name || ANONYMOUS;
				      return new Error(
				        ("Invalid " + locationName + " `" + propName + "` supplied to ") +
				        ("`" + componentName + "`, expected instance of `" + expectedClassName + "`.")
				      );
				    }
				  }
				  return createChainableTypeChecker(validate);
				}

				function createEnumTypeChecker(expectedValues) {
				  function validate(props, propName, componentName, location) {
				    var propValue = props[propName];
				    for (var i = 0; i < expectedValues.length; i++) {
				      if (propValue === expectedValues[i]) {
				        return;
				      }
				    }

				    var locationName = ReactPropTypeLocationNames[location];
				    var valuesString = JSON.stringify(expectedValues);
				    return new Error(
				      ("Invalid " + locationName + " `" + propName + "` of value `" + propValue + "` ") +
				      ("supplied to `" + componentName + "`, expected one of " + valuesString + ".")
				    );
				  }
				  return createChainableTypeChecker(validate);
				}

				function createObjectOfTypeChecker(typeChecker) {
				  function validate(props, propName, componentName, location) {
				    var propValue = props[propName];
				    var propType = getPropType(propValue);
				    if (propType !== 'object') {
				      var locationName = ReactPropTypeLocationNames[location];
				      return new Error(
				        ("Invalid " + locationName + " `" + propName + "` of type ") +
				        ("`" + propType + "` supplied to `" + componentName + "`, expected an object.")
				      );
				    }
				    for (var key in propValue) {
				      if (propValue.hasOwnProperty(key)) {
				        var error = typeChecker(propValue, key, componentName, location);
				        if (error instanceof Error) {
				          return error;
				        }
				      }
				    }
				  }
				  return createChainableTypeChecker(validate);
				}

				function createUnionTypeChecker(arrayOfTypeCheckers) {
				  function validate(props, propName, componentName, location) {
				    for (var i = 0; i < arrayOfTypeCheckers.length; i++) {
				      var checker = arrayOfTypeCheckers[i];
				      if (checker(props, propName, componentName, location) == null) {
				        return;
				      }
				    }

				    var locationName = ReactPropTypeLocationNames[location];
				    return new Error(
				      ("Invalid " + locationName + " `" + propName + "` supplied to ") +
				      ("`" + componentName + "`.")
				    );
				  }
				  return createChainableTypeChecker(validate);
				}

				function createNodeChecker() {
				  function validate(props, propName, componentName, location) {
				    if (!isNode(props[propName])) {
				      var locationName = ReactPropTypeLocationNames[location];
				      return new Error(
				        ("Invalid " + locationName + " `" + propName + "` supplied to ") +
				        ("`" + componentName + "`, expected a ReactNode.")
				      );
				    }
				  }
				  return createChainableTypeChecker(validate);
				}

				function createShapeTypeChecker(shapeTypes) {
				  function validate(props, propName, componentName, location) {
				    var propValue = props[propName];
				    var propType = getPropType(propValue);
				    if (propType !== 'object') {
				      var locationName = ReactPropTypeLocationNames[location];
				      return new Error(
				        ("Invalid " + locationName + " `" + propName + "` of type `" + propType + "` ") +
				        ("supplied to `" + componentName + "`, expected `object`.")
				      );
				    }
				    for (var key in shapeTypes) {
				      var checker = shapeTypes[key];
				      if (!checker) {
				        continue;
				      }
				      var error = checker(propValue, key, componentName, location);
				      if (error) {
				        return error;
				      }
				    }
				  }
				  return createChainableTypeChecker(validate, 'expected `object`');
				}

				function isNode(propValue) {
				  switch(typeof propValue) {
				    case 'number':
				    case 'string':
				      return true;
				    case 'boolean':
				      return !propValue;
				    case 'object':
				      if (Array.isArray(propValue)) {
				        return propValue.every(isNode);
				      }
				      if (ReactElement.isValidElement(propValue)) {
				        return true;
				      }
				      for (var k in propValue) {
				        if (!isNode(propValue[k])) {
				          return false;
				        }
				      }
				      return true;
				    default:
				      return false;
				  }
				}

				// Equivalent of `typeof` but with special handling for array and regexp.
				function getPropType(propValue) {
				  var propType = typeof propValue;
				  if (Array.isArray(propValue)) {
				    return 'array';
				  }
				  if (propValue instanceof RegExp) {
				    // Old webkits (at least until Android 4.0) return 'function' rather than
				    // 'object' for typeof a RegExp. We'll normalize this here so that /bla/
				    // passes PropTypes.object.
				    return 'object';
				  }
				  return propType;
				}

				// This handles more types than `getPropType`. Only used for error messages.
				// See `createPrimitiveTypeChecker`.
				function getPreciseType(propValue) {
				  var propType = getPropType(propValue);
				  if (propType === 'object') {
				    if (propValue instanceof Date) {
				      return 'date';
				    } else if (propValue instanceof RegExp) {
				      return 'regexp';
				    }
				  }
				  return propType;
				}

				module.exports = ReactPropTypes;

				},{"./ReactElement":52,"./ReactPropTypeLocationNames":70,"./deprecated":106,"./emptyFunction":107}],73:[function(_dereq_,module,exports){
				/**
				 * Copyright 2013-2014, Facebook, Inc.
				 * All rights reserved.
				 *
				 * This source code is licensed under the BSD-style license found in the
				 * LICENSE file in the root directory of this source tree. An additional grant
				 * of patent rights can be found in the PATENTS file in the same directory.
				 *
				 * @providesModule ReactPutListenerQueue
				 */

				"use strict";

				var PooledClass = _dereq_("./PooledClass");
				var ReactBrowserEventEmitter = _dereq_("./ReactBrowserEventEmitter");

				var assign = _dereq_("./Object.assign");

				function ReactPutListenerQueue() {
				  this.listenersToPut = [];
				}

				assign(ReactPutListenerQueue.prototype, {
				  enqueuePutListener: function(rootNodeID, propKey, propValue) {
				    this.listenersToPut.push({
				      rootNodeID: rootNodeID,
				      propKey: propKey,
				      propValue: propValue
				    });
				  },

				  putListeners: function() {
				    for (var i = 0; i < this.listenersToPut.length; i++) {
				      var listenerToPut = this.listenersToPut[i];
				      ReactBrowserEventEmitter.putListener(
				        listenerToPut.rootNodeID,
				        listenerToPut.propKey,
				        listenerToPut.propValue
				      );
				    }
				  },

				  reset: function() {
				    this.listenersToPut.length = 0;
				  },

				  destructor: function() {
				    this.reset();
				  }
				});

				PooledClass.addPoolingTo(ReactPutListenerQueue);

				module.exports = ReactPutListenerQueue;

				},{"./Object.assign":27,"./PooledClass":28,"./ReactBrowserEventEmitter":30}],74:[function(_dereq_,module,exports){
				/**
				 * Copyright 2013-2014, Facebook, Inc.
				 * All rights reserved.
				 *
				 * This source code is licensed under the BSD-style license found in the
				 * LICENSE file in the root directory of this source tree. An additional grant
				 * of patent rights can be found in the PATENTS file in the same directory.
				 *
				 * @providesModule ReactReconcileTransaction
				 * @typechecks static-only
				 */

				"use strict";

				var CallbackQueue = _dereq_("./CallbackQueue");
				var PooledClass = _dereq_("./PooledClass");
				var ReactBrowserEventEmitter = _dereq_("./ReactBrowserEventEmitter");
				var ReactInputSelection = _dereq_("./ReactInputSelection");
				var ReactPutListenerQueue = _dereq_("./ReactPutListenerQueue");
				var Transaction = _dereq_("./Transaction");

				var assign = _dereq_("./Object.assign");

				/**
				 * Ensures that, when possible, the selection range (currently selected text
				 * input) is not disturbed by performing the transaction.
				 */
				var SELECTION_RESTORATION = {
				  /**
				   * @return {Selection} Selection information.
				   */
				  initialize: ReactInputSelection.getSelectionInformation,
				  /**
				   * @param {Selection} sel Selection information returned from `initialize`.
				   */
				  close: ReactInputSelection.restoreSelection
				};

				/**
				 * Suppresses events (blur/focus) that could be inadvertently dispatched due to
				 * high level DOM manipulations (like temporarily removing a text input from the
				 * DOM).
				 */
				var EVENT_SUPPRESSION = {
				  /**
				   * @return {boolean} The enabled status of `ReactBrowserEventEmitter` before
				   * the reconciliation.
				   */
				  initialize: function() {
				    var currentlyEnabled = ReactBrowserEventEmitter.isEnabled();
				    ReactBrowserEventEmitter.setEnabled(false);
				    return currentlyEnabled;
				  },

				  /**
				   * @param {boolean} previouslyEnabled Enabled status of
				   *   `ReactBrowserEventEmitter` before the reconciliation occured. `close`
				   *   restores the previous value.
				   */
				  close: function(previouslyEnabled) {
				    ReactBrowserEventEmitter.setEnabled(previouslyEnabled);
				  }
				};

				/**
				 * Provides a queue for collecting `componentDidMount` and
				 * `componentDidUpdate` callbacks during the the transaction.
				 */
				var ON_DOM_READY_QUEUEING = {
				  /**
				   * Initializes the internal `onDOMReady` queue.
				   */
				  initialize: function() {
				    this.reactMountReady.reset();
				  },

				  /**
				   * After DOM is flushed, invoke all registered `onDOMReady` callbacks.
				   */
				  close: function() {
				    this.reactMountReady.notifyAll();
				  }
				};

				var PUT_LISTENER_QUEUEING = {
				  initialize: function() {
				    this.putListenerQueue.reset();
				  },

				  close: function() {
				    this.putListenerQueue.putListeners();
				  }
				};

				/**
				 * Executed within the scope of the `Transaction` instance. Consider these as
				 * being member methods, but with an implied ordering while being isolated from
				 * each other.
				 */
				var TRANSACTION_WRAPPERS = [
				  PUT_LISTENER_QUEUEING,
				  SELECTION_RESTORATION,
				  EVENT_SUPPRESSION,
				  ON_DOM_READY_QUEUEING
				];

				/**
				 * Currently:
				 * - The order that these are listed in the transaction is critical:
				 * - Suppresses events.
				 * - Restores selection range.
				 *
				 * Future:
				 * - Restore document/overflow scroll positions that were unintentionally
				 *   modified via DOM insertions above the top viewport boundary.
				 * - Implement/integrate with customized constraint based layout system and keep
				 *   track of which dimensions must be remeasured.
				 *
				 * @class ReactReconcileTransaction
				 */
				function ReactReconcileTransaction() {
				  this.reinitializeTransaction();
				  // Only server-side rendering really needs this option (see
				  // `ReactServerRendering`), but server-side uses
				  // `ReactServerRenderingTransaction` instead. This option is here so that it's
				  // accessible and defaults to false when `ReactDOMComponent` and
				  // `ReactTextComponent` checks it in `mountComponent`.`
				  this.renderToStaticMarkup = false;
				  this.reactMountReady = CallbackQueue.getPooled(null);
				  this.putListenerQueue = ReactPutListenerQueue.getPooled();
				}

				var Mixin = {
				  /**
				   * @see Transaction
				   * @abstract
				   * @final
				   * @return {array<object>} List of operation wrap proceedures.
				   *   TODO: convert to array<TransactionWrapper>
				   */
				  getTransactionWrappers: function() {
				    return TRANSACTION_WRAPPERS;
				  },

				  /**
				   * @return {object} The queue to collect `onDOMReady` callbacks with.
				   */
				  getReactMountReady: function() {
				    return this.reactMountReady;
				  },

				  getPutListenerQueue: function() {
				    return this.putListenerQueue;
				  },

				  /**
				   * `PooledClass` looks for this, and will invoke this before allowing this
				   * instance to be resused.
				   */
				  destructor: function() {
				    CallbackQueue.release(this.reactMountReady);
				    this.reactMountReady = null;

				    ReactPutListenerQueue.release(this.putListenerQueue);
				    this.putListenerQueue = null;
				  }
				};


				assign(ReactReconcileTransaction.prototype, Transaction.Mixin, Mixin);

				PooledClass.addPoolingTo(ReactReconcileTransaction);

				module.exports = ReactReconcileTransaction;

				},{"./CallbackQueue":6,"./Object.assign":27,"./PooledClass":28,"./ReactBrowserEventEmitter":30,"./ReactInputSelection":59,"./ReactPutListenerQueue":73,"./Transaction":95}],75:[function(_dereq_,module,exports){
				/**
				 * Copyright 2013-2014, Facebook, Inc.
				 * All rights reserved.
				 *
				 * This source code is licensed under the BSD-style license found in the
				 * LICENSE file in the root directory of this source tree. An additional grant
				 * of patent rights can be found in the PATENTS file in the same directory.
				 *
				 * @providesModule ReactRootIndex
				 * @typechecks
				 */

				"use strict";

				var ReactRootIndexInjection = {
				  /**
				   * @param {function} _createReactRootIndex
				   */
				  injectCreateReactRootIndex: function(_createReactRootIndex) {
				    ReactRootIndex.createReactRootIndex = _createReactRootIndex;
				  }
				};

				var ReactRootIndex = {
				  createReactRootIndex: null,
				  injection: ReactRootIndexInjection
				};

				module.exports = ReactRootIndex;

				},{}],76:[function(_dereq_,module,exports){
				/**
				 * Copyright 2013-2014, Facebook, Inc.
				 * All rights reserved.
				 *
				 * This source code is licensed under the BSD-style license found in the
				 * LICENSE file in the root directory of this source tree. An additional grant
				 * of patent rights can be found in the PATENTS file in the same directory.
				 *
				 * @typechecks static-only
				 * @providesModule ReactServerRendering
				 */
				"use strict";

				var ReactElement = _dereq_("./ReactElement");
				var ReactInstanceHandles = _dereq_("./ReactInstanceHandles");
				var ReactMarkupChecksum = _dereq_("./ReactMarkupChecksum");
				var ReactServerRenderingTransaction =
				  _dereq_("./ReactServerRenderingTransaction");

				var instantiateReactComponent = _dereq_("./instantiateReactComponent");
				var invariant = _dereq_("./invariant");

				/**
				 * @param {ReactElement} element
				 * @return {string} the HTML markup
				 */
				function renderToString(element) {
				  ("production" !== "development" ? invariant(
				    ReactElement.isValidElement(element),
				    'renderToString(): You must pass a valid ReactElement.'
				  ) : invariant(ReactElement.isValidElement(element)));

				  var transaction;
				  try {
				    var id = ReactInstanceHandles.createReactRootID();
				    transaction = ReactServerRenderingTransaction.getPooled(false);

				    return transaction.perform(function() {
				      var componentInstance = instantiateReactComponent(element, null);
				      var markup = componentInstance.mountComponent(id, transaction, 0);
				      return ReactMarkupChecksum.addChecksumToMarkup(markup);
				    }, null);
				  } finally {
				    ReactServerRenderingTransaction.release(transaction);
				  }
				}

				/**
				 * @param {ReactElement} element
				 * @return {string} the HTML markup, without the extra React ID and checksum
				 * (for generating static pages)
				 */
				function renderToStaticMarkup(element) {
				  ("production" !== "development" ? invariant(
				    ReactElement.isValidElement(element),
				    'renderToStaticMarkup(): You must pass a valid ReactElement.'
				  ) : invariant(ReactElement.isValidElement(element)));

				  var transaction;
				  try {
				    var id = ReactInstanceHandles.createReactRootID();
				    transaction = ReactServerRenderingTransaction.getPooled(true);

				    return transaction.perform(function() {
				      var componentInstance = instantiateReactComponent(element, null);
				      return componentInstance.mountComponent(id, transaction, 0);
				    }, null);
				  } finally {
				    ReactServerRenderingTransaction.release(transaction);
				  }
				}

				module.exports = {
				  renderToString: renderToString,
				  renderToStaticMarkup: renderToStaticMarkup
				};

				},{"./ReactElement":52,"./ReactInstanceHandles":60,"./ReactMarkupChecksum":62,"./ReactServerRenderingTransaction":77,"./instantiateReactComponent":125,"./invariant":126}],77:[function(_dereq_,module,exports){
				/**
				 * Copyright 2014, Facebook, Inc.
				 * All rights reserved.
				 *
				 * This source code is licensed under the BSD-style license found in the
				 * LICENSE file in the root directory of this source tree. An additional grant
				 * of patent rights can be found in the PATENTS file in the same directory.
				 *
				 * @providesModule ReactServerRenderingTransaction
				 * @typechecks
				 */

				"use strict";

				var PooledClass = _dereq_("./PooledClass");
				var CallbackQueue = _dereq_("./CallbackQueue");
				var ReactPutListenerQueue = _dereq_("./ReactPutListenerQueue");
				var Transaction = _dereq_("./Transaction");

				var assign = _dereq_("./Object.assign");
				var emptyFunction = _dereq_("./emptyFunction");

				/**
				 * Provides a `CallbackQueue` queue for collecting `onDOMReady` callbacks
				 * during the performing of the transaction.
				 */
				var ON_DOM_READY_QUEUEING = {
				  /**
				   * Initializes the internal `onDOMReady` queue.
				   */
				  initialize: function() {
				    this.reactMountReady.reset();
				  },

				  close: emptyFunction
				};

				var PUT_LISTENER_QUEUEING = {
				  initialize: function() {
				    this.putListenerQueue.reset();
				  },

				  close: emptyFunction
				};

				/**
				 * Executed within the scope of the `Transaction` instance. Consider these as
				 * being member methods, but with an implied ordering while being isolated from
				 * each other.
				 */
				var TRANSACTION_WRAPPERS = [
				  PUT_LISTENER_QUEUEING,
				  ON_DOM_READY_QUEUEING
				];

				/**
				 * @class ReactServerRenderingTransaction
				 * @param {boolean} renderToStaticMarkup
				 */
				function ReactServerRenderingTransaction(renderToStaticMarkup) {
				  this.reinitializeTransaction();
				  this.renderToStaticMarkup = renderToStaticMarkup;
				  this.reactMountReady = CallbackQueue.getPooled(null);
				  this.putListenerQueue = ReactPutListenerQueue.getPooled();
				}

				var Mixin = {
				  /**
				   * @see Transaction
				   * @abstract
				   * @final
				   * @return {array} Empty list of operation wrap proceedures.
				   */
				  getTransactionWrappers: function() {
				    return TRANSACTION_WRAPPERS;
				  },

				  /**
				   * @return {object} The queue to collect `onDOMReady` callbacks with.
				   */
				  getReactMountReady: function() {
				    return this.reactMountReady;
				  },

				  getPutListenerQueue: function() {
				    return this.putListenerQueue;
				  },

				  /**
				   * `PooledClass` looks for this, and will invoke this before allowing this
				   * instance to be resused.
				   */
				  destructor: function() {
				    CallbackQueue.release(this.reactMountReady);
				    this.reactMountReady = null;

				    ReactPutListenerQueue.release(this.putListenerQueue);
				    this.putListenerQueue = null;
				  }
				};


				assign(
				  ReactServerRenderingTransaction.prototype,
				  Transaction.Mixin,
				  Mixin
				);

				PooledClass.addPoolingTo(ReactServerRenderingTransaction);

				module.exports = ReactServerRenderingTransaction;

				},{"./CallbackQueue":6,"./Object.assign":27,"./PooledClass":28,"./ReactPutListenerQueue":73,"./Transaction":95,"./emptyFunction":107}],78:[function(_dereq_,module,exports){
				/**
				 * Copyright 2013-2014, Facebook, Inc.
				 * All rights reserved.
				 *
				 * This source code is licensed under the BSD-style license found in the
				 * LICENSE file in the root directory of this source tree. An additional grant
				 * of patent rights can be found in the PATENTS file in the same directory.
				 *
				 * @providesModule ReactTextComponent
				 * @typechecks static-only
				 */

				"use strict";

				var DOMPropertyOperations = _dereq_("./DOMPropertyOperations");
				var ReactComponent = _dereq_("./ReactComponent");
				var ReactElement = _dereq_("./ReactElement");

				var assign = _dereq_("./Object.assign");
				var escapeTextForBrowser = _dereq_("./escapeTextForBrowser");

				/**
				 * Text nodes violate a couple assumptions that React makes about components:
				 *
				 *  - When mounting text into the DOM, adjacent text nodes are merged.
				 *  - Text nodes cannot be assigned a React root ID.
				 *
				 * This component is used to wrap strings in elements so that they can undergo
				 * the same reconciliation that is applied to elements.
				 *
				 * TODO: Investigate representing React components in the DOM with text nodes.
				 *
				 * @class ReactTextComponent
				 * @extends ReactComponent
				 * @internal
				 */
				var ReactTextComponent = function(props) {
				  // This constructor and it's argument is currently used by mocks.
				};

				assign(ReactTextComponent.prototype, ReactComponent.Mixin, {

				  /**
				   * Creates the markup for this text node. This node is not intended to have
				   * any features besides containing text content.
				   *
				   * @param {string} rootID DOM ID of the root node.
				   * @param {ReactReconcileTransaction|ReactServerRenderingTransaction} transaction
				   * @param {number} mountDepth number of components in the owner hierarchy
				   * @return {string} Markup for this text node.
				   * @internal
				   */
				  mountComponent: function(rootID, transaction, mountDepth) {
				    ReactComponent.Mixin.mountComponent.call(
				      this,
				      rootID,
				      transaction,
				      mountDepth
				    );

				    var escapedText = escapeTextForBrowser(this.props);

				    if (transaction.renderToStaticMarkup) {
				      // Normally we'd wrap this in a `span` for the reasons stated above, but
				      // since this is a situation where React won't take over (static pages),
				      // we can simply return the text as it is.
				      return escapedText;
				    }

				    return (
				      '<span ' + DOMPropertyOperations.createMarkupForID(rootID) + '>' +
				        escapedText +
				      '</span>'
				    );
				  },

				  /**
				   * Updates this component by updating the text content.
				   *
				   * @param {object} nextComponent Contains the next text content.
				   * @param {ReactReconcileTransaction} transaction
				   * @internal
				   */
				  receiveComponent: function(nextComponent, transaction) {
				    var nextProps = nextComponent.props;
				    if (nextProps !== this.props) {
				      this.props = nextProps;
				      ReactComponent.BackendIDOperations.updateTextContentByID(
				        this._rootNodeID,
				        nextProps
				      );
				    }
				  }

				});

				var ReactTextComponentFactory = function(text) {
				  // Bypass validation and configuration
				  return new ReactElement(ReactTextComponent, null, null, null, null, text);
				};

				ReactTextComponentFactory.type = ReactTextComponent;

				module.exports = ReactTextComponentFactory;

				},{"./DOMPropertyOperations":12,"./Object.assign":27,"./ReactComponent":32,"./ReactElement":52,"./escapeTextForBrowser":109}],79:[function(_dereq_,module,exports){
				/**
				 * Copyright 2013-2014, Facebook, Inc.
				 * All rights reserved.
				 *
				 * This source code is licensed under the BSD-style license found in the
				 * LICENSE file in the root directory of this source tree. An additional grant
				 * of patent rights can be found in the PATENTS file in the same directory.
				 *
				 * @providesModule ReactUpdates
				 */

				"use strict";

				var CallbackQueue = _dereq_("./CallbackQueue");
				var PooledClass = _dereq_("./PooledClass");
				var ReactCurrentOwner = _dereq_("./ReactCurrentOwner");
				var ReactPerf = _dereq_("./ReactPerf");
				var Transaction = _dereq_("./Transaction");

				var assign = _dereq_("./Object.assign");
				var invariant = _dereq_("./invariant");
				var warning = _dereq_("./warning");

				var dirtyComponents = [];
				var asapCallbackQueue = CallbackQueue.getPooled();
				var asapEnqueued = false;

				var batchingStrategy = null;

				function ensureInjected() {
				  ("production" !== "development" ? invariant(
				    ReactUpdates.ReactReconcileTransaction && batchingStrategy,
				    'ReactUpdates: must inject a reconcile transaction class and batching ' +
				    'strategy'
				  ) : invariant(ReactUpdates.ReactReconcileTransaction && batchingStrategy));
				}

				var NESTED_UPDATES = {
				  initialize: function() {
				    this.dirtyComponentsLength = dirtyComponents.length;
				  },
				  close: function() {
				    if (this.dirtyComponentsLength !== dirtyComponents.length) {
				      // Additional updates were enqueued by componentDidUpdate handlers or
				      // similar; before our own UPDATE_QUEUEING wrapper closes, we want to run
				      // these new updates so that if A's componentDidUpdate calls setState on
				      // B, B will update before the callback A's updater provided when calling
				      // setState.
				      dirtyComponents.splice(0, this.dirtyComponentsLength);
				      flushBatchedUpdates();
				    } else {
				      dirtyComponents.length = 0;
				    }
				  }
				};

				var UPDATE_QUEUEING = {
				  initialize: function() {
				    this.callbackQueue.reset();
				  },
				  close: function() {
				    this.callbackQueue.notifyAll();
				  }
				};

				var TRANSACTION_WRAPPERS = [NESTED_UPDATES, UPDATE_QUEUEING];

				function ReactUpdatesFlushTransaction() {
				  this.reinitializeTransaction();
				  this.dirtyComponentsLength = null;
				  this.callbackQueue = CallbackQueue.getPooled();
				  this.reconcileTransaction =
				    ReactUpdates.ReactReconcileTransaction.getPooled();
				}

				assign(
				  ReactUpdatesFlushTransaction.prototype,
				  Transaction.Mixin, {
				  getTransactionWrappers: function() {
				    return TRANSACTION_WRAPPERS;
				  },

				  destructor: function() {
				    this.dirtyComponentsLength = null;
				    CallbackQueue.release(this.callbackQueue);
				    this.callbackQueue = null;
				    ReactUpdates.ReactReconcileTransaction.release(this.reconcileTransaction);
				    this.reconcileTransaction = null;
				  },

				  perform: function(method, scope, a) {
				    // Essentially calls `this.reconcileTransaction.perform(method, scope, a)`
				    // with this transaction's wrappers around it.
				    return Transaction.Mixin.perform.call(
				      this,
				      this.reconcileTransaction.perform,
				      this.reconcileTransaction,
				      method,
				      scope,
				      a
				    );
				  }
				});

				PooledClass.addPoolingTo(ReactUpdatesFlushTransaction);

				function batchedUpdates(callback, a, b) {
				  ensureInjected();
				  batchingStrategy.batchedUpdates(callback, a, b);
				}

				/**
				 * Array comparator for ReactComponents by owner depth
				 *
				 * @param {ReactComponent} c1 first component you're comparing
				 * @param {ReactComponent} c2 second component you're comparing
				 * @return {number} Return value usable by Array.prototype.sort().
				 */
				function mountDepthComparator(c1, c2) {
				  return c1._mountDepth - c2._mountDepth;
				}

				function runBatchedUpdates(transaction) {
				  var len = transaction.dirtyComponentsLength;
				  ("production" !== "development" ? invariant(
				    len === dirtyComponents.length,
				    'Expected flush transaction\'s stored dirty-components length (%s) to ' +
				    'match dirty-components array length (%s).',
				    len,
				    dirtyComponents.length
				  ) : invariant(len === dirtyComponents.length));

				  // Since reconciling a component higher in the owner hierarchy usually (not
				  // always -- see shouldComponentUpdate()) will reconcile children, reconcile
				  // them before their children by sorting the array.
				  dirtyComponents.sort(mountDepthComparator);

				  for (var i = 0; i < len; i++) {
				    // If a component is unmounted before pending changes apply, ignore them
				    // TODO: Queue unmounts in the same list to avoid this happening at all
				    var component = dirtyComponents[i];
				    if (component.isMounted()) {
				      // If performUpdateIfNecessary happens to enqueue any new updates, we
				      // shouldn't execute the callbacks until the next render happens, so
				      // stash the callbacks first
				      var callbacks = component._pendingCallbacks;
				      component._pendingCallbacks = null;
				      component.performUpdateIfNecessary(transaction.reconcileTransaction);

				      if (callbacks) {
				        for (var j = 0; j < callbacks.length; j++) {
				          transaction.callbackQueue.enqueue(
				            callbacks[j],
				            component
				          );
				        }
				      }
				    }
				  }
				}

				var flushBatchedUpdates = ReactPerf.measure(
				  'ReactUpdates',
				  'flushBatchedUpdates',
				  function() {
				    // ReactUpdatesFlushTransaction's wrappers will clear the dirtyComponents
				    // array and perform any updates enqueued by mount-ready handlers (i.e.,
				    // componentDidUpdate) but we need to check here too in order to catch
				    // updates enqueued by setState callbacks and asap calls.
				    while (dirtyComponents.length || asapEnqueued) {
				      if (dirtyComponents.length) {
				        var transaction = ReactUpdatesFlushTransaction.getPooled();
				        transaction.perform(runBatchedUpdates, null, transaction);
				        ReactUpdatesFlushTransaction.release(transaction);
				      }

				      if (asapEnqueued) {
				        asapEnqueued = false;
				        var queue = asapCallbackQueue;
				        asapCallbackQueue = CallbackQueue.getPooled();
				        queue.notifyAll();
				        CallbackQueue.release(queue);
				      }
				    }
				  }
				);

				/**
				 * Mark a component as needing a rerender, adding an optional callback to a
				 * list of functions which will be executed once the rerender occurs.
				 */
				function enqueueUpdate(component, callback) {
				  ("production" !== "development" ? invariant(
				    !callback || typeof callback === "function",
				    'enqueueUpdate(...): You called `setProps`, `replaceProps`, ' +
				    '`setState`, `replaceState`, or `forceUpdate` with a callback that ' +
				    'isn\'t callable.'
				  ) : invariant(!callback || typeof callback === "function"));
				  ensureInjected();

				  // Various parts of our code (such as ReactCompositeComponent's
				  // _renderValidatedComponent) assume that calls to render aren't nested;
				  // verify that that's the case. (This is called by each top-level update
				  // function, like setProps, setState, forceUpdate, etc.; creation and
				  // destruction of top-level components is guarded in ReactMount.)
				  ("production" !== "development" ? warning(
				    ReactCurrentOwner.current == null,
				    'enqueueUpdate(): Render methods should be a pure function of props ' +
				    'and state; triggering nested component updates from render is not ' +
				    'allowed. If necessary, trigger nested updates in ' +
				    'componentDidUpdate.'
				  ) : null);

				  if (!batchingStrategy.isBatchingUpdates) {
				    batchingStrategy.batchedUpdates(enqueueUpdate, component, callback);
				    return;
				  }

				  dirtyComponents.push(component);

				  if (callback) {
				    if (component._pendingCallbacks) {
				      component._pendingCallbacks.push(callback);
				    } else {
				      component._pendingCallbacks = [callback];
				    }
				  }
				}

				/**
				 * Enqueue a callback to be run at the end of the current batching cycle. Throws
				 * if no updates are currently being performed.
				 */
				function asap(callback, context) {
				  ("production" !== "development" ? invariant(
				    batchingStrategy.isBatchingUpdates,
				    'ReactUpdates.asap: Can\'t enqueue an asap callback in a context where' +
				    'updates are not being batched.'
				  ) : invariant(batchingStrategy.isBatchingUpdates));
				  asapCallbackQueue.enqueue(callback, context);
				  asapEnqueued = true;
				}

				var ReactUpdatesInjection = {
				  injectReconcileTransaction: function(ReconcileTransaction) {
				    ("production" !== "development" ? invariant(
				      ReconcileTransaction,
				      'ReactUpdates: must provide a reconcile transaction class'
				    ) : invariant(ReconcileTransaction));
				    ReactUpdates.ReactReconcileTransaction = ReconcileTransaction;
				  },

				  injectBatchingStrategy: function(_batchingStrategy) {
				    ("production" !== "development" ? invariant(
				      _batchingStrategy,
				      'ReactUpdates: must provide a batching strategy'
				    ) : invariant(_batchingStrategy));
				    ("production" !== "development" ? invariant(
				      typeof _batchingStrategy.batchedUpdates === 'function',
				      'ReactUpdates: must provide a batchedUpdates() function'
				    ) : invariant(typeof _batchingStrategy.batchedUpdates === 'function'));
				    ("production" !== "development" ? invariant(
				      typeof _batchingStrategy.isBatchingUpdates === 'boolean',
				      'ReactUpdates: must provide an isBatchingUpdates boolean attribute'
				    ) : invariant(typeof _batchingStrategy.isBatchingUpdates === 'boolean'));
				    batchingStrategy = _batchingStrategy;
				  }
				};

				var ReactUpdates = {
				  /**
				   * React references `ReactReconcileTransaction` using this property in order
				   * to allow dependency injection.
				   *
				   * @internal
				   */
				  ReactReconcileTransaction: null,

				  batchedUpdates: batchedUpdates,
				  enqueueUpdate: enqueueUpdate,
				  flushBatchedUpdates: flushBatchedUpdates,
				  injection: ReactUpdatesInjection,
				  asap: asap
				};

				module.exports = ReactUpdates;

				},{"./CallbackQueue":6,"./Object.assign":27,"./PooledClass":28,"./ReactCurrentOwner":36,"./ReactPerf":68,"./Transaction":95,"./invariant":126,"./warning":145}],80:[function(_dereq_,module,exports){
				/**
				 * Copyright 2013-2014, Facebook, Inc.
				 * All rights reserved.
				 *
				 * This source code is licensed under the BSD-style license found in the
				 * LICENSE file in the root directory of this source tree. An additional grant
				 * of patent rights can be found in the PATENTS file in the same directory.
				 *
				 * @providesModule SVGDOMPropertyConfig
				 */

				/*jslint bitwise: true*/

				"use strict";

				var DOMProperty = _dereq_("./DOMProperty");

				var MUST_USE_ATTRIBUTE = DOMProperty.injection.MUST_USE_ATTRIBUTE;

				var SVGDOMPropertyConfig = {
				  Properties: {
				    cx: MUST_USE_ATTRIBUTE,
				    cy: MUST_USE_ATTRIBUTE,
				    d: MUST_USE_ATTRIBUTE,
				    dx: MUST_USE_ATTRIBUTE,
				    dy: MUST_USE_ATTRIBUTE,
				    fill: MUST_USE_ATTRIBUTE,
				    fillOpacity: MUST_USE_ATTRIBUTE,
				    fontFamily: MUST_USE_ATTRIBUTE,
				    fontSize: MUST_USE_ATTRIBUTE,
				    fx: MUST_USE_ATTRIBUTE,
				    fy: MUST_USE_ATTRIBUTE,
				    gradientTransform: MUST_USE_ATTRIBUTE,
				    gradientUnits: MUST_USE_ATTRIBUTE,
				    markerEnd: MUST_USE_ATTRIBUTE,
				    markerMid: MUST_USE_ATTRIBUTE,
				    markerStart: MUST_USE_ATTRIBUTE,
				    offset: MUST_USE_ATTRIBUTE,
				    opacity: MUST_USE_ATTRIBUTE,
				    patternContentUnits: MUST_USE_ATTRIBUTE,
				    patternUnits: MUST_USE_ATTRIBUTE,
				    points: MUST_USE_ATTRIBUTE,
				    preserveAspectRatio: MUST_USE_ATTRIBUTE,
				    r: MUST_USE_ATTRIBUTE,
				    rx: MUST_USE_ATTRIBUTE,
				    ry: MUST_USE_ATTRIBUTE,
				    spreadMethod: MUST_USE_ATTRIBUTE,
				    stopColor: MUST_USE_ATTRIBUTE,
				    stopOpacity: MUST_USE_ATTRIBUTE,
				    stroke: MUST_USE_ATTRIBUTE,
				    strokeDasharray: MUST_USE_ATTRIBUTE,
				    strokeLinecap: MUST_USE_ATTRIBUTE,
				    strokeOpacity: MUST_USE_ATTRIBUTE,
				    strokeWidth: MUST_USE_ATTRIBUTE,
				    textAnchor: MUST_USE_ATTRIBUTE,
				    transform: MUST_USE_ATTRIBUTE,
				    version: MUST_USE_ATTRIBUTE,
				    viewBox: MUST_USE_ATTRIBUTE,
				    x1: MUST_USE_ATTRIBUTE,
				    x2: MUST_USE_ATTRIBUTE,
				    x: MUST_USE_ATTRIBUTE,
				    y1: MUST_USE_ATTRIBUTE,
				    y2: MUST_USE_ATTRIBUTE,
				    y: MUST_USE_ATTRIBUTE
				  },
				  DOMAttributeNames: {
				    fillOpacity: 'fill-opacity',
				    fontFamily: 'font-family',
				    fontSize: 'font-size',
				    gradientTransform: 'gradientTransform',
				    gradientUnits: 'gradientUnits',
				    markerEnd: 'marker-end',
				    markerMid: 'marker-mid',
				    markerStart: 'marker-start',
				    patternContentUnits: 'patternContentUnits',
				    patternUnits: 'patternUnits',
				    preserveAspectRatio: 'preserveAspectRatio',
				    spreadMethod: 'spreadMethod',
				    stopColor: 'stop-color',
				    stopOpacity: 'stop-opacity',
				    strokeDasharray: 'stroke-dasharray',
				    strokeLinecap: 'stroke-linecap',
				    strokeOpacity: 'stroke-opacity',
				    strokeWidth: 'stroke-width',
				    textAnchor: 'text-anchor',
				    viewBox: 'viewBox'
				  }
				};

				module.exports = SVGDOMPropertyConfig;

				},{"./DOMProperty":11}],81:[function(_dereq_,module,exports){
				/**
				 * Copyright 2013-2014, Facebook, Inc.
				 * All rights reserved.
				 *
				 * This source code is licensed under the BSD-style license found in the
				 * LICENSE file in the root directory of this source tree. An additional grant
				 * of patent rights can be found in the PATENTS file in the same directory.
				 *
				 * @providesModule SelectEventPlugin
				 */

				"use strict";

				var EventConstants = _dereq_("./EventConstants");
				var EventPropagators = _dereq_("./EventPropagators");
				var ReactInputSelection = _dereq_("./ReactInputSelection");
				var SyntheticEvent = _dereq_("./SyntheticEvent");

				var getActiveElement = _dereq_("./getActiveElement");
				var isTextInputElement = _dereq_("./isTextInputElement");
				var keyOf = _dereq_("./keyOf");
				var shallowEqual = _dereq_("./shallowEqual");

				var topLevelTypes = EventConstants.topLevelTypes;

				var eventTypes = {
				  select: {
				    phasedRegistrationNames: {
				      bubbled: keyOf({onSelect: null}),
				      captured: keyOf({onSelectCapture: null})
				    },
				    dependencies: [
				      topLevelTypes.topBlur,
				      topLevelTypes.topContextMenu,
				      topLevelTypes.topFocus,
				      topLevelTypes.topKeyDown,
				      topLevelTypes.topMouseDown,
				      topLevelTypes.topMouseUp,
				      topLevelTypes.topSelectionChange
				    ]
				  }
				};

				var activeElement = null;
				var activeElementID = null;
				var lastSelection = null;
				var mouseDown = false;

				/**
				 * Get an object which is a unique representation of the current selection.
				 *
				 * The return value will not be consistent across nodes or browsers, but
				 * two identical selections on the same node will return identical objects.
				 *
				 * @param {DOMElement} node
				 * @param {object}
				 */
				function getSelection(node) {
				  if ('selectionStart' in node &&
				      ReactInputSelection.hasSelectionCapabilities(node)) {
				    return {
				      start: node.selectionStart,
				      end: node.selectionEnd
				    };
				  } else if (window.getSelection) {
				    var selection = window.getSelection();
				    return {
				      anchorNode: selection.anchorNode,
				      anchorOffset: selection.anchorOffset,
				      focusNode: selection.focusNode,
				      focusOffset: selection.focusOffset
				    };
				  } else if (document.selection) {
				    var range = document.selection.createRange();
				    return {
				      parentElement: range.parentElement(),
				      text: range.text,
				      top: range.boundingTop,
				      left: range.boundingLeft
				    };
				  }
				}

				/**
				 * Poll selection to see whether it's changed.
				 *
				 * @param {object} nativeEvent
				 * @return {?SyntheticEvent}
				 */
				function constructSelectEvent(nativeEvent) {
				  // Ensure we have the right element, and that the user is not dragging a
				  // selection (this matches native `select` event behavior). In HTML5, select
				  // fires only on input and textarea thus if there's no focused element we
				  // won't dispatch.
				  if (mouseDown ||
				      activeElement == null ||
				      activeElement != getActiveElement()) {
				    return;
				  }

				  // Only fire when selection has actually changed.
				  var currentSelection = getSelection(activeElement);
				  if (!lastSelection || !shallowEqual(lastSelection, currentSelection)) {
				    lastSelection = currentSelection;

				    var syntheticEvent = SyntheticEvent.getPooled(
				      eventTypes.select,
				      activeElementID,
				      nativeEvent
				    );

				    syntheticEvent.type = 'select';
				    syntheticEvent.target = activeElement;

				    EventPropagators.accumulateTwoPhaseDispatches(syntheticEvent);

				    return syntheticEvent;
				  }
				}

				/**
				 * This plugin creates an `onSelect` event that normalizes select events
				 * across form elements.
				 *
				 * Supported elements are:
				 * - input (see `isTextInputElement`)
				 * - textarea
				 * - contentEditable
				 *
				 * This differs from native browser implementations in the following ways:
				 * - Fires on contentEditable fields as well as inputs.
				 * - Fires for collapsed selection.
				 * - Fires after user input.
				 */
				var SelectEventPlugin = {

				  eventTypes: eventTypes,

				  /**
				   * @param {string} topLevelType Record from `EventConstants`.
				   * @param {DOMEventTarget} topLevelTarget The listening component root node.
				   * @param {string} topLevelTargetID ID of `topLevelTarget`.
				   * @param {object} nativeEvent Native browser event.
				   * @return {*} An accumulation of synthetic events.
				   * @see {EventPluginHub.extractEvents}
				   */
				  extractEvents: function(
				      topLevelType,
				      topLevelTarget,
				      topLevelTargetID,
				      nativeEvent) {

				    switch (topLevelType) {
				      // Track the input node that has focus.
				      case topLevelTypes.topFocus:
				        if (isTextInputElement(topLevelTarget) ||
				            topLevelTarget.contentEditable === 'true') {
				          activeElement = topLevelTarget;
				          activeElementID = topLevelTargetID;
				          lastSelection = null;
				        }
				        break;
				      case topLevelTypes.topBlur:
				        activeElement = null;
				        activeElementID = null;
				        lastSelection = null;
				        break;

				      // Don't fire the event while the user is dragging. This matches the
				      // semantics of the native select event.
				      case topLevelTypes.topMouseDown:
				        mouseDown = true;
				        break;
				      case topLevelTypes.topContextMenu:
				      case topLevelTypes.topMouseUp:
				        mouseDown = false;
				        return constructSelectEvent(nativeEvent);

				      // Chrome and IE fire non-standard event when selection is changed (and
				      // sometimes when it hasn't).
				      // Firefox doesn't support selectionchange, so check selection status
				      // after each key entry. The selection changes after keydown and before
				      // keyup, but we check on keydown as well in the case of holding down a
				      // key, when multiple keydown events are fired but only one keyup is.
				      case topLevelTypes.topSelectionChange:
				      case topLevelTypes.topKeyDown:
				      case topLevelTypes.topKeyUp:
				        return constructSelectEvent(nativeEvent);
				    }
				  }
				};

				module.exports = SelectEventPlugin;

				},{"./EventConstants":16,"./EventPropagators":21,"./ReactInputSelection":59,"./SyntheticEvent":87,"./getActiveElement":113,"./isTextInputElement":129,"./keyOf":133,"./shallowEqual":141}],82:[function(_dereq_,module,exports){
				/**
				 * Copyright 2013-2014, Facebook, Inc.
				 * All rights reserved.
				 *
				 * This source code is licensed under the BSD-style license found in the
				 * LICENSE file in the root directory of this source tree. An additional grant
				 * of patent rights can be found in the PATENTS file in the same directory.
				 *
				 * @providesModule ServerReactRootIndex
				 * @typechecks
				 */

				"use strict";

				/**
				 * Size of the reactRoot ID space. We generate random numbers for React root
				 * IDs and if there's a collision the events and DOM update system will
				 * get confused. In the future we need a way to generate GUIDs but for
				 * now this will work on a smaller scale.
				 */
				var GLOBAL_MOUNT_POINT_MAX = Math.pow(2, 53);

				var ServerReactRootIndex = {
				  createReactRootIndex: function() {
				    return Math.ceil(Math.random() * GLOBAL_MOUNT_POINT_MAX);
				  }
				};

				module.exports = ServerReactRootIndex;

				},{}],83:[function(_dereq_,module,exports){
				/**
				 * Copyright 2013-2014, Facebook, Inc.
				 * All rights reserved.
				 *
				 * This source code is licensed under the BSD-style license found in the
				 * LICENSE file in the root directory of this source tree. An additional grant
				 * of patent rights can be found in the PATENTS file in the same directory.
				 *
				 * @providesModule SimpleEventPlugin
				 */

				"use strict";

				var EventConstants = _dereq_("./EventConstants");
				var EventPluginUtils = _dereq_("./EventPluginUtils");
				var EventPropagators = _dereq_("./EventPropagators");
				var SyntheticClipboardEvent = _dereq_("./SyntheticClipboardEvent");
				var SyntheticEvent = _dereq_("./SyntheticEvent");
				var SyntheticFocusEvent = _dereq_("./SyntheticFocusEvent");
				var SyntheticKeyboardEvent = _dereq_("./SyntheticKeyboardEvent");
				var SyntheticMouseEvent = _dereq_("./SyntheticMouseEvent");
				var SyntheticDragEvent = _dereq_("./SyntheticDragEvent");
				var SyntheticTouchEvent = _dereq_("./SyntheticTouchEvent");
				var SyntheticUIEvent = _dereq_("./SyntheticUIEvent");
				var SyntheticWheelEvent = _dereq_("./SyntheticWheelEvent");

				var getEventCharCode = _dereq_("./getEventCharCode");

				var invariant = _dereq_("./invariant");
				var keyOf = _dereq_("./keyOf");
				var warning = _dereq_("./warning");

				var topLevelTypes = EventConstants.topLevelTypes;

				var eventTypes = {
				  blur: {
				    phasedRegistrationNames: {
				      bubbled: keyOf({onBlur: true}),
				      captured: keyOf({onBlurCapture: true})
				    }
				  },
				  click: {
				    phasedRegistrationNames: {
				      bubbled: keyOf({onClick: true}),
				      captured: keyOf({onClickCapture: true})
				    }
				  },
				  contextMenu: {
				    phasedRegistrationNames: {
				      bubbled: keyOf({onContextMenu: true}),
				      captured: keyOf({onContextMenuCapture: true})
				    }
				  },
				  copy: {
				    phasedRegistrationNames: {
				      bubbled: keyOf({onCopy: true}),
				      captured: keyOf({onCopyCapture: true})
				    }
				  },
				  cut: {
				    phasedRegistrationNames: {
				      bubbled: keyOf({onCut: true}),
				      captured: keyOf({onCutCapture: true})
				    }
				  },
				  doubleClick: {
				    phasedRegistrationNames: {
				      bubbled: keyOf({onDoubleClick: true}),
				      captured: keyOf({onDoubleClickCapture: true})
				    }
				  },
				  drag: {
				    phasedRegistrationNames: {
				      bubbled: keyOf({onDrag: true}),
				      captured: keyOf({onDragCapture: true})
				    }
				  },
				  dragEnd: {
				    phasedRegistrationNames: {
				      bubbled: keyOf({onDragEnd: true}),
				      captured: keyOf({onDragEndCapture: true})
				    }
				  },
				  dragEnter: {
				    phasedRegistrationNames: {
				      bubbled: keyOf({onDragEnter: true}),
				      captured: keyOf({onDragEnterCapture: true})
				    }
				  },
				  dragExit: {
				    phasedRegistrationNames: {
				      bubbled: keyOf({onDragExit: true}),
				      captured: keyOf({onDragExitCapture: true})
				    }
				  },
				  dragLeave: {
				    phasedRegistrationNames: {
				      bubbled: keyOf({onDragLeave: true}),
				      captured: keyOf({onDragLeaveCapture: true})
				    }
				  },
				  dragOver: {
				    phasedRegistrationNames: {
				      bubbled: keyOf({onDragOver: true}),
				      captured: keyOf({onDragOverCapture: true})
				    }
				  },
				  dragStart: {
				    phasedRegistrationNames: {
				      bubbled: keyOf({onDragStart: true}),
				      captured: keyOf({onDragStartCapture: true})
				    }
				  },
				  drop: {
				    phasedRegistrationNames: {
				      bubbled: keyOf({onDrop: true}),
				      captured: keyOf({onDropCapture: true})
				    }
				  },
				  focus: {
				    phasedRegistrationNames: {
				      bubbled: keyOf({onFocus: true}),
				      captured: keyOf({onFocusCapture: true})
				    }
				  },
				  input: {
				    phasedRegistrationNames: {
				      bubbled: keyOf({onInput: true}),
				      captured: keyOf({onInputCapture: true})
				    }
				  },
				  keyDown: {
				    phasedRegistrationNames: {
				      bubbled: keyOf({onKeyDown: true}),
				      captured: keyOf({onKeyDownCapture: true})
				    }
				  },
				  keyPress: {
				    phasedRegistrationNames: {
				      bubbled: keyOf({onKeyPress: true}),
				      captured: keyOf({onKeyPressCapture: true})
				    }
				  },
				  keyUp: {
				    phasedRegistrationNames: {
				      bubbled: keyOf({onKeyUp: true}),
				      captured: keyOf({onKeyUpCapture: true})
				    }
				  },
				  load: {
				    phasedRegistrationNames: {
				      bubbled: keyOf({onLoad: true}),
				      captured: keyOf({onLoadCapture: true})
				    }
				  },
				  error: {
				    phasedRegistrationNames: {
				      bubbled: keyOf({onError: true}),
				      captured: keyOf({onErrorCapture: true})
				    }
				  },
				  // Note: We do not allow listening to mouseOver events. Instead, use the
				  // onMouseEnter/onMouseLeave created by `EnterLeaveEventPlugin`.
				  mouseDown: {
				    phasedRegistrationNames: {
				      bubbled: keyOf({onMouseDown: true}),
				      captured: keyOf({onMouseDownCapture: true})
				    }
				  },
				  mouseMove: {
				    phasedRegistrationNames: {
				      bubbled: keyOf({onMouseMove: true}),
				      captured: keyOf({onMouseMoveCapture: true})
				    }
				  },
				  mouseOut: {
				    phasedRegistrationNames: {
				      bubbled: keyOf({onMouseOut: true}),
				      captured: keyOf({onMouseOutCapture: true})
				    }
				  },
				  mouseOver: {
				    phasedRegistrationNames: {
				      bubbled: keyOf({onMouseOver: true}),
				      captured: keyOf({onMouseOverCapture: true})
				    }
				  },
				  mouseUp: {
				    phasedRegistrationNames: {
				      bubbled: keyOf({onMouseUp: true}),
				      captured: keyOf({onMouseUpCapture: true})
				    }
				  },
				  paste: {
				    phasedRegistrationNames: {
				      bubbled: keyOf({onPaste: true}),
				      captured: keyOf({onPasteCapture: true})
				    }
				  },
				  reset: {
				    phasedRegistrationNames: {
				      bubbled: keyOf({onReset: true}),
				      captured: keyOf({onResetCapture: true})
				    }
				  },
				  scroll: {
				    phasedRegistrationNames: {
				      bubbled: keyOf({onScroll: true}),
				      captured: keyOf({onScrollCapture: true})
				    }
				  },
				  submit: {
				    phasedRegistrationNames: {
				      bubbled: keyOf({onSubmit: true}),
				      captured: keyOf({onSubmitCapture: true})
				    }
				  },
				  touchCancel: {
				    phasedRegistrationNames: {
				      bubbled: keyOf({onTouchCancel: true}),
				      captured: keyOf({onTouchCancelCapture: true})
				    }
				  },
				  touchEnd: {
				    phasedRegistrationNames: {
				      bubbled: keyOf({onTouchEnd: true}),
				      captured: keyOf({onTouchEndCapture: true})
				    }
				  },
				  touchMove: {
				    phasedRegistrationNames: {
				      bubbled: keyOf({onTouchMove: true}),
				      captured: keyOf({onTouchMoveCapture: true})
				    }
				  },
				  touchStart: {
				    phasedRegistrationNames: {
				      bubbled: keyOf({onTouchStart: true}),
				      captured: keyOf({onTouchStartCapture: true})
				    }
				  },
				  wheel: {
				    phasedRegistrationNames: {
				      bubbled: keyOf({onWheel: true}),
				      captured: keyOf({onWheelCapture: true})
				    }
				  }
				};

				var topLevelEventsToDispatchConfig = {
				  topBlur:        eventTypes.blur,
				  topClick:       eventTypes.click,
				  topContextMenu: eventTypes.contextMenu,
				  topCopy:        eventTypes.copy,
				  topCut:         eventTypes.cut,
				  topDoubleClick: eventTypes.doubleClick,
				  topDrag:        eventTypes.drag,
				  topDragEnd:     eventTypes.dragEnd,
				  topDragEnter:   eventTypes.dragEnter,
				  topDragExit:    eventTypes.dragExit,
				  topDragLeave:   eventTypes.dragLeave,
				  topDragOver:    eventTypes.dragOver,
				  topDragStart:   eventTypes.dragStart,
				  topDrop:        eventTypes.drop,
				  topError:       eventTypes.error,
				  topFocus:       eventTypes.focus,
				  topInput:       eventTypes.input,
				  topKeyDown:     eventTypes.keyDown,
				  topKeyPress:    eventTypes.keyPress,
				  topKeyUp:       eventTypes.keyUp,
				  topLoad:        eventTypes.load,
				  topMouseDown:   eventTypes.mouseDown,
				  topMouseMove:   eventTypes.mouseMove,
				  topMouseOut:    eventTypes.mouseOut,
				  topMouseOver:   eventTypes.mouseOver,
				  topMouseUp:     eventTypes.mouseUp,
				  topPaste:       eventTypes.paste,
				  topReset:       eventTypes.reset,
				  topScroll:      eventTypes.scroll,
				  topSubmit:      eventTypes.submit,
				  topTouchCancel: eventTypes.touchCancel,
				  topTouchEnd:    eventTypes.touchEnd,
				  topTouchMove:   eventTypes.touchMove,
				  topTouchStart:  eventTypes.touchStart,
				  topWheel:       eventTypes.wheel
				};

				for (var topLevelType in topLevelEventsToDispatchConfig) {
				  topLevelEventsToDispatchConfig[topLevelType].dependencies = [topLevelType];
				}

				var SimpleEventPlugin = {

				  eventTypes: eventTypes,

				  /**
				   * Same as the default implementation, except cancels the event when return
				   * value is false. This behavior will be disabled in a future release.
				   *
				   * @param {object} Event to be dispatched.
				   * @param {function} Application-level callback.
				   * @param {string} domID DOM ID to pass to the callback.
				   */
				  executeDispatch: function(event, listener, domID) {
				    var returnValue = EventPluginUtils.executeDispatch(event, listener, domID);

				    ("production" !== "development" ? warning(
				      typeof returnValue !== 'boolean',
				      'Returning `false` from an event handler is deprecated and will be ' +
				      'ignored in a future release. Instead, manually call ' +
				      'e.stopPropagation() or e.preventDefault(), as appropriate.'
				    ) : null);

				    if (returnValue === false) {
				      event.stopPropagation();
				      event.preventDefault();
				    }
				  },

				  /**
				   * @param {string} topLevelType Record from `EventConstants`.
				   * @param {DOMEventTarget} topLevelTarget The listening component root node.
				   * @param {string} topLevelTargetID ID of `topLevelTarget`.
				   * @param {object} nativeEvent Native browser event.
				   * @return {*} An accumulation of synthetic events.
				   * @see {EventPluginHub.extractEvents}
				   */
				  extractEvents: function(
				      topLevelType,
				      topLevelTarget,
				      topLevelTargetID,
				      nativeEvent) {
				    var dispatchConfig = topLevelEventsToDispatchConfig[topLevelType];
				    if (!dispatchConfig) {
				      return null;
				    }
				    var EventConstructor;
				    switch (topLevelType) {
				      case topLevelTypes.topInput:
				      case topLevelTypes.topLoad:
				      case topLevelTypes.topError:
				      case topLevelTypes.topReset:
				      case topLevelTypes.topSubmit:
				        // HTML Events
				        // @see http://www.w3.org/TR/html5/index.html#events-0
				        EventConstructor = SyntheticEvent;
				        break;
				      case topLevelTypes.topKeyPress:
				        // FireFox creates a keypress event for function keys too. This removes
				        // the unwanted keypress events. Enter is however both printable and
				        // non-printable. One would expect Tab to be as well (but it isn't).
				        if (getEventCharCode(nativeEvent) === 0) {
				          return null;
				        }
				        /* falls through */
				      case topLevelTypes.topKeyDown:
				      case topLevelTypes.topKeyUp:
				        EventConstructor = SyntheticKeyboardEvent;
				        break;
				      case topLevelTypes.topBlur:
				      case topLevelTypes.topFocus:
				        EventConstructor = SyntheticFocusEvent;
				        break;
				      case topLevelTypes.topClick:
				        // Firefox creates a click event on right mouse clicks. This removes the
				        // unwanted click events.
				        if (nativeEvent.button === 2) {
				          return null;
				        }
				        /* falls through */
				      case topLevelTypes.topContextMenu:
				      case topLevelTypes.topDoubleClick:
				      case topLevelTypes.topMouseDown:
				      case topLevelTypes.topMouseMove:
				      case topLevelTypes.topMouseOut:
				      case topLevelTypes.topMouseOver:
				      case topLevelTypes.topMouseUp:
				        EventConstructor = SyntheticMouseEvent;
				        break;
				      case topLevelTypes.topDrag:
				      case topLevelTypes.topDragEnd:
				      case topLevelTypes.topDragEnter:
				      case topLevelTypes.topDragExit:
				      case topLevelTypes.topDragLeave:
				      case topLevelTypes.topDragOver:
				      case topLevelTypes.topDragStart:
				      case topLevelTypes.topDrop:
				        EventConstructor = SyntheticDragEvent;
				        break;
				      case topLevelTypes.topTouchCancel:
				      case topLevelTypes.topTouchEnd:
				      case topLevelTypes.topTouchMove:
				      case topLevelTypes.topTouchStart:
				        EventConstructor = SyntheticTouchEvent;
				        break;
				      case topLevelTypes.topScroll:
				        EventConstructor = SyntheticUIEvent;
				        break;
				      case topLevelTypes.topWheel:
				        EventConstructor = SyntheticWheelEvent;
				        break;
				      case topLevelTypes.topCopy:
				      case topLevelTypes.topCut:
				      case topLevelTypes.topPaste:
				        EventConstructor = SyntheticClipboardEvent;
				        break;
				    }
				    ("production" !== "development" ? invariant(
				      EventConstructor,
				      'SimpleEventPlugin: Unhandled event type, `%s`.',
				      topLevelType
				    ) : invariant(EventConstructor));
				    var event = EventConstructor.getPooled(
				      dispatchConfig,
				      topLevelTargetID,
				      nativeEvent
				    );
				    EventPropagators.accumulateTwoPhaseDispatches(event);
				    return event;
				  }

				};

				module.exports = SimpleEventPlugin;

				},{"./EventConstants":16,"./EventPluginUtils":20,"./EventPropagators":21,"./SyntheticClipboardEvent":84,"./SyntheticDragEvent":86,"./SyntheticEvent":87,"./SyntheticFocusEvent":88,"./SyntheticKeyboardEvent":90,"./SyntheticMouseEvent":91,"./SyntheticTouchEvent":92,"./SyntheticUIEvent":93,"./SyntheticWheelEvent":94,"./getEventCharCode":114,"./invariant":126,"./keyOf":133,"./warning":145}],84:[function(_dereq_,module,exports){
				/**
				 * Copyright 2013-2014, Facebook, Inc.
				 * All rights reserved.
				 *
				 * This source code is licensed under the BSD-style license found in the
				 * LICENSE file in the root directory of this source tree. An additional grant
				 * of patent rights can be found in the PATENTS file in the same directory.
				 *
				 * @providesModule SyntheticClipboardEvent
				 * @typechecks static-only
				 */

				"use strict";

				var SyntheticEvent = _dereq_("./SyntheticEvent");

				/**
				 * @interface Event
				 * @see http://www.w3.org/TR/clipboard-apis/
				 */
				var ClipboardEventInterface = {
				  clipboardData: function(event) {
				    return (
				      'clipboardData' in event ?
				        event.clipboardData :
				        window.clipboardData
				    );
				  }
				};

				/**
				 * @param {object} dispatchConfig Configuration used to dispatch this event.
				 * @param {string} dispatchMarker Marker identifying the event target.
				 * @param {object} nativeEvent Native browser event.
				 * @extends {SyntheticUIEvent}
				 */
				function SyntheticClipboardEvent(dispatchConfig, dispatchMarker, nativeEvent) {
				  SyntheticEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent);
				}

				SyntheticEvent.augmentClass(SyntheticClipboardEvent, ClipboardEventInterface);

				module.exports = SyntheticClipboardEvent;


				},{"./SyntheticEvent":87}],85:[function(_dereq_,module,exports){
				/**
				 * Copyright 2013-2014, Facebook, Inc.
				 * All rights reserved.
				 *
				 * This source code is licensed under the BSD-style license found in the
				 * LICENSE file in the root directory of this source tree. An additional grant
				 * of patent rights can be found in the PATENTS file in the same directory.
				 *
				 * @providesModule SyntheticCompositionEvent
				 * @typechecks static-only
				 */

				"use strict";

				var SyntheticEvent = _dereq_("./SyntheticEvent");

				/**
				 * @interface Event
				 * @see http://www.w3.org/TR/DOM-Level-3-Events/#events-compositionevents
				 */
				var CompositionEventInterface = {
				  data: null
				};

				/**
				 * @param {object} dispatchConfig Configuration used to dispatch this event.
				 * @param {string} dispatchMarker Marker identifying the event target.
				 * @param {object} nativeEvent Native browser event.
				 * @extends {SyntheticUIEvent}
				 */
				function SyntheticCompositionEvent(
				  dispatchConfig,
				  dispatchMarker,
				  nativeEvent) {
				  SyntheticEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent);
				}

				SyntheticEvent.augmentClass(
				  SyntheticCompositionEvent,
				  CompositionEventInterface
				);

				module.exports = SyntheticCompositionEvent;


				},{"./SyntheticEvent":87}],86:[function(_dereq_,module,exports){
				/**
				 * Copyright 2013-2014, Facebook, Inc.
				 * All rights reserved.
				 *
				 * This source code is licensed under the BSD-style license found in the
				 * LICENSE file in the root directory of this source tree. An additional grant
				 * of patent rights can be found in the PATENTS file in the same directory.
				 *
				 * @providesModule SyntheticDragEvent
				 * @typechecks static-only
				 */

				"use strict";

				var SyntheticMouseEvent = _dereq_("./SyntheticMouseEvent");

				/**
				 * @interface DragEvent
				 * @see http://www.w3.org/TR/DOM-Level-3-Events/
				 */
				var DragEventInterface = {
				  dataTransfer: null
				};

				/**
				 * @param {object} dispatchConfig Configuration used to dispatch this event.
				 * @param {string} dispatchMarker Marker identifying the event target.
				 * @param {object} nativeEvent Native browser event.
				 * @extends {SyntheticUIEvent}
				 */
				function SyntheticDragEvent(dispatchConfig, dispatchMarker, nativeEvent) {
				  SyntheticMouseEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent);
				}

				SyntheticMouseEvent.augmentClass(SyntheticDragEvent, DragEventInterface);

				module.exports = SyntheticDragEvent;

				},{"./SyntheticMouseEvent":91}],87:[function(_dereq_,module,exports){
				/**
				 * Copyright 2013-2014, Facebook, Inc.
				 * All rights reserved.
				 *
				 * This source code is licensed under the BSD-style license found in the
				 * LICENSE file in the root directory of this source tree. An additional grant
				 * of patent rights can be found in the PATENTS file in the same directory.
				 *
				 * @providesModule SyntheticEvent
				 * @typechecks static-only
				 */

				"use strict";

				var PooledClass = _dereq_("./PooledClass");

				var assign = _dereq_("./Object.assign");
				var emptyFunction = _dereq_("./emptyFunction");
				var getEventTarget = _dereq_("./getEventTarget");

				/**
				 * @interface Event
				 * @see http://www.w3.org/TR/DOM-Level-3-Events/
				 */
				var EventInterface = {
				  type: null,
				  target: getEventTarget,
				  // currentTarget is set when dispatching; no use in copying it here
				  currentTarget: emptyFunction.thatReturnsNull,
				  eventPhase: null,
				  bubbles: null,
				  cancelable: null,
				  timeStamp: function(event) {
				    return event.timeStamp || Date.now();
				  },
				  defaultPrevented: null,
				  isTrusted: null
				};

				/**
				 * Synthetic events are dispatched by event plugins, typically in response to a
				 * top-level event delegation handler.
				 *
				 * These systems should generally use pooling to reduce the frequency of garbage
				 * collection. The system should check `isPersistent` to determine whether the
				 * event should be released into the pool after being dispatched. Users that
				 * need a persisted event should invoke `persist`.
				 *
				 * Synthetic events (and subclasses) implement the DOM Level 3 Events API by
				 * normalizing browser quirks. Subclasses do not necessarily have to implement a
				 * DOM interface; custom application-specific events can also subclass this.
				 *
				 * @param {object} dispatchConfig Configuration used to dispatch this event.
				 * @param {string} dispatchMarker Marker identifying the event target.
				 * @param {object} nativeEvent Native browser event.
				 */
				function SyntheticEvent(dispatchConfig, dispatchMarker, nativeEvent) {
				  this.dispatchConfig = dispatchConfig;
				  this.dispatchMarker = dispatchMarker;
				  this.nativeEvent = nativeEvent;

				  var Interface = this.constructor.Interface;
				  for (var propName in Interface) {
				    if (!Interface.hasOwnProperty(propName)) {
				      continue;
				    }
				    var normalize = Interface[propName];
				    if (normalize) {
				      this[propName] = normalize(nativeEvent);
				    } else {
				      this[propName] = nativeEvent[propName];
				    }
				  }

				  var defaultPrevented = nativeEvent.defaultPrevented != null ?
				    nativeEvent.defaultPrevented :
				    nativeEvent.returnValue === false;
				  if (defaultPrevented) {
				    this.isDefaultPrevented = emptyFunction.thatReturnsTrue;
				  } else {
				    this.isDefaultPrevented = emptyFunction.thatReturnsFalse;
				  }
				  this.isPropagationStopped = emptyFunction.thatReturnsFalse;
				}

				assign(SyntheticEvent.prototype, {

				  preventDefault: function() {
				    this.defaultPrevented = true;
				    var event = this.nativeEvent;
				    event.preventDefault ? event.preventDefault() : event.returnValue = false;
				    this.isDefaultPrevented = emptyFunction.thatReturnsTrue;
				  },

				  stopPropagation: function() {
				    var event = this.nativeEvent;
				    event.stopPropagation ? event.stopPropagation() : event.cancelBubble = true;
				    this.isPropagationStopped = emptyFunction.thatReturnsTrue;
				  },

				  /**
				   * We release all dispatched `SyntheticEvent`s after each event loop, adding
				   * them back into the pool. This allows a way to hold onto a reference that
				   * won't be added back into the pool.
				   */
				  persist: function() {
				    this.isPersistent = emptyFunction.thatReturnsTrue;
				  },

				  /**
				   * Checks if this event should be released back into the pool.
				   *
				   * @return {boolean} True if this should not be released, false otherwise.
				   */
				  isPersistent: emptyFunction.thatReturnsFalse,

				  /**
				   * `PooledClass` looks for `destructor` on each instance it releases.
				   */
				  destructor: function() {
				    var Interface = this.constructor.Interface;
				    for (var propName in Interface) {
				      this[propName] = null;
				    }
				    this.dispatchConfig = null;
				    this.dispatchMarker = null;
				    this.nativeEvent = null;
				  }

				});

				SyntheticEvent.Interface = EventInterface;

				/**
				 * Helper to reduce boilerplate when creating subclasses.
				 *
				 * @param {function} Class
				 * @param {?object} Interface
				 */
				SyntheticEvent.augmentClass = function(Class, Interface) {
				  var Super = this;

				  var prototype = Object.create(Super.prototype);
				  assign(prototype, Class.prototype);
				  Class.prototype = prototype;
				  Class.prototype.constructor = Class;

				  Class.Interface = assign({}, Super.Interface, Interface);
				  Class.augmentClass = Super.augmentClass;

				  PooledClass.addPoolingTo(Class, PooledClass.threeArgumentPooler);
				};

				PooledClass.addPoolingTo(SyntheticEvent, PooledClass.threeArgumentPooler);

				module.exports = SyntheticEvent;

				},{"./Object.assign":27,"./PooledClass":28,"./emptyFunction":107,"./getEventTarget":117}],88:[function(_dereq_,module,exports){
				/**
				 * Copyright 2013-2014, Facebook, Inc.
				 * All rights reserved.
				 *
				 * This source code is licensed under the BSD-style license found in the
				 * LICENSE file in the root directory of this source tree. An additional grant
				 * of patent rights can be found in the PATENTS file in the same directory.
				 *
				 * @providesModule SyntheticFocusEvent
				 * @typechecks static-only
				 */

				"use strict";

				var SyntheticUIEvent = _dereq_("./SyntheticUIEvent");

				/**
				 * @interface FocusEvent
				 * @see http://www.w3.org/TR/DOM-Level-3-Events/
				 */
				var FocusEventInterface = {
				  relatedTarget: null
				};

				/**
				 * @param {object} dispatchConfig Configuration used to dispatch this event.
				 * @param {string} dispatchMarker Marker identifying the event target.
				 * @param {object} nativeEvent Native browser event.
				 * @extends {SyntheticUIEvent}
				 */
				function SyntheticFocusEvent(dispatchConfig, dispatchMarker, nativeEvent) {
				  SyntheticUIEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent);
				}

				SyntheticUIEvent.augmentClass(SyntheticFocusEvent, FocusEventInterface);

				module.exports = SyntheticFocusEvent;

				},{"./SyntheticUIEvent":93}],89:[function(_dereq_,module,exports){
				/**
				 * Copyright 2013 Facebook, Inc.
				 * All rights reserved.
				 *
				 * This source code is licensed under the BSD-style license found in the
				 * LICENSE file in the root directory of this source tree. An additional grant
				 * of patent rights can be found in the PATENTS file in the same directory.
				 *
				 * @providesModule SyntheticInputEvent
				 * @typechecks static-only
				 */

				"use strict";

				var SyntheticEvent = _dereq_("./SyntheticEvent");

				/**
				 * @interface Event
				 * @see http://www.w3.org/TR/2013/WD-DOM-Level-3-Events-20131105
				 *      /#events-inputevents
				 */
				var InputEventInterface = {
				  data: null
				};

				/**
				 * @param {object} dispatchConfig Configuration used to dispatch this event.
				 * @param {string} dispatchMarker Marker identifying the event target.
				 * @param {object} nativeEvent Native browser event.
				 * @extends {SyntheticUIEvent}
				 */
				function SyntheticInputEvent(
				  dispatchConfig,
				  dispatchMarker,
				  nativeEvent) {
				  SyntheticEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent);
				}

				SyntheticEvent.augmentClass(
				  SyntheticInputEvent,
				  InputEventInterface
				);

				module.exports = SyntheticInputEvent;


				},{"./SyntheticEvent":87}],90:[function(_dereq_,module,exports){
				/**
				 * Copyright 2013-2014, Facebook, Inc.
				 * All rights reserved.
				 *
				 * This source code is licensed under the BSD-style license found in the
				 * LICENSE file in the root directory of this source tree. An additional grant
				 * of patent rights can be found in the PATENTS file in the same directory.
				 *
				 * @providesModule SyntheticKeyboardEvent
				 * @typechecks static-only
				 */

				"use strict";

				var SyntheticUIEvent = _dereq_("./SyntheticUIEvent");

				var getEventCharCode = _dereq_("./getEventCharCode");
				var getEventKey = _dereq_("./getEventKey");
				var getEventModifierState = _dereq_("./getEventModifierState");

				/**
				 * @interface KeyboardEvent
				 * @see http://www.w3.org/TR/DOM-Level-3-Events/
				 */
				var KeyboardEventInterface = {
				  key: getEventKey,
				  location: null,
				  ctrlKey: null,
				  shiftKey: null,
				  altKey: null,
				  metaKey: null,
				  repeat: null,
				  locale: null,
				  getModifierState: getEventModifierState,
				  // Legacy Interface
				  charCode: function(event) {
				    // `charCode` is the result of a KeyPress event and represents the value of
				    // the actual printable character.

				    // KeyPress is deprecated, but its replacement is not yet final and not
				    // implemented in any major browser. Only KeyPress has charCode.
				    if (event.type === 'keypress') {
				      return getEventCharCode(event);
				    }
				    return 0;
				  },
				  keyCode: function(event) {
				    // `keyCode` is the result of a KeyDown/Up event and represents the value of
				    // physical keyboard key.

				    // The actual meaning of the value depends on the users' keyboard layout
				    // which cannot be detected. Assuming that it is a US keyboard layout
				    // provides a surprisingly accurate mapping for US and European users.
				    // Due to this, it is left to the user to implement at this time.
				    if (event.type === 'keydown' || event.type === 'keyup') {
				      return event.keyCode;
				    }
				    return 0;
				  },
				  which: function(event) {
				    // `which` is an alias for either `keyCode` or `charCode` depending on the
				    // type of the event.
				    if (event.type === 'keypress') {
				      return getEventCharCode(event);
				    }
				    if (event.type === 'keydown' || event.type === 'keyup') {
				      return event.keyCode;
				    }
				    return 0;
				  }
				};

				/**
				 * @param {object} dispatchConfig Configuration used to dispatch this event.
				 * @param {string} dispatchMarker Marker identifying the event target.
				 * @param {object} nativeEvent Native browser event.
				 * @extends {SyntheticUIEvent}
				 */
				function SyntheticKeyboardEvent(dispatchConfig, dispatchMarker, nativeEvent) {
				  SyntheticUIEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent);
				}

				SyntheticUIEvent.augmentClass(SyntheticKeyboardEvent, KeyboardEventInterface);

				module.exports = SyntheticKeyboardEvent;

				},{"./SyntheticUIEvent":93,"./getEventCharCode":114,"./getEventKey":115,"./getEventModifierState":116}],91:[function(_dereq_,module,exports){
				/**
				 * Copyright 2013-2014, Facebook, Inc.
				 * All rights reserved.
				 *
				 * This source code is licensed under the BSD-style license found in the
				 * LICENSE file in the root directory of this source tree. An additional grant
				 * of patent rights can be found in the PATENTS file in the same directory.
				 *
				 * @providesModule SyntheticMouseEvent
				 * @typechecks static-only
				 */

				"use strict";

				var SyntheticUIEvent = _dereq_("./SyntheticUIEvent");
				var ViewportMetrics = _dereq_("./ViewportMetrics");

				var getEventModifierState = _dereq_("./getEventModifierState");

				/**
				 * @interface MouseEvent
				 * @see http://www.w3.org/TR/DOM-Level-3-Events/
				 */
				var MouseEventInterface = {
				  screenX: null,
				  screenY: null,
				  clientX: null,
				  clientY: null,
				  ctrlKey: null,
				  shiftKey: null,
				  altKey: null,
				  metaKey: null,
				  getModifierState: getEventModifierState,
				  button: function(event) {
				    // Webkit, Firefox, IE9+
				    // which:  1 2 3
				    // button: 0 1 2 (standard)
				    var button = event.button;
				    if ('which' in event) {
				      return button;
				    }
				    // IE<9
				    // which:  undefined
				    // button: 0 0 0
				    // button: 1 4 2 (onmouseup)
				    return button === 2 ? 2 : button === 4 ? 1 : 0;
				  },
				  buttons: null,
				  relatedTarget: function(event) {
				    return event.relatedTarget || (
				      event.fromElement === event.srcElement ?
				        event.toElement :
				        event.fromElement
				    );
				  },
				  // "Proprietary" Interface.
				  pageX: function(event) {
				    return 'pageX' in event ?
				      event.pageX :
				      event.clientX + ViewportMetrics.currentScrollLeft;
				  },
				  pageY: function(event) {
				    return 'pageY' in event ?
				      event.pageY :
				      event.clientY + ViewportMetrics.currentScrollTop;
				  }
				};

				/**
				 * @param {object} dispatchConfig Configuration used to dispatch this event.
				 * @param {string} dispatchMarker Marker identifying the event target.
				 * @param {object} nativeEvent Native browser event.
				 * @extends {SyntheticUIEvent}
				 */
				function SyntheticMouseEvent(dispatchConfig, dispatchMarker, nativeEvent) {
				  SyntheticUIEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent);
				}

				SyntheticUIEvent.augmentClass(SyntheticMouseEvent, MouseEventInterface);

				module.exports = SyntheticMouseEvent;

				},{"./SyntheticUIEvent":93,"./ViewportMetrics":96,"./getEventModifierState":116}],92:[function(_dereq_,module,exports){
				/**
				 * Copyright 2013-2014, Facebook, Inc.
				 * All rights reserved.
				 *
				 * This source code is licensed under the BSD-style license found in the
				 * LICENSE file in the root directory of this source tree. An additional grant
				 * of patent rights can be found in the PATENTS file in the same directory.
				 *
				 * @providesModule SyntheticTouchEvent
				 * @typechecks static-only
				 */

				"use strict";

				var SyntheticUIEvent = _dereq_("./SyntheticUIEvent");

				var getEventModifierState = _dereq_("./getEventModifierState");

				/**
				 * @interface TouchEvent
				 * @see http://www.w3.org/TR/touch-events/
				 */
				var TouchEventInterface = {
				  touches: null,
				  targetTouches: null,
				  changedTouches: null,
				  altKey: null,
				  metaKey: null,
				  ctrlKey: null,
				  shiftKey: null,
				  getModifierState: getEventModifierState
				};

				/**
				 * @param {object} dispatchConfig Configuration used to dispatch this event.
				 * @param {string} dispatchMarker Marker identifying the event target.
				 * @param {object} nativeEvent Native browser event.
				 * @extends {SyntheticUIEvent}
				 */
				function SyntheticTouchEvent(dispatchConfig, dispatchMarker, nativeEvent) {
				  SyntheticUIEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent);
				}

				SyntheticUIEvent.augmentClass(SyntheticTouchEvent, TouchEventInterface);

				module.exports = SyntheticTouchEvent;

				},{"./SyntheticUIEvent":93,"./getEventModifierState":116}],93:[function(_dereq_,module,exports){
				/**
				 * Copyright 2013-2014, Facebook, Inc.
				 * All rights reserved.
				 *
				 * This source code is licensed under the BSD-style license found in the
				 * LICENSE file in the root directory of this source tree. An additional grant
				 * of patent rights can be found in the PATENTS file in the same directory.
				 *
				 * @providesModule SyntheticUIEvent
				 * @typechecks static-only
				 */

				"use strict";

				var SyntheticEvent = _dereq_("./SyntheticEvent");

				var getEventTarget = _dereq_("./getEventTarget");

				/**
				 * @interface UIEvent
				 * @see http://www.w3.org/TR/DOM-Level-3-Events/
				 */
				var UIEventInterface = {
				  view: function(event) {
				    if (event.view) {
				      return event.view;
				    }

				    var target = getEventTarget(event);
				    if (target != null && target.window === target) {
				      // target is a window object
				      return target;
				    }

				    var doc = target.ownerDocument;
				    // TODO: Figure out why `ownerDocument` is sometimes undefined in IE8.
				    if (doc) {
				      return doc.defaultView || doc.parentWindow;
				    } else {
				      return window;
				    }
				  },
				  detail: function(event) {
				    return event.detail || 0;
				  }
				};

				/**
				 * @param {object} dispatchConfig Configuration used to dispatch this event.
				 * @param {string} dispatchMarker Marker identifying the event target.
				 * @param {object} nativeEvent Native browser event.
				 * @extends {SyntheticEvent}
				 */
				function SyntheticUIEvent(dispatchConfig, dispatchMarker, nativeEvent) {
				  SyntheticEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent);
				}

				SyntheticEvent.augmentClass(SyntheticUIEvent, UIEventInterface);

				module.exports = SyntheticUIEvent;

				},{"./SyntheticEvent":87,"./getEventTarget":117}],94:[function(_dereq_,module,exports){
				/**
				 * Copyright 2013-2014, Facebook, Inc.
				 * All rights reserved.
				 *
				 * This source code is licensed under the BSD-style license found in the
				 * LICENSE file in the root directory of this source tree. An additional grant
				 * of patent rights can be found in the PATENTS file in the same directory.
				 *
				 * @providesModule SyntheticWheelEvent
				 * @typechecks static-only
				 */

				"use strict";

				var SyntheticMouseEvent = _dereq_("./SyntheticMouseEvent");

				/**
				 * @interface WheelEvent
				 * @see http://www.w3.org/TR/DOM-Level-3-Events/
				 */
				var WheelEventInterface = {
				  deltaX: function(event) {
				    return (
				      'deltaX' in event ? event.deltaX :
				      // Fallback to `wheelDeltaX` for Webkit and normalize (right is positive).
				      'wheelDeltaX' in event ? -event.wheelDeltaX : 0
				    );
				  },
				  deltaY: function(event) {
				    return (
				      'deltaY' in event ? event.deltaY :
				      // Fallback to `wheelDeltaY` for Webkit and normalize (down is positive).
				      'wheelDeltaY' in event ? -event.wheelDeltaY :
				      // Fallback to `wheelDelta` for IE<9 and normalize (down is positive).
				      'wheelDelta' in event ? -event.wheelDelta : 0
				    );
				  },
				  deltaZ: null,

				  // Browsers without "deltaMode" is reporting in raw wheel delta where one
				  // notch on the scroll is always +/- 120, roughly equivalent to pixels.
				  // A good approximation of DOM_DELTA_LINE (1) is 5% of viewport size or
				  // ~40 pixels, for DOM_DELTA_SCREEN (2) it is 87.5% of viewport size.
				  deltaMode: null
				};

				/**
				 * @param {object} dispatchConfig Configuration used to dispatch this event.
				 * @param {string} dispatchMarker Marker identifying the event target.
				 * @param {object} nativeEvent Native browser event.
				 * @extends {SyntheticMouseEvent}
				 */
				function SyntheticWheelEvent(dispatchConfig, dispatchMarker, nativeEvent) {
				  SyntheticMouseEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent);
				}

				SyntheticMouseEvent.augmentClass(SyntheticWheelEvent, WheelEventInterface);

				module.exports = SyntheticWheelEvent;

				},{"./SyntheticMouseEvent":91}],95:[function(_dereq_,module,exports){
				/**
				 * Copyright 2013-2014, Facebook, Inc.
				 * All rights reserved.
				 *
				 * This source code is licensed under the BSD-style license found in the
				 * LICENSE file in the root directory of this source tree. An additional grant
				 * of patent rights can be found in the PATENTS file in the same directory.
				 *
				 * @providesModule Transaction
				 */

				"use strict";

				var invariant = _dereq_("./invariant");

				/**
				 * `Transaction` creates a black box that is able to wrap any method such that
				 * certain invariants are maintained before and after the method is invoked
				 * (Even if an exception is thrown while invoking the wrapped method). Whoever
				 * instantiates a transaction can provide enforcers of the invariants at
				 * creation time. The `Transaction` class itself will supply one additional
				 * automatic invariant for you - the invariant that any transaction instance
				 * should not be run while it is already being run. You would typically create a
				 * single instance of a `Transaction` for reuse multiple times, that potentially
				 * is used to wrap several different methods. Wrappers are extremely simple -
				 * they only require implementing two methods.
				 *
				 * <pre>
				 *                       wrappers (injected at creation time)
				 *                                      +        +
				 *                                      |        |
				 *                    +-----------------|--------|--------------+
				 *                    |                 v        |              |
				 *                    |      +---------------+   |              |
				 *                    |   +--|    wrapper1   |---|----+         |
				 *                    |   |  +---------------+   v    |         |
				 *                    |   |          +-------------+  |         |
				 *                    |   |     +----|   wrapper2  |--------+   |
				 *                    |   |     |    +-------------+  |     |   |
				 *                    |   |     |                     |     |   |
				 *                    |   v     v                     v     v   | wrapper
				 *                    | +---+ +---+   +---------+   +---+ +---+ | invariants
				 * perform(anyMethod) | |   | |   |   |         |   |   | |   | | maintained
				 * +----------------->|-|---|-|---|-->|anyMethod|---|---|-|---|-|-------->
				 *                    | |   | |   |   |         |   |   | |   | |
				 *                    | |   | |   |   |         |   |   | |   | |
				 *                    | |   | |   |   |         |   |   | |   | |
				 *                    | +---+ +---+   +---------+   +---+ +---+ |
				 *                    |  initialize                    close    |
				 *                    +-----------------------------------------+
				 * </pre>
				 *
				 * Use cases:
				 * - Preserving the input selection ranges before/after reconciliation.
				 *   Restoring selection even in the event of an unexpected error.
				 * - Deactivating events while rearranging the DOM, preventing blurs/focuses,
				 *   while guaranteeing that afterwards, the event system is reactivated.
				 * - Flushing a queue of collected DOM mutations to the main UI thread after a
				 *   reconciliation takes place in a worker thread.
				 * - Invoking any collected `componentDidUpdate` callbacks after rendering new
				 *   content.
				 * - (Future use case): Wrapping particular flushes of the `ReactWorker` queue
				 *   to preserve the `scrollTop` (an automatic scroll aware DOM).
				 * - (Future use case): Layout calculations before and after DOM upates.
				 *
				 * Transactional plugin API:
				 * - A module that has an `initialize` method that returns any precomputation.
				 * - and a `close` method that accepts the precomputation. `close` is invoked
				 *   when the wrapped process is completed, or has failed.
				 *
				 * @param {Array<TransactionalWrapper>} transactionWrapper Wrapper modules
				 * that implement `initialize` and `close`.
				 * @return {Transaction} Single transaction for reuse in thread.
				 *
				 * @class Transaction
				 */
				var Mixin = {
				  /**
				   * Sets up this instance so that it is prepared for collecting metrics. Does
				   * so such that this setup method may be used on an instance that is already
				   * initialized, in a way that does not consume additional memory upon reuse.
				   * That can be useful if you decide to make your subclass of this mixin a
				   * "PooledClass".
				   */
				  reinitializeTransaction: function() {
				    this.transactionWrappers = this.getTransactionWrappers();
				    if (!this.wrapperInitData) {
				      this.wrapperInitData = [];
				    } else {
				      this.wrapperInitData.length = 0;
				    }
				    this._isInTransaction = false;
				  },

				  _isInTransaction: false,

				  /**
				   * @abstract
				   * @return {Array<TransactionWrapper>} Array of transaction wrappers.
				   */
				  getTransactionWrappers: null,

				  isInTransaction: function() {
				    return !!this._isInTransaction;
				  },

				  /**
				   * Executes the function within a safety window. Use this for the top level
				   * methods that result in large amounts of computation/mutations that would
				   * need to be safety checked.
				   *
				   * @param {function} method Member of scope to call.
				   * @param {Object} scope Scope to invoke from.
				   * @param {Object?=} args... Arguments to pass to the method (optional).
				   *                           Helps prevent need to bind in many cases.
				   * @return Return value from `method`.
				   */
				  perform: function(method, scope, a, b, c, d, e, f) {
				    ("production" !== "development" ? invariant(
				      !this.isInTransaction(),
				      'Transaction.perform(...): Cannot initialize a transaction when there ' +
				      'is already an outstanding transaction.'
				    ) : invariant(!this.isInTransaction()));
				    var errorThrown;
				    var ret;
				    try {
				      this._isInTransaction = true;
				      // Catching errors makes debugging more difficult, so we start with
				      // errorThrown set to true before setting it to false after calling
				      // close -- if it's still set to true in the finally block, it means
				      // one of these calls threw.
				      errorThrown = true;
				      this.initializeAll(0);
				      ret = method.call(scope, a, b, c, d, e, f);
				      errorThrown = false;
				    } finally {
				      try {
				        if (errorThrown) {
				          // If `method` throws, prefer to show that stack trace over any thrown
				          // by invoking `closeAll`.
				          try {
				            this.closeAll(0);
				          } catch (err) {
				          }
				        } else {
				          // Since `method` didn't throw, we don't want to silence the exception
				          // here.
				          this.closeAll(0);
				        }
				      } finally {
				        this._isInTransaction = false;
				      }
				    }
				    return ret;
				  },

				  initializeAll: function(startIndex) {
				    var transactionWrappers = this.transactionWrappers;
				    for (var i = startIndex; i < transactionWrappers.length; i++) {
				      var wrapper = transactionWrappers[i];
				      try {
				        // Catching errors makes debugging more difficult, so we start with the
				        // OBSERVED_ERROR state before overwriting it with the real return value
				        // of initialize -- if it's still set to OBSERVED_ERROR in the finally
				        // block, it means wrapper.initialize threw.
				        this.wrapperInitData[i] = Transaction.OBSERVED_ERROR;
				        this.wrapperInitData[i] = wrapper.initialize ?
				          wrapper.initialize.call(this) :
				          null;
				      } finally {
				        if (this.wrapperInitData[i] === Transaction.OBSERVED_ERROR) {
				          // The initializer for wrapper i threw an error; initialize the
				          // remaining wrappers but silence any exceptions from them to ensure
				          // that the first error is the one to bubble up.
				          try {
				            this.initializeAll(i + 1);
				          } catch (err) {
				          }
				        }
				      }
				    }
				  },

				  /**
				   * Invokes each of `this.transactionWrappers.close[i]` functions, passing into
				   * them the respective return values of `this.transactionWrappers.init[i]`
				   * (`close`rs that correspond to initializers that failed will not be
				   * invoked).
				   */
				  closeAll: function(startIndex) {
				    ("production" !== "development" ? invariant(
				      this.isInTransaction(),
				      'Transaction.closeAll(): Cannot close transaction when none are open.'
				    ) : invariant(this.isInTransaction()));
				    var transactionWrappers = this.transactionWrappers;
				    for (var i = startIndex; i < transactionWrappers.length; i++) {
				      var wrapper = transactionWrappers[i];
				      var initData = this.wrapperInitData[i];
				      var errorThrown;
				      try {
				        // Catching errors makes debugging more difficult, so we start with
				        // errorThrown set to true before setting it to false after calling
				        // close -- if it's still set to true in the finally block, it means
				        // wrapper.close threw.
				        errorThrown = true;
				        if (initData !== Transaction.OBSERVED_ERROR) {
				          wrapper.close && wrapper.close.call(this, initData);
				        }
				        errorThrown = false;
				      } finally {
				        if (errorThrown) {
				          // The closer for wrapper i threw an error; close the remaining
				          // wrappers but silence any exceptions from them to ensure that the
				          // first error is the one to bubble up.
				          try {
				            this.closeAll(i + 1);
				          } catch (e) {
				          }
				        }
				      }
				    }
				    this.wrapperInitData.length = 0;
				  }
				};

				var Transaction = {

				  Mixin: Mixin,

				  /**
				   * Token to look for to determine if an error occured.
				   */
				  OBSERVED_ERROR: {}

				};

				module.exports = Transaction;

				},{"./invariant":126}],96:[function(_dereq_,module,exports){
				/**
				 * Copyright 2013-2014, Facebook, Inc.
				 * All rights reserved.
				 *
				 * This source code is licensed under the BSD-style license found in the
				 * LICENSE file in the root directory of this source tree. An additional grant
				 * of patent rights can be found in the PATENTS file in the same directory.
				 *
				 * @providesModule ViewportMetrics
				 */

				"use strict";

				var getUnboundedScrollPosition = _dereq_("./getUnboundedScrollPosition");

				var ViewportMetrics = {

				  currentScrollLeft: 0,

				  currentScrollTop: 0,

				  refreshScrollValues: function() {
				    var scrollPosition = getUnboundedScrollPosition(window);
				    ViewportMetrics.currentScrollLeft = scrollPosition.x;
				    ViewportMetrics.currentScrollTop = scrollPosition.y;
				  }

				};

				module.exports = ViewportMetrics;

				},{"./getUnboundedScrollPosition":122}],97:[function(_dereq_,module,exports){
				/**
				 * Copyright 2014, Facebook, Inc.
				 * All rights reserved.
				 *
				 * This source code is licensed under the BSD-style license found in the
				 * LICENSE file in the root directory of this source tree. An additional grant
				 * of patent rights can be found in the PATENTS file in the same directory.
				 *
				 * @providesModule accumulateInto
				 */

				"use strict";

				var invariant = _dereq_("./invariant");

				/**
				 *
				 * Accumulates items that must not be null or undefined into the first one. This
				 * is used to conserve memory by avoiding array allocations, and thus sacrifices
				 * API cleanness. Since `current` can be null before being passed in and not
				 * null after this function, make sure to assign it back to `current`:
				 *
				 * `a = accumulateInto(a, b);`
				 *
				 * This API should be sparingly used. Try `accumulate` for something cleaner.
				 *
				 * @return {*|array<*>} An accumulation of items.
				 */

				function accumulateInto(current, next) {
				  ("production" !== "development" ? invariant(
				    next != null,
				    'accumulateInto(...): Accumulated items must not be null or undefined.'
				  ) : invariant(next != null));
				  if (current == null) {
				    return next;
				  }

				  // Both are not empty. Warning: Never call x.concat(y) when you are not
				  // certain that x is an Array (x could be a string with concat method).
				  var currentIsArray = Array.isArray(current);
				  var nextIsArray = Array.isArray(next);

				  if (currentIsArray && nextIsArray) {
				    current.push.apply(current, next);
				    return current;
				  }

				  if (currentIsArray) {
				    current.push(next);
				    return current;
				  }

				  if (nextIsArray) {
				    // A bit too dangerous to mutate `next`.
				    return [current].concat(next);
				  }

				  return [current, next];
				}

				module.exports = accumulateInto;

				},{"./invariant":126}],98:[function(_dereq_,module,exports){
				/**
				 * Copyright 2013-2014, Facebook, Inc.
				 * All rights reserved.
				 *
				 * This source code is licensed under the BSD-style license found in the
				 * LICENSE file in the root directory of this source tree. An additional grant
				 * of patent rights can be found in the PATENTS file in the same directory.
				 *
				 * @providesModule adler32
				 */

				/* jslint bitwise:true */

				"use strict";

				var MOD = 65521;

				// This is a clean-room implementation of adler32 designed for detecting
				// if markup is not what we expect it to be. It does not need to be
				// cryptographically strong, only reasonably good at detecting if markup
				// generated on the server is different than that on the client.
				function adler32(data) {
				  var a = 1;
				  var b = 0;
				  for (var i = 0; i < data.length; i++) {
				    a = (a + data.charCodeAt(i)) % MOD;
				    b = (b + a) % MOD;
				  }
				  return a | (b << 16);
				}

				module.exports = adler32;

				},{}],99:[function(_dereq_,module,exports){
				/**
				 * Copyright 2013-2014, Facebook, Inc.
				 * All rights reserved.
				 *
				 * This source code is licensed under the BSD-style license found in the
				 * LICENSE file in the root directory of this source tree. An additional grant
				 * of patent rights can be found in the PATENTS file in the same directory.
				 *
				 * @providesModule camelize
				 * @typechecks
				 */

				var _hyphenPattern = /-(.)/g;

				/**
				 * Camelcases a hyphenated string, for example:
				 *
				 *   > camelize('background-color')
				 *   < "backgroundColor"
				 *
				 * @param {string} string
				 * @return {string}
				 */
				function camelize(string) {
				  return string.replace(_hyphenPattern, function(_, character) {
				    return character.toUpperCase();
				  });
				}

				module.exports = camelize;

				},{}],100:[function(_dereq_,module,exports){
				/**
				 * Copyright 2014, Facebook, Inc.
				 * All rights reserved.
				 *
				 * This source code is licensed under the BSD-style license found in the
				 * LICENSE file in the root directory of this source tree. An additional grant
				 * of patent rights can be found in the PATENTS file in the same directory.
				 *
				 * @providesModule camelizeStyleName
				 * @typechecks
				 */

				"use strict";

				var camelize = _dereq_("./camelize");

				var msPattern = /^-ms-/;

				/**
				 * Camelcases a hyphenated CSS property name, for example:
				 *
				 *   > camelizeStyleName('background-color')
				 *   < "backgroundColor"
				 *   > camelizeStyleName('-moz-transition')
				 *   < "MozTransition"
				 *   > camelizeStyleName('-ms-transition')
				 *   < "msTransition"
				 *
				 * As Andi Smith suggests
				 * (http://www.andismith.com/blog/2012/02/modernizr-prefixed/), an `-ms` prefix
				 * is converted to lowercase `ms`.
				 *
				 * @param {string} string
				 * @return {string}
				 */
				function camelizeStyleName(string) {
				  return camelize(string.replace(msPattern, 'ms-'));
				}

				module.exports = camelizeStyleName;

				},{"./camelize":99}],101:[function(_dereq_,module,exports){
				/**
				 * Copyright 2013-2014, Facebook, Inc.
				 * All rights reserved.
				 *
				 * This source code is licensed under the BSD-style license found in the
				 * LICENSE file in the root directory of this source tree. An additional grant
				 * of patent rights can be found in the PATENTS file in the same directory.
				 *
				 * @providesModule containsNode
				 * @typechecks
				 */

				var isTextNode = _dereq_("./isTextNode");

				/*jslint bitwise:true */

				/**
				 * Checks if a given DOM node contains or is another DOM node.
				 *
				 * @param {?DOMNode} outerNode Outer DOM node.
				 * @param {?DOMNode} innerNode Inner DOM node.
				 * @return {boolean} True if `outerNode` contains or is `innerNode`.
				 */
				function containsNode(outerNode, innerNode) {
				  if (!outerNode || !innerNode) {
				    return false;
				  } else if (outerNode === innerNode) {
				    return true;
				  } else if (isTextNode(outerNode)) {
				    return false;
				  } else if (isTextNode(innerNode)) {
				    return containsNode(outerNode, innerNode.parentNode);
				  } else if (outerNode.contains) {
				    return outerNode.contains(innerNode);
				  } else if (outerNode.compareDocumentPosition) {
				    return !!(outerNode.compareDocumentPosition(innerNode) & 16);
				  } else {
				    return false;
				  }
				}

				module.exports = containsNode;

				},{"./isTextNode":130}],102:[function(_dereq_,module,exports){
				/**
				 * Copyright 2013-2014, Facebook, Inc.
				 * All rights reserved.
				 *
				 * This source code is licensed under the BSD-style license found in the
				 * LICENSE file in the root directory of this source tree. An additional grant
				 * of patent rights can be found in the PATENTS file in the same directory.
				 *
				 * @providesModule createArrayFrom
				 * @typechecks
				 */

				var toArray = _dereq_("./toArray");

				/**
				 * Perform a heuristic test to determine if an object is "array-like".
				 *
				 *   A monk asked Joshu, a Zen master, "Has a dog Buddha nature?"
				 *   Joshu replied: "Mu."
				 *
				 * This function determines if its argument has "array nature": it returns
				 * true if the argument is an actual array, an `arguments' object, or an
				 * HTMLCollection (e.g. node.childNodes or node.getElementsByTagName()).
				 *
				 * It will return false for other array-like objects like Filelist.
				 *
				 * @param {*} obj
				 * @return {boolean}
				 */
				function hasArrayNature(obj) {
				  return (
				    // not null/false
				    !!obj &&
				    // arrays are objects, NodeLists are functions in Safari
				    (typeof obj == 'object' || typeof obj == 'function') &&
				    // quacks like an array
				    ('length' in obj) &&
				    // not window
				    !('setInterval' in obj) &&
				    // no DOM node should be considered an array-like
				    // a 'select' element has 'length' and 'item' properties on IE8
				    (typeof obj.nodeType != 'number') &&
				    (
				      // a real array
				      (// HTMLCollection/NodeList
				      (Array.isArray(obj) ||
				      // arguments
				      ('callee' in obj) || 'item' in obj))
				    )
				  );
				}

				/**
				 * Ensure that the argument is an array by wrapping it in an array if it is not.
				 * Creates a copy of the argument if it is already an array.
				 *
				 * This is mostly useful idiomatically:
				 *
				 *   var createArrayFrom = require('createArrayFrom');
				 *
				 *   function takesOneOrMoreThings(things) {
				 *     things = createArrayFrom(things);
				 *     ...
				 *   }
				 *
				 * This allows you to treat `things' as an array, but accept scalars in the API.
				 *
				 * If you need to convert an array-like object, like `arguments`, into an array
				 * use toArray instead.
				 *
				 * @param {*} obj
				 * @return {array}
				 */
				function createArrayFrom(obj) {
				  if (!hasArrayNature(obj)) {
				    return [obj];
				  } else if (Array.isArray(obj)) {
				    return obj.slice();
				  } else {
				    return toArray(obj);
				  }
				}

				module.exports = createArrayFrom;

				},{"./toArray":143}],103:[function(_dereq_,module,exports){
				/**
				 * Copyright 2013-2014, Facebook, Inc.
				 * All rights reserved.
				 *
				 * This source code is licensed under the BSD-style license found in the
				 * LICENSE file in the root directory of this source tree. An additional grant
				 * of patent rights can be found in the PATENTS file in the same directory.
				 *
				 * @providesModule createFullPageComponent
				 * @typechecks
				 */

				"use strict";

				// Defeat circular references by requiring this directly.
				var ReactCompositeComponent = _dereq_("./ReactCompositeComponent");
				var ReactElement = _dereq_("./ReactElement");

				var invariant = _dereq_("./invariant");

				/**
				 * Create a component that will throw an exception when unmounted.
				 *
				 * Components like <html> <head> and <body> can't be removed or added
				 * easily in a cross-browser way, however it's valuable to be able to
				 * take advantage of React's reconciliation for styling and <title>
				 * management. So we just document it and throw in dangerous cases.
				 *
				 * @param {string} tag The tag to wrap
				 * @return {function} convenience constructor of new component
				 */
				function createFullPageComponent(tag) {
				  var elementFactory = ReactElement.createFactory(tag);

				  var FullPageComponent = ReactCompositeComponent.createClass({
				    displayName: 'ReactFullPageComponent' + tag,

				    componentWillUnmount: function() {
				      ("production" !== "development" ? invariant(
				        false,
				        '%s tried to unmount. Because of cross-browser quirks it is ' +
				        'impossible to unmount some top-level components (eg <html>, <head>, ' +
				        'and <body>) reliably and efficiently. To fix this, have a single ' +
				        'top-level component that never unmounts render these elements.',
				        this.constructor.displayName
				      ) : invariant(false));
				    },

				    render: function() {
				      return elementFactory(this.props);
				    }
				  });

				  return FullPageComponent;
				}

				module.exports = createFullPageComponent;

				},{"./ReactCompositeComponent":34,"./ReactElement":52,"./invariant":126}],104:[function(_dereq_,module,exports){
				/**
				 * Copyright 2013-2014, Facebook, Inc.
				 * All rights reserved.
				 *
				 * This source code is licensed under the BSD-style license found in the
				 * LICENSE file in the root directory of this source tree. An additional grant
				 * of patent rights can be found in the PATENTS file in the same directory.
				 *
				 * @providesModule createNodesFromMarkup
				 * @typechecks
				 */

				/*jslint evil: true, sub: true */

				var ExecutionEnvironment = _dereq_("./ExecutionEnvironment");

				var createArrayFrom = _dereq_("./createArrayFrom");
				var getMarkupWrap = _dereq_("./getMarkupWrap");
				var invariant = _dereq_("./invariant");

				/**
				 * Dummy container used to render all markup.
				 */
				var dummyNode =
				  ExecutionEnvironment.canUseDOM ? document.createElement('div') : null;

				/**
				 * Pattern used by `getNodeName`.
				 */
				var nodeNamePattern = /^\s*<(\w+)/;

				/**
				 * Extracts the `nodeName` of the first element in a string of markup.
				 *
				 * @param {string} markup String of markup.
				 * @return {?string} Node name of the supplied markup.
				 */
				function getNodeName(markup) {
				  var nodeNameMatch = markup.match(nodeNamePattern);
				  return nodeNameMatch && nodeNameMatch[1].toLowerCase();
				}

				/**
				 * Creates an array containing the nodes rendered from the supplied markup. The
				 * optionally supplied `handleScript` function will be invoked once for each
				 * <script> element that is rendered. If no `handleScript` function is supplied,
				 * an exception is thrown if any <script> elements are rendered.
				 *
				 * @param {string} markup A string of valid HTML markup.
				 * @param {?function} handleScript Invoked once for each rendered <script>.
				 * @return {array<DOMElement|DOMTextNode>} An array of rendered nodes.
				 */
				function createNodesFromMarkup(markup, handleScript) {
				  var node = dummyNode;
				  ("production" !== "development" ? invariant(!!dummyNode, 'createNodesFromMarkup dummy not initialized') : invariant(!!dummyNode));
				  var nodeName = getNodeName(markup);

				  var wrap = nodeName && getMarkupWrap(nodeName);
				  if (wrap) {
				    node.innerHTML = wrap[1] + markup + wrap[2];

				    var wrapDepth = wrap[0];
				    while (wrapDepth--) {
				      node = node.lastChild;
				    }
				  } else {
				    node.innerHTML = markup;
				  }

				  var scripts = node.getElementsByTagName('script');
				  if (scripts.length) {
				    ("production" !== "development" ? invariant(
				      handleScript,
				      'createNodesFromMarkup(...): Unexpected <script> element rendered.'
				    ) : invariant(handleScript));
				    createArrayFrom(scripts).forEach(handleScript);
				  }

				  var nodes = createArrayFrom(node.childNodes);
				  while (node.lastChild) {
				    node.removeChild(node.lastChild);
				  }
				  return nodes;
				}

				module.exports = createNodesFromMarkup;

				},{"./ExecutionEnvironment":22,"./createArrayFrom":102,"./getMarkupWrap":118,"./invariant":126}],105:[function(_dereq_,module,exports){
				/**
				 * Copyright 2013-2014, Facebook, Inc.
				 * All rights reserved.
				 *
				 * This source code is licensed under the BSD-style license found in the
				 * LICENSE file in the root directory of this source tree. An additional grant
				 * of patent rights can be found in the PATENTS file in the same directory.
				 *
				 * @providesModule dangerousStyleValue
				 * @typechecks static-only
				 */

				"use strict";

				var CSSProperty = _dereq_("./CSSProperty");

				var isUnitlessNumber = CSSProperty.isUnitlessNumber;

				/**
				 * Convert a value into the proper css writable value. The style name `name`
				 * should be logical (no hyphens), as specified
				 * in `CSSProperty.isUnitlessNumber`.
				 *
				 * @param {string} name CSS property name such as `topMargin`.
				 * @param {*} value CSS property value such as `10px`.
				 * @return {string} Normalized style value with dimensions applied.
				 */
				function dangerousStyleValue(name, value) {
				  // Note that we've removed escapeTextForBrowser() calls here since the
				  // whole string will be escaped when the attribute is injected into
				  // the markup. If you provide unsafe user data here they can inject
				  // arbitrary CSS which may be problematic (I couldn't repro this):
				  // https://www.owasp.org/index.php/XSS_Filter_Evasion_Cheat_Sheet
				  // http://www.thespanner.co.uk/2007/11/26/ultimate-xss-css-injection/
				  // This is not an XSS hole but instead a potential CSS injection issue
				  // which has lead to a greater discussion about how we're going to
				  // trust URLs moving forward. See #2115901

				  var isEmpty = value == null || typeof value === 'boolean' || value === '';
				  if (isEmpty) {
				    return '';
				  }

				  var isNonNumeric = isNaN(value);
				  if (isNonNumeric || value === 0 ||
				      isUnitlessNumber.hasOwnProperty(name) && isUnitlessNumber[name]) {
				    return '' + value; // cast to string
				  }

				  if (typeof value === 'string') {
				    value = value.trim();
				  }
				  return value + 'px';
				}

				module.exports = dangerousStyleValue;

				},{"./CSSProperty":4}],106:[function(_dereq_,module,exports){
				/**
				 * Copyright 2013-2014, Facebook, Inc.
				 * All rights reserved.
				 *
				 * This source code is licensed under the BSD-style license found in the
				 * LICENSE file in the root directory of this source tree. An additional grant
				 * of patent rights can be found in the PATENTS file in the same directory.
				 *
				 * @providesModule deprecated
				 */

				var assign = _dereq_("./Object.assign");
				var warning = _dereq_("./warning");

				/**
				 * This will log a single deprecation notice per function and forward the call
				 * on to the new API.
				 *
				 * @param {string} namespace The namespace of the call, eg 'React'
				 * @param {string} oldName The old function name, eg 'renderComponent'
				 * @param {string} newName The new function name, eg 'render'
				 * @param {*} ctx The context this forwarded call should run in
				 * @param {function} fn The function to forward on to
				 * @return {*} Will be the value as returned from `fn`
				 */
				function deprecated(namespace, oldName, newName, ctx, fn) {
				  var warned = false;
				  if ("production" !== "development") {
				    var newFn = function() {
				      ("production" !== "development" ? warning(
				        warned,
				        (namespace + "." + oldName + " will be deprecated in a future version. ") +
				        ("Use " + namespace + "." + newName + " instead.")
				      ) : null);
				      warned = true;
				      return fn.apply(ctx, arguments);
				    };
				    newFn.displayName = (namespace + "_" + oldName);
				    // We need to make sure all properties of the original fn are copied over.
				    // In particular, this is needed to support PropTypes
				    return assign(newFn, fn);
				  }

				  return fn;
				}

				module.exports = deprecated;

				},{"./Object.assign":27,"./warning":145}],107:[function(_dereq_,module,exports){
				/**
				 * Copyright 2013-2014, Facebook, Inc.
				 * All rights reserved.
				 *
				 * This source code is licensed under the BSD-style license found in the
				 * LICENSE file in the root directory of this source tree. An additional grant
				 * of patent rights can be found in the PATENTS file in the same directory.
				 *
				 * @providesModule emptyFunction
				 */

				function makeEmptyFunction(arg) {
				  return function() {
				    return arg;
				  };
				}

				/**
				 * This function accepts and discards inputs; it has no side effects. This is
				 * primarily useful idiomatically for overridable function endpoints which
				 * always need to be callable, since JS lacks a null-call idiom ala Cocoa.
				 */
				function emptyFunction() {}

				emptyFunction.thatReturns = makeEmptyFunction;
				emptyFunction.thatReturnsFalse = makeEmptyFunction(false);
				emptyFunction.thatReturnsTrue = makeEmptyFunction(true);
				emptyFunction.thatReturnsNull = makeEmptyFunction(null);
				emptyFunction.thatReturnsThis = function() { return this; };
				emptyFunction.thatReturnsArgument = function(arg) { return arg; };

				module.exports = emptyFunction;

				},{}],108:[function(_dereq_,module,exports){
				/**
				 * Copyright 2013-2014, Facebook, Inc.
				 * All rights reserved.
				 *
				 * This source code is licensed under the BSD-style license found in the
				 * LICENSE file in the root directory of this source tree. An additional grant
				 * of patent rights can be found in the PATENTS file in the same directory.
				 *
				 * @providesModule emptyObject
				 */

				"use strict";

				var emptyObject = {};

				if ("production" !== "development") {
				  Object.freeze(emptyObject);
				}

				module.exports = emptyObject;

				},{}],109:[function(_dereq_,module,exports){
				/**
				 * Copyright 2013-2014, Facebook, Inc.
				 * All rights reserved.
				 *
				 * This source code is licensed under the BSD-style license found in the
				 * LICENSE file in the root directory of this source tree. An additional grant
				 * of patent rights can be found in the PATENTS file in the same directory.
				 *
				 * @providesModule escapeTextForBrowser
				 * @typechecks static-only
				 */

				"use strict";

				var ESCAPE_LOOKUP = {
				  "&": "&amp;",
				  ">": "&gt;",
				  "<": "&lt;",
				  "\"": "&quot;",
				  "'": "&#x27;"
				};

				var ESCAPE_REGEX = /[&><"']/g;

				function escaper(match) {
				  return ESCAPE_LOOKUP[match];
				}

				/**
				 * Escapes text to prevent scripting attacks.
				 *
				 * @param {*} text Text value to escape.
				 * @return {string} An escaped string.
				 */
				function escapeTextForBrowser(text) {
				  return ('' + text).replace(ESCAPE_REGEX, escaper);
				}

				module.exports = escapeTextForBrowser;

				},{}],110:[function(_dereq_,module,exports){
				/**
				 * Copyright 2013-2014, Facebook, Inc.
				 * All rights reserved.
				 *
				 * This source code is licensed under the BSD-style license found in the
				 * LICENSE file in the root directory of this source tree. An additional grant
				 * of patent rights can be found in the PATENTS file in the same directory.
				 *
				 * @providesModule flattenChildren
				 */

				"use strict";

				var ReactTextComponent = _dereq_("./ReactTextComponent");

				var traverseAllChildren = _dereq_("./traverseAllChildren");
				var warning = _dereq_("./warning");

				/**
				 * @param {function} traverseContext Context passed through traversal.
				 * @param {?ReactComponent} child React child component.
				 * @param {!string} name String name of key path to child.
				 */
				function flattenSingleChildIntoContext(traverseContext, child, name) {
				  // We found a component instance.
				  var result = traverseContext;
				  var keyUnique = !result.hasOwnProperty(name);
				  ("production" !== "development" ? warning(
				    keyUnique,
				    'flattenChildren(...): Encountered two children with the same key, ' +
				    '`%s`. Child keys must be unique; when two children share a key, only ' +
				    'the first child will be used.',
				    name
				  ) : null);
				  if (keyUnique && child != null) {
				    var type = typeof child;
				    var normalizedValue;

				    if (type === 'string') {
				      normalizedValue = ReactTextComponent(child);
				    } else if (type === 'number') {
				      normalizedValue = ReactTextComponent('' + child);
				    } else {
				      normalizedValue = child;
				    }

				    result[name] = normalizedValue;
				  }
				}

				/**
				 * Flattens children that are typically specified as `props.children`. Any null
				 * children will not be included in the resulting object.
				 * @return {!object} flattened children keyed by name.
				 */
				function flattenChildren(children) {
				  if (children == null) {
				    return children;
				  }
				  var result = {};
				  traverseAllChildren(children, flattenSingleChildIntoContext, result);
				  return result;
				}

				module.exports = flattenChildren;

				},{"./ReactTextComponent":78,"./traverseAllChildren":144,"./warning":145}],111:[function(_dereq_,module,exports){
				/**
				 * Copyright 2014, Facebook, Inc.
				 * All rights reserved.
				 *
				 * This source code is licensed under the BSD-style license found in the
				 * LICENSE file in the root directory of this source tree. An additional grant
				 * of patent rights can be found in the PATENTS file in the same directory.
				 *
				 * @providesModule focusNode
				 */

				"use strict";

				/**
				 * @param {DOMElement} node input/textarea to focus
				 */
				function focusNode(node) {
				  // IE8 can throw "Can't move focus to the control because it is invisible,
				  // not enabled, or of a type that does not accept the focus." for all kinds of
				  // reasons that are too expensive and fragile to test.
				  try {
				    node.focus();
				  } catch(e) {
				  }
				}

				module.exports = focusNode;

				},{}],112:[function(_dereq_,module,exports){
				/**
				 * Copyright 2013-2014, Facebook, Inc.
				 * All rights reserved.
				 *
				 * This source code is licensed under the BSD-style license found in the
				 * LICENSE file in the root directory of this source tree. An additional grant
				 * of patent rights can be found in the PATENTS file in the same directory.
				 *
				 * @providesModule forEachAccumulated
				 */

				"use strict";

				/**
				 * @param {array} an "accumulation" of items which is either an Array or
				 * a single item. Useful when paired with the `accumulate` module. This is a
				 * simple utility that allows us to reason about a collection of items, but
				 * handling the case when there is exactly one item (and we do not need to
				 * allocate an array).
				 */
				var forEachAccumulated = function(arr, cb, scope) {
				  if (Array.isArray(arr)) {
				    arr.forEach(cb, scope);
				  } else if (arr) {
				    cb.call(scope, arr);
				  }
				};

				module.exports = forEachAccumulated;

				},{}],113:[function(_dereq_,module,exports){
				/**
				 * Copyright 2013-2014, Facebook, Inc.
				 * All rights reserved.
				 *
				 * This source code is licensed under the BSD-style license found in the
				 * LICENSE file in the root directory of this source tree. An additional grant
				 * of patent rights can be found in the PATENTS file in the same directory.
				 *
				 * @providesModule getActiveElement
				 * @typechecks
				 */

				/**
				 * Same as document.activeElement but wraps in a try-catch block. In IE it is
				 * not safe to call document.activeElement if there is nothing focused.
				 *
				 * The activeElement will be null only if the document body is not yet defined.
				 */
				function getActiveElement() /*?DOMElement*/ {
				  try {
				    return document.activeElement || document.body;
				  } catch (e) {
				    return document.body;
				  }
				}

				module.exports = getActiveElement;

				},{}],114:[function(_dereq_,module,exports){
				/**
				 * Copyright 2013-2014, Facebook, Inc.
				 * All rights reserved.
				 *
				 * This source code is licensed under the BSD-style license found in the
				 * LICENSE file in the root directory of this source tree. An additional grant
				 * of patent rights can be found in the PATENTS file in the same directory.
				 *
				 * @providesModule getEventCharCode
				 * @typechecks static-only
				 */

				"use strict";

				/**
				 * `charCode` represents the actual "character code" and is safe to use with
				 * `String.fromCharCode`. As such, only keys that correspond to printable
				 * characters produce a valid `charCode`, the only exception to this is Enter.
				 * The Tab-key is considered non-printable and does not have a `charCode`,
				 * presumably because it does not produce a tab-character in browsers.
				 *
				 * @param {object} nativeEvent Native browser event.
				 * @return {string} Normalized `charCode` property.
				 */
				function getEventCharCode(nativeEvent) {
				  var charCode;
				  var keyCode = nativeEvent.keyCode;

				  if ('charCode' in nativeEvent) {
				    charCode = nativeEvent.charCode;

				    // FF does not set `charCode` for the Enter-key, check against `keyCode`.
				    if (charCode === 0 && keyCode === 13) {
				      charCode = 13;
				    }
				  } else {
				    // IE8 does not implement `charCode`, but `keyCode` has the correct value.
				    charCode = keyCode;
				  }

				  // Some non-printable keys are reported in `charCode`/`keyCode`, discard them.
				  // Must not discard the (non-)printable Enter-key.
				  if (charCode >= 32 || charCode === 13) {
				    return charCode;
				  }

				  return 0;
				}

				module.exports = getEventCharCode;

				},{}],115:[function(_dereq_,module,exports){
				/**
				 * Copyright 2013-2014, Facebook, Inc.
				 * All rights reserved.
				 *
				 * This source code is licensed under the BSD-style license found in the
				 * LICENSE file in the root directory of this source tree. An additional grant
				 * of patent rights can be found in the PATENTS file in the same directory.
				 *
				 * @providesModule getEventKey
				 * @typechecks static-only
				 */

				"use strict";

				var getEventCharCode = _dereq_("./getEventCharCode");

				/**
				 * Normalization of deprecated HTML5 `key` values
				 * @see https://developer.mozilla.org/en-US/docs/Web/API/KeyboardEvent#Key_names
				 */
				var normalizeKey = {
				  'Esc': 'Escape',
				  'Spacebar': ' ',
				  'Left': 'ArrowLeft',
				  'Up': 'ArrowUp',
				  'Right': 'ArrowRight',
				  'Down': 'ArrowDown',
				  'Del': 'Delete',
				  'Win': 'OS',
				  'Menu': 'ContextMenu',
				  'Apps': 'ContextMenu',
				  'Scroll': 'ScrollLock',
				  'MozPrintableKey': 'Unidentified'
				};

				/**
				 * Translation from legacy `keyCode` to HTML5 `key`
				 * Only special keys supported, all others depend on keyboard layout or browser
				 * @see https://developer.mozilla.org/en-US/docs/Web/API/KeyboardEvent#Key_names
				 */
				var translateToKey = {
				  8: 'Backspace',
				  9: 'Tab',
				  12: 'Clear',
				  13: 'Enter',
				  16: 'Shift',
				  17: 'Control',
				  18: 'Alt',
				  19: 'Pause',
				  20: 'CapsLock',
				  27: 'Escape',
				  32: ' ',
				  33: 'PageUp',
				  34: 'PageDown',
				  35: 'End',
				  36: 'Home',
				  37: 'ArrowLeft',
				  38: 'ArrowUp',
				  39: 'ArrowRight',
				  40: 'ArrowDown',
				  45: 'Insert',
				  46: 'Delete',
				  112: 'F1', 113: 'F2', 114: 'F3', 115: 'F4', 116: 'F5', 117: 'F6',
				  118: 'F7', 119: 'F8', 120: 'F9', 121: 'F10', 122: 'F11', 123: 'F12',
				  144: 'NumLock',
				  145: 'ScrollLock',
				  224: 'Meta'
				};

				/**
				 * @param {object} nativeEvent Native browser event.
				 * @return {string} Normalized `key` property.
				 */
				function getEventKey(nativeEvent) {
				  if (nativeEvent.key) {
				    // Normalize inconsistent values reported by browsers due to
				    // implementations of a working draft specification.

				    // FireFox implements `key` but returns `MozPrintableKey` for all
				    // printable characters (normalized to `Unidentified`), ignore it.
				    var key = normalizeKey[nativeEvent.key] || nativeEvent.key;
				    if (key !== 'Unidentified') {
				      return key;
				    }
				  }

				  // Browser does not implement `key`, polyfill as much of it as we can.
				  if (nativeEvent.type === 'keypress') {
				    var charCode = getEventCharCode(nativeEvent);

				    // The enter-key is technically both printable and non-printable and can
				    // thus be captured by `keypress`, no other non-printable key should.
				    return charCode === 13 ? 'Enter' : String.fromCharCode(charCode);
				  }
				  if (nativeEvent.type === 'keydown' || nativeEvent.type === 'keyup') {
				    // While user keyboard layout determines the actual meaning of each
				    // `keyCode` value, almost all function keys have a universal value.
				    return translateToKey[nativeEvent.keyCode] || 'Unidentified';
				  }
				  return '';
				}

				module.exports = getEventKey;

				},{"./getEventCharCode":114}],116:[function(_dereq_,module,exports){
				/**
				 * Copyright 2013 Facebook, Inc.
				 * All rights reserved.
				 *
				 * This source code is licensed under the BSD-style license found in the
				 * LICENSE file in the root directory of this source tree. An additional grant
				 * of patent rights can be found in the PATENTS file in the same directory.
				 *
				 * @providesModule getEventModifierState
				 * @typechecks static-only
				 */

				"use strict";

				/**
				 * Translation from modifier key to the associated property in the event.
				 * @see http://www.w3.org/TR/DOM-Level-3-Events/#keys-Modifiers
				 */

				var modifierKeyToProp = {
				  'Alt': 'altKey',
				  'Control': 'ctrlKey',
				  'Meta': 'metaKey',
				  'Shift': 'shiftKey'
				};

				// IE8 does not implement getModifierState so we simply map it to the only
				// modifier keys exposed by the event itself, does not support Lock-keys.
				// Currently, all major browsers except Chrome seems to support Lock-keys.
				function modifierStateGetter(keyArg) {
				  /*jshint validthis:true */
				  var syntheticEvent = this;
				  var nativeEvent = syntheticEvent.nativeEvent;
				  if (nativeEvent.getModifierState) {
				    return nativeEvent.getModifierState(keyArg);
				  }
				  var keyProp = modifierKeyToProp[keyArg];
				  return keyProp ? !!nativeEvent[keyProp] : false;
				}

				function getEventModifierState(nativeEvent) {
				  return modifierStateGetter;
				}

				module.exports = getEventModifierState;

				},{}],117:[function(_dereq_,module,exports){
				/**
				 * Copyright 2013-2014, Facebook, Inc.
				 * All rights reserved.
				 *
				 * This source code is licensed under the BSD-style license found in the
				 * LICENSE file in the root directory of this source tree. An additional grant
				 * of patent rights can be found in the PATENTS file in the same directory.
				 *
				 * @providesModule getEventTarget
				 * @typechecks static-only
				 */

				"use strict";

				/**
				 * Gets the target node from a native browser event by accounting for
				 * inconsistencies in browser DOM APIs.
				 *
				 * @param {object} nativeEvent Native browser event.
				 * @return {DOMEventTarget} Target node.
				 */
				function getEventTarget(nativeEvent) {
				  var target = nativeEvent.target || nativeEvent.srcElement || window;
				  // Safari may fire events on text nodes (Node.TEXT_NODE is 3).
				  // @see http://www.quirksmode.org/js/events_properties.html
				  return target.nodeType === 3 ? target.parentNode : target;
				}

				module.exports = getEventTarget;

				},{}],118:[function(_dereq_,module,exports){
				/**
				 * Copyright 2013-2014, Facebook, Inc.
				 * All rights reserved.
				 *
				 * This source code is licensed under the BSD-style license found in the
				 * LICENSE file in the root directory of this source tree. An additional grant
				 * of patent rights can be found in the PATENTS file in the same directory.
				 *
				 * @providesModule getMarkupWrap
				 */

				var ExecutionEnvironment = _dereq_("./ExecutionEnvironment");

				var invariant = _dereq_("./invariant");

				/**
				 * Dummy container used to detect which wraps are necessary.
				 */
				var dummyNode =
				  ExecutionEnvironment.canUseDOM ? document.createElement('div') : null;

				/**
				 * Some browsers cannot use `innerHTML` to render certain elements standalone,
				 * so we wrap them, render the wrapped nodes, then extract the desired node.
				 *
				 * In IE8, certain elements cannot render alone, so wrap all elements ('*').
				 */
				var shouldWrap = {
				  // Force wrapping for SVG elements because if they get created inside a <div>,
				  // they will be initialized in the wrong namespace (and will not display).
				  'circle': true,
				  'defs': true,
				  'ellipse': true,
				  'g': true,
				  'line': true,
				  'linearGradient': true,
				  'path': true,
				  'polygon': true,
				  'polyline': true,
				  'radialGradient': true,
				  'rect': true,
				  'stop': true,
				  'text': true
				};

				var selectWrap = [1, '<select multiple="true">', '</select>'];
				var tableWrap = [1, '<table>', '</table>'];
				var trWrap = [3, '<table><tbody><tr>', '</tr></tbody></table>'];

				var svgWrap = [1, '<svg>', '</svg>'];

				var markupWrap = {
				  '*': [1, '?<div>', '</div>'],

				  'area': [1, '<map>', '</map>'],
				  'col': [2, '<table><tbody></tbody><colgroup>', '</colgroup></table>'],
				  'legend': [1, '<fieldset>', '</fieldset>'],
				  'param': [1, '<object>', '</object>'],
				  'tr': [2, '<table><tbody>', '</tbody></table>'],

				  'optgroup': selectWrap,
				  'option': selectWrap,

				  'caption': tableWrap,
				  'colgroup': tableWrap,
				  'tbody': tableWrap,
				  'tfoot': tableWrap,
				  'thead': tableWrap,

				  'td': trWrap,
				  'th': trWrap,

				  'circle': svgWrap,
				  'defs': svgWrap,
				  'ellipse': svgWrap,
				  'g': svgWrap,
				  'line': svgWrap,
				  'linearGradient': svgWrap,
				  'path': svgWrap,
				  'polygon': svgWrap,
				  'polyline': svgWrap,
				  'radialGradient': svgWrap,
				  'rect': svgWrap,
				  'stop': svgWrap,
				  'text': svgWrap
				};

				/**
				 * Gets the markup wrap configuration for the supplied `nodeName`.
				 *
				 * NOTE: This lazily detects which wraps are necessary for the current browser.
				 *
				 * @param {string} nodeName Lowercase `nodeName`.
				 * @return {?array} Markup wrap configuration, if applicable.
				 */
				function getMarkupWrap(nodeName) {
				  ("production" !== "development" ? invariant(!!dummyNode, 'Markup wrapping node not initialized') : invariant(!!dummyNode));
				  if (!markupWrap.hasOwnProperty(nodeName)) {
				    nodeName = '*';
				  }
				  if (!shouldWrap.hasOwnProperty(nodeName)) {
				    if (nodeName === '*') {
				      dummyNode.innerHTML = '<link />';
				    } else {
				      dummyNode.innerHTML = '<' + nodeName + '></' + nodeName + '>';
				    }
				    shouldWrap[nodeName] = !dummyNode.firstChild;
				  }
				  return shouldWrap[nodeName] ? markupWrap[nodeName] : null;
				}


				module.exports = getMarkupWrap;

				},{"./ExecutionEnvironment":22,"./invariant":126}],119:[function(_dereq_,module,exports){
				/**
				 * Copyright 2013-2014, Facebook, Inc.
				 * All rights reserved.
				 *
				 * This source code is licensed under the BSD-style license found in the
				 * LICENSE file in the root directory of this source tree. An additional grant
				 * of patent rights can be found in the PATENTS file in the same directory.
				 *
				 * @providesModule getNodeForCharacterOffset
				 */

				"use strict";

				/**
				 * Given any node return the first leaf node without children.
				 *
				 * @param {DOMElement|DOMTextNode} node
				 * @return {DOMElement|DOMTextNode}
				 */
				function getLeafNode(node) {
				  while (node && node.firstChild) {
				    node = node.firstChild;
				  }
				  return node;
				}

				/**
				 * Get the next sibling within a container. This will walk up the
				 * DOM if a node's siblings have been exhausted.
				 *
				 * @param {DOMElement|DOMTextNode} node
				 * @return {?DOMElement|DOMTextNode}
				 */
				function getSiblingNode(node) {
				  while (node) {
				    if (node.nextSibling) {
				      return node.nextSibling;
				    }
				    node = node.parentNode;
				  }
				}

				/**
				 * Get object describing the nodes which contain characters at offset.
				 *
				 * @param {DOMElement|DOMTextNode} root
				 * @param {number} offset
				 * @return {?object}
				 */
				function getNodeForCharacterOffset(root, offset) {
				  var node = getLeafNode(root);
				  var nodeStart = 0;
				  var nodeEnd = 0;

				  while (node) {
				    if (node.nodeType == 3) {
				      nodeEnd = nodeStart + node.textContent.length;

				      if (nodeStart <= offset && nodeEnd >= offset) {
				        return {
				          node: node,
				          offset: offset - nodeStart
				        };
				      }

				      nodeStart = nodeEnd;
				    }

				    node = getLeafNode(getSiblingNode(node));
				  }
				}

				module.exports = getNodeForCharacterOffset;

				},{}],120:[function(_dereq_,module,exports){
				/**
				 * Copyright 2013-2014, Facebook, Inc.
				 * All rights reserved.
				 *
				 * This source code is licensed under the BSD-style license found in the
				 * LICENSE file in the root directory of this source tree. An additional grant
				 * of patent rights can be found in the PATENTS file in the same directory.
				 *
				 * @providesModule getReactRootElementInContainer
				 */

				"use strict";

				var DOC_NODE_TYPE = 9;

				/**
				 * @param {DOMElement|DOMDocument} container DOM element that may contain
				 *                                           a React component
				 * @return {?*} DOM element that may have the reactRoot ID, or null.
				 */
				function getReactRootElementInContainer(container) {
				  if (!container) {
				    return null;
				  }

				  if (container.nodeType === DOC_NODE_TYPE) {
				    return container.documentElement;
				  } else {
				    return container.firstChild;
				  }
				}

				module.exports = getReactRootElementInContainer;

				},{}],121:[function(_dereq_,module,exports){
				/**
				 * Copyright 2013-2014, Facebook, Inc.
				 * All rights reserved.
				 *
				 * This source code is licensed under the BSD-style license found in the
				 * LICENSE file in the root directory of this source tree. An additional grant
				 * of patent rights can be found in the PATENTS file in the same directory.
				 *
				 * @providesModule getTextContentAccessor
				 */

				"use strict";

				var ExecutionEnvironment = _dereq_("./ExecutionEnvironment");

				var contentKey = null;

				/**
				 * Gets the key used to access text content on a DOM node.
				 *
				 * @return {?string} Key used to access text content.
				 * @internal
				 */
				function getTextContentAccessor() {
				  if (!contentKey && ExecutionEnvironment.canUseDOM) {
				    // Prefer textContent to innerText because many browsers support both but
				    // SVG <text> elements don't support innerText even when <div> does.
				    contentKey = 'textContent' in document.documentElement ?
				      'textContent' :
				      'innerText';
				  }
				  return contentKey;
				}

				module.exports = getTextContentAccessor;

				},{"./ExecutionEnvironment":22}],122:[function(_dereq_,module,exports){
				/**
				 * Copyright 2013-2014, Facebook, Inc.
				 * All rights reserved.
				 *
				 * This source code is licensed under the BSD-style license found in the
				 * LICENSE file in the root directory of this source tree. An additional grant
				 * of patent rights can be found in the PATENTS file in the same directory.
				 *
				 * @providesModule getUnboundedScrollPosition
				 * @typechecks
				 */

				"use strict";

				/**
				 * Gets the scroll position of the supplied element or window.
				 *
				 * The return values are unbounded, unlike `getScrollPosition`. This means they
				 * may be negative or exceed the element boundaries (which is possible using
				 * inertial scrolling).
				 *
				 * @param {DOMWindow|DOMElement} scrollable
				 * @return {object} Map with `x` and `y` keys.
				 */
				function getUnboundedScrollPosition(scrollable) {
				  if (scrollable === window) {
				    return {
				      x: window.pageXOffset || document.documentElement.scrollLeft,
				      y: window.pageYOffset || document.documentElement.scrollTop
				    };
				  }
				  return {
				    x: scrollable.scrollLeft,
				    y: scrollable.scrollTop
				  };
				}

				module.exports = getUnboundedScrollPosition;

				},{}],123:[function(_dereq_,module,exports){
				/**
				 * Copyright 2013-2014, Facebook, Inc.
				 * All rights reserved.
				 *
				 * This source code is licensed under the BSD-style license found in the
				 * LICENSE file in the root directory of this source tree. An additional grant
				 * of patent rights can be found in the PATENTS file in the same directory.
				 *
				 * @providesModule hyphenate
				 * @typechecks
				 */

				var _uppercasePattern = /([A-Z])/g;

				/**
				 * Hyphenates a camelcased string, for example:
				 *
				 *   > hyphenate('backgroundColor')
				 *   < "background-color"
				 *
				 * For CSS style names, use `hyphenateStyleName` instead which works properly
				 * with all vendor prefixes, including `ms`.
				 *
				 * @param {string} string
				 * @return {string}
				 */
				function hyphenate(string) {
				  return string.replace(_uppercasePattern, '-$1').toLowerCase();
				}

				module.exports = hyphenate;

				},{}],124:[function(_dereq_,module,exports){
				/**
				 * Copyright 2013-2014, Facebook, Inc.
				 * All rights reserved.
				 *
				 * This source code is licensed under the BSD-style license found in the
				 * LICENSE file in the root directory of this source tree. An additional grant
				 * of patent rights can be found in the PATENTS file in the same directory.
				 *
				 * @providesModule hyphenateStyleName
				 * @typechecks
				 */

				"use strict";

				var hyphenate = _dereq_("./hyphenate");

				var msPattern = /^ms-/;

				/**
				 * Hyphenates a camelcased CSS property name, for example:
				 *
				 *   > hyphenateStyleName('backgroundColor')
				 *   < "background-color"
				 *   > hyphenateStyleName('MozTransition')
				 *   < "-moz-transition"
				 *   > hyphenateStyleName('msTransition')
				 *   < "-ms-transition"
				 *
				 * As Modernizr suggests (http://modernizr.com/docs/#prefixed), an `ms` prefix
				 * is converted to `-ms-`.
				 *
				 * @param {string} string
				 * @return {string}
				 */
				function hyphenateStyleName(string) {
				  return hyphenate(string).replace(msPattern, '-ms-');
				}

				module.exports = hyphenateStyleName;

				},{"./hyphenate":123}],125:[function(_dereq_,module,exports){
				/**
				 * Copyright 2013-2014, Facebook, Inc.
				 * All rights reserved.
				 *
				 * This source code is licensed under the BSD-style license found in the
				 * LICENSE file in the root directory of this source tree. An additional grant
				 * of patent rights can be found in the PATENTS file in the same directory.
				 *
				 * @providesModule instantiateReactComponent
				 * @typechecks static-only
				 */

				"use strict";

				var warning = _dereq_("./warning");

				var ReactElement = _dereq_("./ReactElement");
				var ReactLegacyElement = _dereq_("./ReactLegacyElement");
				var ReactNativeComponent = _dereq_("./ReactNativeComponent");
				var ReactEmptyComponent = _dereq_("./ReactEmptyComponent");

				/**
				 * Given an `element` create an instance that will actually be mounted.
				 *
				 * @param {object} element
				 * @param {*} parentCompositeType The composite type that resolved this.
				 * @return {object} A new instance of the element's constructor.
				 * @protected
				 */
				function instantiateReactComponent(element, parentCompositeType) {
				  var instance;

				  if ("production" !== "development") {
				    ("production" !== "development" ? warning(
				      element && (typeof element.type === 'function' ||
				                     typeof element.type === 'string'),
				      'Only functions or strings can be mounted as React components.'
				    ) : null);

				    // Resolve mock instances
				    if (element.type._mockedReactClassConstructor) {
				      // If this is a mocked class, we treat the legacy factory as if it was the
				      // class constructor for future proofing unit tests. Because this might
				      // be mocked as a legacy factory, we ignore any warnings triggerd by
				      // this temporary hack.
				      ReactLegacyElement._isLegacyCallWarningEnabled = false;
				      try {
				        instance = new element.type._mockedReactClassConstructor(
				          element.props
				        );
				      } finally {
				        ReactLegacyElement._isLegacyCallWarningEnabled = true;
				      }

				      // If the mock implementation was a legacy factory, then it returns a
				      // element. We need to turn this into a real component instance.
				      if (ReactElement.isValidElement(instance)) {
				        instance = new instance.type(instance.props);
				      }

				      var render = instance.render;
				      if (!render) {
				        // For auto-mocked factories, the prototype isn't shimmed and therefore
				        // there is no render function on the instance. We replace the whole
				        // component with an empty component instance instead.
				        element = ReactEmptyComponent.getEmptyComponent();
				      } else {
				        if (render._isMockFunction && !render._getMockImplementation()) {
				          // Auto-mocked components may have a prototype with a mocked render
				          // function. For those, we'll need to mock the result of the render
				          // since we consider undefined to be invalid results from render.
				          render.mockImplementation(
				            ReactEmptyComponent.getEmptyComponent
				          );
				        }
				        instance.construct(element);
				        return instance;
				      }
				    }
				  }

				  // Special case string values
				  if (typeof element.type === 'string') {
				    instance = ReactNativeComponent.createInstanceForTag(
				      element.type,
				      element.props,
				      parentCompositeType
				    );
				  } else {
				    // Normal case for non-mocks and non-strings
				    instance = new element.type(element.props);
				  }

				  if ("production" !== "development") {
				    ("production" !== "development" ? warning(
				      typeof instance.construct === 'function' &&
				      typeof instance.mountComponent === 'function' &&
				      typeof instance.receiveComponent === 'function',
				      'Only React Components can be mounted.'
				    ) : null);
				  }

				  // This actually sets up the internal instance. This will become decoupled
				  // from the public instance in a future diff.
				  instance.construct(element);

				  return instance;
				}

				module.exports = instantiateReactComponent;

				},{"./ReactElement":52,"./ReactEmptyComponent":54,"./ReactLegacyElement":61,"./ReactNativeComponent":66,"./warning":145}],126:[function(_dereq_,module,exports){
				/**
				 * Copyright 2013-2014, Facebook, Inc.
				 * All rights reserved.
				 *
				 * This source code is licensed under the BSD-style license found in the
				 * LICENSE file in the root directory of this source tree. An additional grant
				 * of patent rights can be found in the PATENTS file in the same directory.
				 *
				 * @providesModule invariant
				 */

				"use strict";

				/**
				 * Use invariant() to assert state which your program assumes to be true.
				 *
				 * Provide sprintf-style format (only %s is supported) and arguments
				 * to provide information about what broke and what you were
				 * expecting.
				 *
				 * The invariant message will be stripped in production, but the invariant
				 * will remain to ensure logic does not differ in production.
				 */

				var invariant = function(condition, format, a, b, c, d, e, f) {
				  if ("production" !== "development") {
				    if (format === undefined) {
				      throw new Error('invariant requires an error message argument');
				    }
				  }

				  if (!condition) {
				    var error;
				    if (format === undefined) {
				      error = new Error(
				        'Minified exception occurred; use the non-minified dev environment ' +
				        'for the full error message and additional helpful warnings.'
				      );
				    } else {
				      var args = [a, b, c, d, e, f];
				      var argIndex = 0;
				      error = new Error(
				        'Invariant Violation: ' +
				        format.replace(/%s/g, function() { return args[argIndex++]; })
				      );
				    }

				    error.framesToPop = 1; // we don't care about invariant's own frame
				    throw error;
				  }
				};

				module.exports = invariant;

				},{}],127:[function(_dereq_,module,exports){
				/**
				 * Copyright 2013-2014, Facebook, Inc.
				 * All rights reserved.
				 *
				 * This source code is licensed under the BSD-style license found in the
				 * LICENSE file in the root directory of this source tree. An additional grant
				 * of patent rights can be found in the PATENTS file in the same directory.
				 *
				 * @providesModule isEventSupported
				 */

				"use strict";

				var ExecutionEnvironment = _dereq_("./ExecutionEnvironment");

				var useHasFeature;
				if (ExecutionEnvironment.canUseDOM) {
				  useHasFeature =
				    document.implementation &&
				    document.implementation.hasFeature &&
				    // always returns true in newer browsers as per the standard.
				    // @see http://dom.spec.whatwg.org/#dom-domimplementation-hasfeature
				    document.implementation.hasFeature('', '') !== true;
				}

				/**
				 * Checks if an event is supported in the current execution environment.
				 *
				 * NOTE: This will not work correctly for non-generic events such as `change`,
				 * `reset`, `load`, `error`, and `select`.
				 *
				 * Borrows from Modernizr.
				 *
				 * @param {string} eventNameSuffix Event name, e.g. "click".
				 * @param {?boolean} capture Check if the capture phase is supported.
				 * @return {boolean} True if the event is supported.
				 * @internal
				 * @license Modernizr 3.0.0pre (Custom Build) | MIT
				 */
				function isEventSupported(eventNameSuffix, capture) {
				  if (!ExecutionEnvironment.canUseDOM ||
				      capture && !('addEventListener' in document)) {
				    return false;
				  }

				  var eventName = 'on' + eventNameSuffix;
				  var isSupported = eventName in document;

				  if (!isSupported) {
				    var element = document.createElement('div');
				    element.setAttribute(eventName, 'return;');
				    isSupported = typeof element[eventName] === 'function';
				  }

				  if (!isSupported && useHasFeature && eventNameSuffix === 'wheel') {
				    // This is the only way to test support for the `wheel` event in IE9+.
				    isSupported = document.implementation.hasFeature('Events.wheel', '3.0');
				  }

				  return isSupported;
				}

				module.exports = isEventSupported;

				},{"./ExecutionEnvironment":22}],128:[function(_dereq_,module,exports){
				/**
				 * Copyright 2013-2014, Facebook, Inc.
				 * All rights reserved.
				 *
				 * This source code is licensed under the BSD-style license found in the
				 * LICENSE file in the root directory of this source tree. An additional grant
				 * of patent rights can be found in the PATENTS file in the same directory.
				 *
				 * @providesModule isNode
				 * @typechecks
				 */

				/**
				 * @param {*} object The object to check.
				 * @return {boolean} Whether or not the object is a DOM node.
				 */
				function isNode(object) {
				  return !!(object && (
				    typeof Node === 'function' ? object instanceof Node :
				      typeof object === 'object' &&
				      typeof object.nodeType === 'number' &&
				      typeof object.nodeName === 'string'
				  ));
				}

				module.exports = isNode;

				},{}],129:[function(_dereq_,module,exports){
				/**
				 * Copyright 2013-2014, Facebook, Inc.
				 * All rights reserved.
				 *
				 * This source code is licensed under the BSD-style license found in the
				 * LICENSE file in the root directory of this source tree. An additional grant
				 * of patent rights can be found in the PATENTS file in the same directory.
				 *
				 * @providesModule isTextInputElement
				 */

				"use strict";

				/**
				 * @see http://www.whatwg.org/specs/web-apps/current-work/multipage/the-input-element.html#input-type-attr-summary
				 */
				var supportedInputTypes = {
				  'color': true,
				  'date': true,
				  'datetime': true,
				  'datetime-local': true,
				  'email': true,
				  'month': true,
				  'number': true,
				  'password': true,
				  'range': true,
				  'search': true,
				  'tel': true,
				  'text': true,
				  'time': true,
				  'url': true,
				  'week': true
				};

				function isTextInputElement(elem) {
				  return elem && (
				    (elem.nodeName === 'INPUT' && supportedInputTypes[elem.type]) ||
				    elem.nodeName === 'TEXTAREA'
				  );
				}

				module.exports = isTextInputElement;

				},{}],130:[function(_dereq_,module,exports){
				/**
				 * Copyright 2013-2014, Facebook, Inc.
				 * All rights reserved.
				 *
				 * This source code is licensed under the BSD-style license found in the
				 * LICENSE file in the root directory of this source tree. An additional grant
				 * of patent rights can be found in the PATENTS file in the same directory.
				 *
				 * @providesModule isTextNode
				 * @typechecks
				 */

				var isNode = _dereq_("./isNode");

				/**
				 * @param {*} object The object to check.
				 * @return {boolean} Whether or not the object is a DOM text node.
				 */
				function isTextNode(object) {
				  return isNode(object) && object.nodeType == 3;
				}

				module.exports = isTextNode;

				},{"./isNode":128}],131:[function(_dereq_,module,exports){
				/**
				 * Copyright 2013-2014, Facebook, Inc.
				 * All rights reserved.
				 *
				 * This source code is licensed under the BSD-style license found in the
				 * LICENSE file in the root directory of this source tree. An additional grant
				 * of patent rights can be found in the PATENTS file in the same directory.
				 *
				 * @providesModule joinClasses
				 * @typechecks static-only
				 */

				"use strict";

				/**
				 * Combines multiple className strings into one.
				 * http://jsperf.com/joinclasses-args-vs-array
				 *
				 * @param {...?string} classes
				 * @return {string}
				 */
				function joinClasses(className/*, ... */) {
				  if (!className) {
				    className = '';
				  }
				  var nextClass;
				  var argLength = arguments.length;
				  if (argLength > 1) {
				    for (var ii = 1; ii < argLength; ii++) {
				      nextClass = arguments[ii];
				      if (nextClass) {
				        className = (className ? className + ' ' : '') + nextClass;
				      }
				    }
				  }
				  return className;
				}

				module.exports = joinClasses;

				},{}],132:[function(_dereq_,module,exports){
				/**
				 * Copyright 2013-2014, Facebook, Inc.
				 * All rights reserved.
				 *
				 * This source code is licensed under the BSD-style license found in the
				 * LICENSE file in the root directory of this source tree. An additional grant
				 * of patent rights can be found in the PATENTS file in the same directory.
				 *
				 * @providesModule keyMirror
				 * @typechecks static-only
				 */

				"use strict";

				var invariant = _dereq_("./invariant");

				/**
				 * Constructs an enumeration with keys equal to their value.
				 *
				 * For example:
				 *
				 *   var COLORS = keyMirror({blue: null, red: null});
				 *   var myColor = COLORS.blue;
				 *   var isColorValid = !!COLORS[myColor];
				 *
				 * The last line could not be performed if the values of the generated enum were
				 * not equal to their keys.
				 *
				 *   Input:  {key1: val1, key2: val2}
				 *   Output: {key1: key1, key2: key2}
				 *
				 * @param {object} obj
				 * @return {object}
				 */
				var keyMirror = function(obj) {
				  var ret = {};
				  var key;
				  ("production" !== "development" ? invariant(
				    obj instanceof Object && !Array.isArray(obj),
				    'keyMirror(...): Argument must be an object.'
				  ) : invariant(obj instanceof Object && !Array.isArray(obj)));
				  for (key in obj) {
				    if (!obj.hasOwnProperty(key)) {
				      continue;
				    }
				    ret[key] = key;
				  }
				  return ret;
				};

				module.exports = keyMirror;

				},{"./invariant":126}],133:[function(_dereq_,module,exports){
				/**
				 * Copyright 2013-2014, Facebook, Inc.
				 * All rights reserved.
				 *
				 * This source code is licensed under the BSD-style license found in the
				 * LICENSE file in the root directory of this source tree. An additional grant
				 * of patent rights can be found in the PATENTS file in the same directory.
				 *
				 * @providesModule keyOf
				 */

				/**
				 * Allows extraction of a minified key. Let's the build system minify keys
				 * without loosing the ability to dynamically use key strings as values
				 * themselves. Pass in an object with a single key/val pair and it will return
				 * you the string key of that single record. Suppose you want to grab the
				 * value for a key 'className' inside of an object. Key/val minification may
				 * have aliased that key to be 'xa12'. keyOf({className: null}) will return
				 * 'xa12' in that case. Resolve keys you want to use once at startup time, then
				 * reuse those resolutions.
				 */
				var keyOf = function(oneKeyObj) {
				  var key;
				  for (key in oneKeyObj) {
				    if (!oneKeyObj.hasOwnProperty(key)) {
				      continue;
				    }
				    return key;
				  }
				  return null;
				};


				module.exports = keyOf;

				},{}],134:[function(_dereq_,module,exports){
				/**
				 * Copyright 2013-2014, Facebook, Inc.
				 * All rights reserved.
				 *
				 * This source code is licensed under the BSD-style license found in the
				 * LICENSE file in the root directory of this source tree. An additional grant
				 * of patent rights can be found in the PATENTS file in the same directory.
				 *
				 * @providesModule mapObject
				 */

				'use strict';

				var hasOwnProperty = Object.prototype.hasOwnProperty;

				/**
				 * Executes the provided `callback` once for each enumerable own property in the
				 * object and constructs a new object from the results. The `callback` is
				 * invoked with three arguments:
				 *
				 *  - the property value
				 *  - the property name
				 *  - the object being traversed
				 *
				 * Properties that are added after the call to `mapObject` will not be visited
				 * by `callback`. If the values of existing properties are changed, the value
				 * passed to `callback` will be the value at the time `mapObject` visits them.
				 * Properties that are deleted before being visited are not visited.
				 *
				 * @grep function objectMap()
				 * @grep function objMap()
				 *
				 * @param {?object} object
				 * @param {function} callback
				 * @param {*} context
				 * @return {?object}
				 */
				function mapObject(object, callback, context) {
				  if (!object) {
				    return null;
				  }
				  var result = {};
				  for (var name in object) {
				    if (hasOwnProperty.call(object, name)) {
				      result[name] = callback.call(context, object[name], name, object);
				    }
				  }
				  return result;
				}

				module.exports = mapObject;

				},{}],135:[function(_dereq_,module,exports){
				/**
				 * Copyright 2013-2014, Facebook, Inc.
				 * All rights reserved.
				 *
				 * This source code is licensed under the BSD-style license found in the
				 * LICENSE file in the root directory of this source tree. An additional grant
				 * of patent rights can be found in the PATENTS file in the same directory.
				 *
				 * @providesModule memoizeStringOnly
				 * @typechecks static-only
				 */

				"use strict";

				/**
				 * Memoizes the return value of a function that accepts one string argument.
				 *
				 * @param {function} callback
				 * @return {function}
				 */
				function memoizeStringOnly(callback) {
				  var cache = {};
				  return function(string) {
				    if (cache.hasOwnProperty(string)) {
				      return cache[string];
				    } else {
				      return cache[string] = callback.call(this, string);
				    }
				  };
				}

				module.exports = memoizeStringOnly;

				},{}],136:[function(_dereq_,module,exports){
				/**
				 * Copyright 2014, Facebook, Inc.
				 * All rights reserved.
				 *
				 * This source code is licensed under the BSD-style license found in the
				 * LICENSE file in the root directory of this source tree. An additional grant
				 * of patent rights can be found in the PATENTS file in the same directory.
				 *
				 * @providesModule monitorCodeUse
				 */

				"use strict";

				var invariant = _dereq_("./invariant");

				/**
				 * Provides open-source compatible instrumentation for monitoring certain API
				 * uses before we're ready to issue a warning or refactor. It accepts an event
				 * name which may only contain the characters [a-z0-9_] and an optional data
				 * object with further information.
				 */

				function monitorCodeUse(eventName, data) {
				  ("production" !== "development" ? invariant(
				    eventName && !/[^a-z0-9_]/.test(eventName),
				    'You must provide an eventName using only the characters [a-z0-9_]'
				  ) : invariant(eventName && !/[^a-z0-9_]/.test(eventName)));
				}

				module.exports = monitorCodeUse;

				},{"./invariant":126}],137:[function(_dereq_,module,exports){
				/**
				 * Copyright 2013-2014, Facebook, Inc.
				 * All rights reserved.
				 *
				 * This source code is licensed under the BSD-style license found in the
				 * LICENSE file in the root directory of this source tree. An additional grant
				 * of patent rights can be found in the PATENTS file in the same directory.
				 *
				 * @providesModule onlyChild
				 */
				"use strict";

				var ReactElement = _dereq_("./ReactElement");

				var invariant = _dereq_("./invariant");

				/**
				 * Returns the first child in a collection of children and verifies that there
				 * is only one child in the collection. The current implementation of this
				 * function assumes that a single child gets passed without a wrapper, but the
				 * purpose of this helper function is to abstract away the particular structure
				 * of children.
				 *
				 * @param {?object} children Child collection structure.
				 * @return {ReactComponent} The first and only `ReactComponent` contained in the
				 * structure.
				 */
				function onlyChild(children) {
				  ("production" !== "development" ? invariant(
				    ReactElement.isValidElement(children),
				    'onlyChild must be passed a children with exactly one child.'
				  ) : invariant(ReactElement.isValidElement(children)));
				  return children;
				}

				module.exports = onlyChild;

				},{"./ReactElement":52,"./invariant":126}],138:[function(_dereq_,module,exports){
				/**
				 * Copyright 2013-2014, Facebook, Inc.
				 * All rights reserved.
				 *
				 * This source code is licensed under the BSD-style license found in the
				 * LICENSE file in the root directory of this source tree. An additional grant
				 * of patent rights can be found in the PATENTS file in the same directory.
				 *
				 * @providesModule performance
				 * @typechecks
				 */

				"use strict";

				var ExecutionEnvironment = _dereq_("./ExecutionEnvironment");

				var performance;

				if (ExecutionEnvironment.canUseDOM) {
				  performance =
				    window.performance ||
				    window.msPerformance ||
				    window.webkitPerformance;
				}

				module.exports = performance || {};

				},{"./ExecutionEnvironment":22}],139:[function(_dereq_,module,exports){
				/**
				 * Copyright 2013-2014, Facebook, Inc.
				 * All rights reserved.
				 *
				 * This source code is licensed under the BSD-style license found in the
				 * LICENSE file in the root directory of this source tree. An additional grant
				 * of patent rights can be found in the PATENTS file in the same directory.
				 *
				 * @providesModule performanceNow
				 * @typechecks
				 */

				var performance = _dereq_("./performance");

				/**
				 * Detect if we can use `window.performance.now()` and gracefully fallback to
				 * `Date.now()` if it doesn't exist. We need to support Firefox < 15 for now
				 * because of Facebook's testing infrastructure.
				 */
				if (!performance || !performance.now) {
				  performance = Date;
				}

				var performanceNow = performance.now.bind(performance);

				module.exports = performanceNow;

				},{"./performance":138}],140:[function(_dereq_,module,exports){
				/**
				 * Copyright 2013-2014, Facebook, Inc.
				 * All rights reserved.
				 *
				 * This source code is licensed under the BSD-style license found in the
				 * LICENSE file in the root directory of this source tree. An additional grant
				 * of patent rights can be found in the PATENTS file in the same directory.
				 *
				 * @providesModule setInnerHTML
				 */

				"use strict";

				var ExecutionEnvironment = _dereq_("./ExecutionEnvironment");

				var WHITESPACE_TEST = /^[ \r\n\t\f]/;
				var NONVISIBLE_TEST = /<(!--|link|noscript|meta|script|style)[ \r\n\t\f\/>]/;

				/**
				 * Set the innerHTML property of a node, ensuring that whitespace is preserved
				 * even in IE8.
				 *
				 * @param {DOMElement} node
				 * @param {string} html
				 * @internal
				 */
				var setInnerHTML = function(node, html) {
				  node.innerHTML = html;
				};

				if (ExecutionEnvironment.canUseDOM) {
				  // IE8: When updating a just created node with innerHTML only leading
				  // whitespace is removed. When updating an existing node with innerHTML
				  // whitespace in root TextNodes is also collapsed.
				  // @see quirksmode.org/bugreports/archives/2004/11/innerhtml_and_t.html

				  // Feature detection; only IE8 is known to behave improperly like this.
				  var testElement = document.createElement('div');
				  testElement.innerHTML = ' ';
				  if (testElement.innerHTML === '') {
				    setInnerHTML = function(node, html) {
				      // Magic theory: IE8 supposedly differentiates between added and updated
				      // nodes when processing innerHTML, innerHTML on updated nodes suffers
				      // from worse whitespace behavior. Re-adding a node like this triggers
				      // the initial and more favorable whitespace behavior.
				      // TODO: What to do on a detached node?
				      if (node.parentNode) {
				        node.parentNode.replaceChild(node, node);
				      }

				      // We also implement a workaround for non-visible tags disappearing into
				      // thin air on IE8, this only happens if there is no visible text
				      // in-front of the non-visible tags. Piggyback on the whitespace fix
				      // and simply check if any non-visible tags appear in the source.
				      if (WHITESPACE_TEST.test(html) ||
				          html[0] === '<' && NONVISIBLE_TEST.test(html)) {
				        // Recover leading whitespace by temporarily prepending any character.
				        // \uFEFF has the potential advantage of being zero-width/invisible.
				        node.innerHTML = '\uFEFF' + html;

				        // deleteData leaves an empty `TextNode` which offsets the index of all
				        // children. Definitely want to avoid this.
				        var textNode = node.firstChild;
				        if (textNode.data.length === 1) {
				          node.removeChild(textNode);
				        } else {
				          textNode.deleteData(0, 1);
				        }
				      } else {
				        node.innerHTML = html;
				      }
				    };
				  }
				}

				module.exports = setInnerHTML;

				},{"./ExecutionEnvironment":22}],141:[function(_dereq_,module,exports){
				/**
				 * Copyright 2013-2014, Facebook, Inc.
				 * All rights reserved.
				 *
				 * This source code is licensed under the BSD-style license found in the
				 * LICENSE file in the root directory of this source tree. An additional grant
				 * of patent rights can be found in the PATENTS file in the same directory.
				 *
				 * @providesModule shallowEqual
				 */

				"use strict";

				/**
				 * Performs equality by iterating through keys on an object and returning
				 * false when any key has values which are not strictly equal between
				 * objA and objB. Returns true when the values of all keys are strictly equal.
				 *
				 * @return {boolean}
				 */
				function shallowEqual(objA, objB) {
				  if (objA === objB) {
				    return true;
				  }
				  var key;
				  // Test for A's keys different from B.
				  for (key in objA) {
				    if (objA.hasOwnProperty(key) &&
				        (!objB.hasOwnProperty(key) || objA[key] !== objB[key])) {
				      return false;
				    }
				  }
				  // Test for B's keys missing from A.
				  for (key in objB) {
				    if (objB.hasOwnProperty(key) && !objA.hasOwnProperty(key)) {
				      return false;
				    }
				  }
				  return true;
				}

				module.exports = shallowEqual;

				},{}],142:[function(_dereq_,module,exports){
				/**
				 * Copyright 2013-2014, Facebook, Inc.
				 * All rights reserved.
				 *
				 * This source code is licensed under the BSD-style license found in the
				 * LICENSE file in the root directory of this source tree. An additional grant
				 * of patent rights can be found in the PATENTS file in the same directory.
				 *
				 * @providesModule shouldUpdateReactComponent
				 * @typechecks static-only
				 */

				"use strict";

				/**
				 * Given a `prevElement` and `nextElement`, determines if the existing
				 * instance should be updated as opposed to being destroyed or replaced by a new
				 * instance. Both arguments are elements. This ensures that this logic can
				 * operate on stateless trees without any backing instance.
				 *
				 * @param {?object} prevElement
				 * @param {?object} nextElement
				 * @return {boolean} True if the existing instance should be updated.
				 * @protected
				 */
				function shouldUpdateReactComponent(prevElement, nextElement) {
				  if (prevElement && nextElement &&
				      prevElement.type === nextElement.type &&
				      prevElement.key === nextElement.key &&
				      prevElement._owner === nextElement._owner) {
				    return true;
				  }
				  return false;
				}

				module.exports = shouldUpdateReactComponent;

				},{}],143:[function(_dereq_,module,exports){
				/**
				 * Copyright 2014, Facebook, Inc.
				 * All rights reserved.
				 *
				 * This source code is licensed under the BSD-style license found in the
				 * LICENSE file in the root directory of this source tree. An additional grant
				 * of patent rights can be found in the PATENTS file in the same directory.
				 *
				 * @providesModule toArray
				 * @typechecks
				 */

				var invariant = _dereq_("./invariant");

				/**
				 * Convert array-like objects to arrays.
				 *
				 * This API assumes the caller knows the contents of the data type. For less
				 * well defined inputs use createArrayFrom.
				 *
				 * @param {object|function|filelist} obj
				 * @return {array}
				 */
				function toArray(obj) {
				  var length = obj.length;

				  // Some browse builtin objects can report typeof 'function' (e.g. NodeList in
				  // old versions of Safari).
				  ("production" !== "development" ? invariant(
				    !Array.isArray(obj) &&
				    (typeof obj === 'object' || typeof obj === 'function'),
				    'toArray: Array-like object expected'
				  ) : invariant(!Array.isArray(obj) &&
				  (typeof obj === 'object' || typeof obj === 'function')));

				  ("production" !== "development" ? invariant(
				    typeof length === 'number',
				    'toArray: Object needs a length property'
				  ) : invariant(typeof length === 'number'));

				  ("production" !== "development" ? invariant(
				    length === 0 ||
				    (length - 1) in obj,
				    'toArray: Object should have keys for indices'
				  ) : invariant(length === 0 ||
				  (length - 1) in obj));

				  // Old IE doesn't give collections access to hasOwnProperty. Assume inputs
				  // without method will throw during the slice call and skip straight to the
				  // fallback.
				  if (obj.hasOwnProperty) {
				    try {
				      return Array.prototype.slice.call(obj);
				    } catch (e) {
				      // IE < 9 does not support Array#slice on collections objects
				    }
				  }

				  // Fall back to copying key by key. This assumes all keys have a value,
				  // so will not preserve sparsely populated inputs.
				  var ret = Array(length);
				  for (var ii = 0; ii < length; ii++) {
				    ret[ii] = obj[ii];
				  }
				  return ret;
				}

				module.exports = toArray;

				},{"./invariant":126}],144:[function(_dereq_,module,exports){
				/**
				 * Copyright 2013-2014, Facebook, Inc.
				 * All rights reserved.
				 *
				 * This source code is licensed under the BSD-style license found in the
				 * LICENSE file in the root directory of this source tree. An additional grant
				 * of patent rights can be found in the PATENTS file in the same directory.
				 *
				 * @providesModule traverseAllChildren
				 */

				"use strict";

				var ReactElement = _dereq_("./ReactElement");
				var ReactInstanceHandles = _dereq_("./ReactInstanceHandles");

				var invariant = _dereq_("./invariant");

				var SEPARATOR = ReactInstanceHandles.SEPARATOR;
				var SUBSEPARATOR = ':';

				/**
				 * TODO: Test that:
				 * 1. `mapChildren` transforms strings and numbers into `ReactTextComponent`.
				 * 2. it('should fail when supplied duplicate key', function() {
				 * 3. That a single child and an array with one item have the same key pattern.
				 * });
				 */

				var userProvidedKeyEscaperLookup = {
				  '=': '=0',
				  '.': '=1',
				  ':': '=2'
				};

				var userProvidedKeyEscapeRegex = /[=.:]/g;

				function userProvidedKeyEscaper(match) {
				  return userProvidedKeyEscaperLookup[match];
				}

				/**
				 * Generate a key string that identifies a component within a set.
				 *
				 * @param {*} component A component that could contain a manual key.
				 * @param {number} index Index that is used if a manual key is not provided.
				 * @return {string}
				 */
				function getComponentKey(component, index) {
				  if (component && component.key != null) {
				    // Explicit key
				    return wrapUserProvidedKey(component.key);
				  }
				  // Implicit key determined by the index in the set
				  return index.toString(36);
				}

				/**
				 * Escape a component key so that it is safe to use in a reactid.
				 *
				 * @param {*} key Component key to be escaped.
				 * @return {string} An escaped string.
				 */
				function escapeUserProvidedKey(text) {
				  return ('' + text).replace(
				    userProvidedKeyEscapeRegex,
				    userProvidedKeyEscaper
				  );
				}

				/**
				 * Wrap a `key` value explicitly provided by the user to distinguish it from
				 * implicitly-generated keys generated by a component's index in its parent.
				 *
				 * @param {string} key Value of a user-provided `key` attribute
				 * @return {string}
				 */
				function wrapUserProvidedKey(key) {
				  return '$' + escapeUserProvidedKey(key);
				}

				/**
				 * @param {?*} children Children tree container.
				 * @param {!string} nameSoFar Name of the key path so far.
				 * @param {!number} indexSoFar Number of children encountered until this point.
				 * @param {!function} callback Callback to invoke with each child found.
				 * @param {?*} traverseContext Used to pass information throughout the traversal
				 * process.
				 * @return {!number} The number of children in this subtree.
				 */
				var traverseAllChildrenImpl =
				  function(children, nameSoFar, indexSoFar, callback, traverseContext) {
				    var nextName, nextIndex;
				    var subtreeCount = 0;  // Count of children found in the current subtree.
				    if (Array.isArray(children)) {
				      for (var i = 0; i < children.length; i++) {
				        var child = children[i];
				        nextName = (
				          nameSoFar +
				          (nameSoFar ? SUBSEPARATOR : SEPARATOR) +
				          getComponentKey(child, i)
				        );
				        nextIndex = indexSoFar + subtreeCount;
				        subtreeCount += traverseAllChildrenImpl(
				          child,
				          nextName,
				          nextIndex,
				          callback,
				          traverseContext
				        );
				      }
				    } else {
				      var type = typeof children;
				      var isOnlyChild = nameSoFar === '';
				      // If it's the only child, treat the name as if it was wrapped in an array
				      // so that it's consistent if the number of children grows
				      var storageName =
				        isOnlyChild ? SEPARATOR + getComponentKey(children, 0) : nameSoFar;
				      if (children == null || type === 'boolean') {
				        // All of the above are perceived as null.
				        callback(traverseContext, null, storageName, indexSoFar);
				        subtreeCount = 1;
				      } else if (type === 'string' || type === 'number' ||
				                 ReactElement.isValidElement(children)) {
				        callback(traverseContext, children, storageName, indexSoFar);
				        subtreeCount = 1;
				      } else if (type === 'object') {
				        ("production" !== "development" ? invariant(
				          !children || children.nodeType !== 1,
				          'traverseAllChildren(...): Encountered an invalid child; DOM ' +
				          'elements are not valid children of React components.'
				        ) : invariant(!children || children.nodeType !== 1));
				        for (var key in children) {
				          if (children.hasOwnProperty(key)) {
				            nextName = (
				              nameSoFar + (nameSoFar ? SUBSEPARATOR : SEPARATOR) +
				              wrapUserProvidedKey(key) + SUBSEPARATOR +
				              getComponentKey(children[key], 0)
				            );
				            nextIndex = indexSoFar + subtreeCount;
				            subtreeCount += traverseAllChildrenImpl(
				              children[key],
				              nextName,
				              nextIndex,
				              callback,
				              traverseContext
				            );
				          }
				        }
				      }
				    }
				    return subtreeCount;
				  };

				/**
				 * Traverses children that are typically specified as `props.children`, but
				 * might also be specified through attributes:
				 *
				 * - `traverseAllChildren(this.props.children, ...)`
				 * - `traverseAllChildren(this.props.leftPanelChildren, ...)`
				 *
				 * The `traverseContext` is an optional argument that is passed through the
				 * entire traversal. It can be used to store accumulations or anything else that
				 * the callback might find relevant.
				 *
				 * @param {?*} children Children tree object.
				 * @param {!function} callback To invoke upon traversing each child.
				 * @param {?*} traverseContext Context for traversal.
				 * @return {!number} The number of children in this subtree.
				 */
				function traverseAllChildren(children, callback, traverseContext) {
				  if (children == null) {
				    return 0;
				  }

				  return traverseAllChildrenImpl(children, '', 0, callback, traverseContext);
				}

				module.exports = traverseAllChildren;

				},{"./ReactElement":52,"./ReactInstanceHandles":60,"./invariant":126}],145:[function(_dereq_,module,exports){
				/**
				 * Copyright 2014, Facebook, Inc.
				 * All rights reserved.
				 *
				 * This source code is licensed under the BSD-style license found in the
				 * LICENSE file in the root directory of this source tree. An additional grant
				 * of patent rights can be found in the PATENTS file in the same directory.
				 *
				 * @providesModule warning
				 */

				"use strict";

				var emptyFunction = _dereq_("./emptyFunction");

				/**
				 * Similar to invariant but only logs a warning if the condition is not met.
				 * This can be used to log issues in development environments in critical
				 * paths. Removing the logging code for production environments will keep the
				 * same logic and follow the same code paths.
				 */

				var warning = emptyFunction;

				if ("production" !== "development") {
				  warning = function(condition, format ) {for (var args=[],$__0=2,$__1=arguments.length;$__0<$__1;$__0++) args.push(arguments[$__0]);
				    if (format === undefined) {
				      throw new Error(
				        '`warning(condition, format, ...args)` requires a warning ' +
				        'message argument'
				      );
				    }

				    if (!condition) {
				      var argIndex = 0;
				      console.warn('Warning: ' + format.replace(/%s/g, function()  {return args[argIndex++];}));
				    }
				  };
				}

				module.exports = warning;

				},{"./emptyFunction":107}]},{},[1])(1)
				});
			},
			"redact.js": function (exports, module, require) {
				// utils

				var slice = Array.prototype.slice;
				var concat = Array.prototype.concat;
				var flatten = function(l) { return concat.apply([], l); };

				// really stupid DSL

				function nodeOrTextNode(n) {
				  if (typeof(n) === "object")
				    return n;
				  else
				    return {nodeType: "text", content: n};
				}

				function d(type) {
				  switch(typeof(type)) {
				  case "function": return _dComp.apply(null, arguments);
				  case "string": return _dTag.apply(null, arguments);
				  }
				}

				function _dComp(comp) {
				  return comp.apply(null, slice.call(arguments, 1));
				}

				function _dTag(tag, attr) {
				  var children = slice.call(arguments, 2);
				  return {
				    nodeType: "tag",
				    tag: tag,
				    attrs: attr || {},
				    children: flatten(children).map(nodeOrTextNode)
				  };
				}

				// rendering

				function renderComponent(component) {
				  return render(component());
				}

				function renderTextNode(node) {
				  return document.createTextNode(node.content);
				}

				function renderAttrs(node) {
				  var attrList = [];
				  for (var k in node.attrs)
				    attrList.push(k + "=\"" + node.attrs[k] + "\"");
				  return attrList.join(" ");
				}

				function setEvents(node, events) {
				  for (var k in events) node.addEventListener(k, events[k], false);
				}

				function setAttribute(node, name, value) {
				  if (name === "events")
				    setEvents(node, value);
				  else
				    node.setAttribute(name, value);
				}

				function renderTag(node) {
				  var t = document.createElement(node.tag);
				  for (var k in node.attrs) setAttribute(t, k, node.attrs[k]);
				  node.children.forEach(function(c) { t.appendChild(render(c)); });
				  return t;
				}

				function render(node) {
				  switch(true) {
				  case (typeof(node) === "function"): return renderComponent(node);
				  case (node.nodeType === "tag"): return renderTag(node);
				  case (node.nodeType === "text"): return renderTextNode(node);
				  }
				}

				function root(component, domNode) {
				  var currentNode;
				  return function update() {
				    var args = arguments;
				    window.requestAnimationFrame(function() {
				      if (currentNode) domNode.removeChild(currentNode);
				      domNode.appendChild(currentNode = render(component.apply(null, args)));
				    });
				    return update;
				  };
				}

				module.exports = {
				  d: d,
				  root: root,
				  render: render
				};
			}
		}
	}
})("react-todo/build/app");
